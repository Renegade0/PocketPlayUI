`
--reload language
if(uiTranslationFile) then
	Infinity_DoFile("L_" .. uiTranslationFile)
else
	Infinity_DoFile("L_en_us")
end


styles =
{
	gamelog =
	{
		color = 'B',
		font = 'POSTANTI',
		point = 12,
		useFontZoom = 1,
		valign = 'top',
		halign = 'left',
	},
	normal =
	{
		color = 'B',
		font = 'NORMAL',
		point = 12,
		valign = 'top',
		halign = 'left',
    useFontZoom = 1,
	},
	rg_trajan =
	{
		color = 'B',
		font = 'RGTRAJ',
		point = 16,
		useFontZoom = 1,
		valign = 'top',
		halign = 'left',
	},
	normal_parchment =
	{
		color = '5',
		font = 'NORMAL',
		point = 12,
		valign = 'top',
		halign = 'left',
    useFontZoom = 1,
	},
	title =
	{
		color = '1',
		font = 'REALMS',
		point = 16,
		valign = 'center',
		halign = 'center',
    useFontZoom = 0,
	},
	parchment = 
	{
		color = '5',
		font = 'NORMAL' ,
		point = 12,
		valign = 'top',
		halign = 'left',
    useFontZoom = 1,
	},
	button =
	{
		color = 'B',
		font = 'STONESML' ,
		point = 10,
		valign = 'center',
		halign = 'center',
		upper = 1,
		pad = {8,8,8,8},
    useFontZoom = 0,
	},
	button_parchment =
	{
		color = '5',
		font = 'MODESTOM',
		point = 12,
		valign = 'center',
		halign = 'center',
		pad = {0,5,0,0},
    useFontZoom = 0,
	},
	label =
	{
		color = 'B',
		font = 'STONESML',
		point = 12,
		valign = 'center',
		halign = 'center',
    useFontZoom = 0,
	},
	label_parchment =
	{
		color = '5',
		font = 'STONESML',
		point = 12,
		valign = 'center',
		halign = 'center',
    useFontZoom = 0,
	},
	edit =
	{
		color = 'B',
		font = 'NORMAL',
		point = 12,
		valign = 'top',
		halign = 'left',
    useFontZoom = 1,
	},
	edit_parchment =
	{
		color = '5',
		font = 'NORMAL',
		point = 12,
		valign = 'top',
		halign = 'left',
    useFontZoom = 1,
	},
	list =
	{
		color = 'B',
		font = 'STONESML',
		point = 12,
		valign = 'center',
		halign = 'left',
    useFontZoom = 0,
	},
	list_parchment =
	{
		color = '5',
		font = 'STONESML',
		point = 12,
		valign = 'center',
		halign = 'left',
    useFontZoom = 0,
	},
	gold =
	{
		color = '$',
		font = 'NORMAL',
		point = 12,
		valign = 'center',
		halign = 'center',
    useFontZoom = 0,
	}
}

chapterBackgrounds = {}
chapterBackgrounds[0] = "GUICHP0B"
chapterBackgrounds[1] = "GUICHP1B"
chapterBackgrounds[2] = "GUICHP2B"
chapterBackgrounds[3] = "GUICHP3B"
chapterBackgrounds[4] = "GUICHP4B"
chapterBackgrounds[5] = "GUICHP5B"
chapterBackgrounds[6] = "GUICHP6B"
chapterBackgrounds[7] = "GUICHP7B"
chapterBackgrounds[8] = "GUICHP8B"
chapterBackgrounds[9] = "GUICHP9B"
chapterBackgrounds[10] = "GUICHP10B"
chapterBackgrounds[11] = "GUICHP11B"
chapterBackgrounds[12] = "GUICHP12B"
chapterBackgrounds[13] = "GUICHP13B"
chapterBackgrounds[14] = "GUICHP0A"
chapterBackgrounds[15] = "GUICHP0A"
chapterBackgrounds[16] = "GUICHP0A"
chapterBackgrounds[17] = "GUICHP0A"
chapterBackgrounds[18] = "GUICHP0A"
chapterBackgrounds[19] = "GUICHP0A"
chapterBackgrounds[20] = "BPEND"
chapterBackgrounds[21] = "GUICHP0A"
chapterBackgrounds[22] = "GUICHP0A"
chapterBackgrounds[23] = "GUICHP0A"
chapterBackgrounds[24] = "GUICHP0A"
chapterBackgrounds[25] = "GUICHP0A"
chapterBackgrounds[26] = "GUICHP0A"
chapterBackgrounds[27] = "GUICHP0A"
chapterBackgrounds[28] = "GUICHP0A"
chapterBackgrounds[29] = "GUICHP0A"
chapterBackgrounds[30] = "GUICHP0A"
chapterBackgrounds[31] = "GUICHP0A"
chapterBackgrounds[32] = "GUICHP0A"
chapterBackgrounds[33] = "GUICHP0A"
chapterBackgrounds[34] = "GUICHP0A"
chapterBackgrounds[35] = "GUICHP0A"
chapterBackgrounds[36] = "GUICHP0A"
chapterBackgrounds[37] = "GUICHP0A"
chapterBackgrounds[38] = "GUICHP0A"
chapterBackgrounds[39] = "GUICHP0A"
chapterBackgrounds[40] = "GUICHP0A"
chapterBackgrounds[41] = "GUICHP0A"
chapterBackgrounds[42] = "GUICHP0A"
chapterBackgrounds[43] = "GUICHP0A"
chapterBackgrounds[44] = "GUICHP0A"
chapterBackgrounds[45] = "GUICHP0A"
chapterBackgrounds[46] = "GUICHP0A"
chapterBackgrounds[47] = "GUICHP0A"
chapterBackgrounds[48] = "GUICHP0A"
chapterBackgrounds[49] = "GUICHP0A"
chapterBackgrounds[50] = "GUICHP0A"
chapterBackgrounds[51] = "GUICHP0A"
chapterBackgrounds[52] = "GUIDRM2"
chapterBackgrounds[53] = "GUIDRM3"
chapterBackgrounds[54] = "GUIDRM4"
chapterBackgrounds[55] = "GUIDRM5"
chapterBackgrounds[56] = "GUIDRM6"
chapterBackgrounds[57] = "GUIDRM7"
chapterBackgrounds[58] = "ARRIVE"
chapterBackgrounds[59] = "LEAVE"

chapterBackgrounds[100] = "GUICHP6B"

rgScreenWidth, rgScreenHeight = Infinity_GetScreenSize()

listMetaInfo = {}
combatLog = {}


currentPanelID = 0


function rgIsUltraWide()
	local w, h = Infinity_GetScreenSize()
	if (w > 1550) then
		return false
	else
		return true
	end
end

function displayTHAC()
	thactxt = ''
	thactxt =  characters[currentID].THAC0.current

	if (characters[currentID].THAC0.offhand ) then
		thactxt = thactxt .. '\n' .. characters[currentID].THAC0.offhand
	end

	return thactxt
end

function displayCompiledAC()
	local compiledAC = characters[currentID].AC.current

	if characters[currentID].AC.crushing ~= 0 or characters[currentID].AC.missile ~= 0 or characters[currentID].AC.piercing ~= 0 or characters[currentID].AC.slashing ~= 0 then
		compiledAC = compiledAC .. " (" .. t("MODIFIERS_LABEL") .. ": "

		local numMods = 0
		if characters[currentID].AC.crushing > 0 then
			numMods = numMods + 1
			setStringTokenLua("<ACTOKEN>","+"..characters[currentID].AC.crushing)
			compiledAC = compiledAC .. " " .. t("ACMOD_VS_CRUSHING")
			removeStringTokenLua("<ACTOKEN>")
		elseif characters[currentID].AC.crushing < 0 then
			numMods = numMods + 1
			setStringTokenLua("<ACTOKEN>",characters[currentID].AC.crushing)
			compiledAC = compiledAC .. " " .. t("ACMOD_VS_CRUSHING")
			removeStringTokenLua("<ACTOKEN>")
		end

		if characters[currentID].AC.missile > 0 then
			if numMods > 0 then
				compiledAC = compiledAC .. ", "
			end
			numMods = numMods + 1
			setStringTokenLua("<ACTOKEN>","+"..characters[currentID].AC.missile)
			compiledAC = compiledAC .. " " .. t("ACMOD_VS_MISSILE")
			removeStringTokenLua("<ACTOKEN>")
		elseif characters[currentID].AC.missile < 0 then
			if numMods > 0 then
				compiledAC = compiledAC .. ", "
			end
			numMods = numMods + 1
			setStringTokenLua("<ACTOKEN>",characters[currentID].AC.missile)
			compiledAC = compiledAC .. " " .. t("ACMOD_VS_MISSILE")
			removeStringTokenLua("<ACTOKEN>")
		end

		if characters[currentID].AC.piercing > 0 then
			if numMods > 0 then
				compiledAC = compiledAC .. ", "
			end
			numMods = numMods + 1
			setStringTokenLua("<ACTOKEN>","+"..characters[currentID].AC.piercing)
			compiledAC = compiledAC .. " " .. t("ACMOD_VS_PIERCING")
			removeStringTokenLua("<ACTOKEN>")
		elseif characters[currentID].AC.piercing < 0 then
			if numMods > 0 then
				compiledAC = compiledAC .. ", "
			end
			numMods = numMods + 1
			setStringTokenLua("<ACTOKEN>",characters[currentID].AC.piercing)
			compiledAC = compiledAC .. " " .. t("ACMOD_VS_PIERCING")
			removeStringTokenLua("<ACTOKEN>")
		end

		if characters[currentID].AC.slashing > 0 then
			if numMods > 0 then
				compiledAC = compiledAC .. ", "
			end
			numMods = numMods + 1
			setStringTokenLua("<ACTOKEN>","+"..characters[currentID].AC.slashing)
			compiledAC = compiledAC .. " " .. t("ACMOD_VS_SLASHING")
			removeStringTokenLua("<ACTOKEN>")
		elseif characters[currentID].AC.slashing < 0 then
			if numMods > 0 then
				compiledAC = compiledAC .. ", "
			end
			numMods = numMods + 1
			setStringTokenLua("<ACTOKEN>",characters[currentID].AC.slashing)
			compiledAC = compiledAC .. " " .. t("ACMOD_VS_SLASHING")
			removeStringTokenLua("<ACTOKEN>")
		end

		compiledAC = compiledAC .. ")"
	end

	return compiledAC
end

function displaySTR()
	strtxt = characters[currentID].attr.str.current

	if characters[currentID].attr.str.current == 18 and characters[currentID].attr.str.extra > 0 then
		if characters[currentID].attr.str.extra == 100 then
			strtxt = strtxt .. '/00'
		elseif characters[currentID].attr.str.extra > 9 then
			strtxt = strtxt .. '/' .. characters[currentID].attr.str.extra
		elseif characters[currentID].attr.str.extra > 0 then
			strtxt = strtxt .. '/0' .. characters[currentID].attr.str.extra
		end
	end
	if(characters[currentID].attr.str.current > characters[currentID].attr.str.base or characters[currentID].attr.str.extra > characters[currentID].attr.str.extraBase) then
		strtxt = '^G' .. strtxt .. '^-'
	end
	if(characters[currentID].attr.str.current < characters[currentID].attr.str.base or characters[currentID].attr.str.extra < characters[currentID].attr.str.extraBase) then
		strtxt = '^R' .. strtxt .. '^-'
	end
	return strtxt
end


--tif st traps
--ranr racial
--mage max known spll lvl
--sorc as sorc book mageBookEnabled
--clric turn priestBookEnabled
--druid priestBookEnabled
--paladin turn class it points 10
--bard pick pockts
--monk find traps
--saman dtct illusion
--fight

--local outList = { }
--	local out = ''
--	local num = 0
--    for k, v in ipairs(characters[id].proficiencies.ability) do
--        table.insert(outList, {v.current})
--    end
--	for k, v in ipairs(outList) do
--		if string.find(outList[k][1], Infinity_FetchString(32704)) then
--			out = outList[k][1]
--		end
--end

function rgFirstLetterUpper(instr)
    if string.find(instr, "^%l") then
        instr = string.upper(string.sub(instr, 1, 1)) .. string.sub(instr, 2)
    end
    return instr
end
function rgFetchMageClassString(class)
    if rgGetClassName(class):lower() == rgGetGameEngineString(1081,1081,1081,1081):lower()  or 
		rgGetClassName(class):lower() == rgGetGameEngineString(12837,12837,12837,12837):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(31977,31977,74302,37252):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(32342,32342,103061,40880):lower() then
		return true
	else
		return false
	end
end
function rgFetchFighterClassString(class)
    if rgGetClassName(class):lower() == rgGetGameEngineString(1076,1076,1076,1076):lower() then
		return true
	else
		return false
	end
end
function rgFetchRangerClassString(class)
    if rgGetClassName(class):lower() == rgGetGameEngineString(1078,1078,1078,1078):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(24264,24264,25154,25154):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(24265,24265,25155,25155):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(24266,24266,25156,25156):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(1077,1077,1077,1077):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(24267,24267,25157,25157):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(24268,24268,25158,25158):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(24269,24269,25159,25159):lower() then
		return true
	else
		return false
	end
end
function rgFetchPriestClassString(class)
    if rgGetClassName(class):lower() == rgGetGameEngineString(1079,1079,1079,1079):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(24276,24276,25168,1):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(24277,24277,25169,1):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(24278,24278,25170,1):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(9410,9410,9410,9410):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(31980,31980,74306,37261):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(31983,31983,74309,37264):lower() then
		return true
	else
		return false
	end
end
function rgFetchDruidClassString(class)
    if rgGetClassName(class):lower() == rgGetGameEngineString(1080,1080,1080,1080):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(24279,24279,25171,25171):lower()  or 
		rgGetClassName(class):lower() == rgGetGameEngineString(24280,24280,25173,25173):lower()  or 
		rgGetClassName(class):lower() == rgGetGameEngineString(24281,24281,25174,25174):lower() then
		return true
	else
		return false
	end
end
function rgFetchRogueClassString(class)
    if rgGetClassName(class):lower() == rgGetGameEngineString(1082,1082,1082,1082):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(24270,24270,25160,25160):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(24271,24271,25161,25161):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(24272,24272,25162,25162):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(1083,1083,1083,1083):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(24273,24273,25164,25164):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(24274,24274,25165,25165):lower() or 
		rgGetClassName(class):lower() == rgGetGameEngineString(24275,24275,25166,25166):lower() then
		return true
	else
		return false
	end
end

listXPmage = { 0,2500,5000,10000,20000,40000,60000,90000,135000,250000,375000,750000,1125000,1500000,1875000,2250000,2625000,3000000,3375000,3750000,4125000,4500000,4875000,5250000,5625000,6000000,6375000,6750000,7125000,7500000,7875000,8250000,8625000,9000000,9375000,9750000,10125000,10500000,10875000,11250000 }
listXPfighter = { 0,2000,4000,8000,16000,32000,64000,125000,250000,500000,750000,1000000,1250000,1500000,1750000,2000000,2250000,2500000,2750000,3000000,3250000,3500000,3750000,4000000,4250000,4500000,4750000,5000000,5250000,5500000,5750000,6000000,6250000,6500000,6750000,7000000,7250000,7500000,7750000,8000000 }
listXPranger = { 0,2250,4500,9000,18000,36000,75000,150000,300000,600000,900000,1200000,1500000,1800000,2100000,2400000,2700000,3000000,3300000,3600000,3900000,4200000,4500000,4800000,5100000,5400000,5700000,6000000,6300000,6600000,6900000,7200000,7500000,7800000,8100000,8400000,8700000,9000000,9300000,9600000 }
listXPpriest = { 0,1500,3000,6000,13000,27500,55000,110000,225000,450000,675000,900000,1125000,1350000,1575000,1800000,2025000,2250000,2475000,2700000,2925000,3150000,3375000,3600000,3825000,4050000,4275000,4500000,4725000,4950000,5175000,5400000,5625000,5850000,6075000,6300000,6525000,6750000,6975000,7200000 }
listXPdruid = { 0,2000,4000,7500,12500,20000,35000,60000,90000,125000,200000,300000,750000,1500000,3000000,3150000,3300000,3450000,3600000,3750000,3900000,4150000,4400000,4700000,5000000,5500000,6000000,6500000,7000000,7500000,8000000,8500000,9000000,9500000,10000000,10500000,11000000,11500000,12000000,12500000 }
listXProgue = { 0,1250,2500,5000,10000,20000,40000,70000,110000,160000,220000,440000,660000,880000,1100000,1320000,1540000,1760000,1980000,2200000,2420000,2640000,2860000,3080000,3300000,3520000,3740000,3960000,4180000,4400000,4620000,4840000,5060000,5280000,5500000,5720000,5940000,6160000,6380000,6600000 }
	

--instr = string.upper(string.sub(instr, 1, 1)) .. string.sub(instr, 2)

function updateAttrTable()
	
	statusEffects = { }
	for k, v in pairs(characters[currentID].statusEffects) do
		table.insert(statusEffects, v)
		
	end
	
	listClassXPs1 = { }
	listClassXPs2 = { }
	listClassXPs3 = { }
	
	if rgFetchMageClassString(1) == true then
		listClassXPs1 = listXPmage
	elseif rgFetchFighterClassString(1) == true then
		listClassXPs1 = listXPfighter
	elseif rgFetchRangerClassString(1) == true then
		listClassXPs1 = listXPranger
	elseif rgFetchPriestClassString(1) == true then
		listClassXPs1 = listXPpriest
	elseif rgFetchDruidClassString(1) == true then
		listClassXPs1 = listXPdruid
	elseif rgFetchRogueClassString(1) == true then
		listClassXPs1 = listXProgue
	end
	
	if characters[currentID].classlevel.second ~= nil then
		if rgFetchMageClassString(2) == true then
			listClassXPs2 = listXPmage
		elseif rgFetchFighterClassString(2) == true then
			listClassXPs2 = listXPfighter
		elseif rgFetchRangerClassString(2) == true then
			listClassXPs2 = listXPranger
		elseif rgFetchPriestClassString(2) == true then
			listClassXPs2 = listXPpriest
		elseif rgFetchDruidClassString(2) == true then
			listClassXPs2 = listXPdruid
		elseif rgFetchRogueClassString(2) == true then
			listClassXPs2 = listXProgue
		end
	end
	
	if characters[currentID].classlevel.third ~= nil then
		if rgFetchMageClassString(3) == true then
			listClassXPs3 = listXPmage
		elseif rgFetchFighterClassString(3) == true then
			listClassXPs3 = listXPfighter
		elseif rgFetchRangerClassString(3) == true then
			listClassXPs3 = listXPranger
		elseif rgFetchPriestClassString(3) == true then
			listClassXPs3 = listXPpriest
		elseif rgFetchDruidClassString(3) == true then
			listClassXPs3 = listXPdruid
		elseif rgFetchRogueClassString(3) == true then
			listClassXPs3 = listXProgue
		end
	end
	
	
	local currLevelXP1 = 0
	local currLevelXP2 = 0
	local currLevelXP3 = 0
	
	for k, v in pairs(listClassXPs1) do
		if k == rgGetClassLevelInt(1) then
			currLevelXP1 = v
		end
	end
	if characters[currentID].classlevel.second ~= nil then
		for k, v in pairs(listClassXPs2) do
			if k == rgGetClassLevelInt(2) then
				currLevelXP2 = v
			end
		end
	end
	if characters[currentID].classlevel.third ~= nil then
		for k, v in pairs(listClassXPs3) do
			if k == rgGetClassLevelInt(3) then
				currLevelXP3 = v
			end
		end
	end
	
	listClassLevels = { }
	
	local currLvlPercentage1 = math.floor(((characters[currentID].classlevel.first.xp - currLevelXP1) / (characters[currentID].classlevel.first.nextLvlXp - currLevelXP1))*100)
	table.insert(listClassLevels, { rgGetClassLevelString(1), currLvlPercentage1 })
	if characters[currentID].classlevel.second ~= nil then
		local currLvlPercentage2 = math.floor(((characters[currentID].classlevel.second.xp - currLevelXP2) / (characters[currentID].classlevel.second.nextLvlXp - currLevelXP2))*100)
		if string.match(rgGetClassLevelString(2), rgGetGameEngineString(24371,24371,35063,34575)) then
			currLvlPercentage2 = 0
		end
		table.insert(listClassLevels, { rgGetClassLevelString(2), currLvlPercentage2 })
	end
	if characters[currentID].classlevel.third ~= nil then
		local currLvlPercentage3 = math.floor(((characters[currentID].classlevel.third.xp - currLevelXP3) / (characters[currentID].classlevel.third.nextLvlXp - currLevelXP3))*100)
		table.insert(listClassLevels, { rgGetClassLevelString(3), currLvlPercentage3 })
	end
		
	
	--listAbilities = { }
	--for k, v in ipairs(characters[currentID].proficiencies.ability) do
	--		table.insert(listAbilities, {v.strRef, v.current, v.helpStrRef})
	--		--table.insert(listAbilities, {v.helpStrRef, ''})
	--	end
	--	
	--	showAbilityBonuses = 1
	--	showJustText = 0
	--	showStats = 0
	--	showSpells = 0
	--	for k, v in ipairs(listAbilities) do
	--		helpTextString = helpTextString .. '^M' .. v[2] .. '\n \n'
	--	end
	--	listTest = { }

	listItems = { }
	
	--lastID = currentID
	--helpTextString = ''
	--showClassInfo = 0
	--showJustText = 0
	--showMemorized = 0
	--showBothLists = 0
	--showStats = 1
	--showAbilityBonuses = 0

	--otherlist = { }

	attributeItems = {
		{ characters[currentID].attr.str, 9582 },
		{ characters[currentID].attr.dex, 9584 },
		{ characters[currentID].attr.con, 9583 },
		{ characters[currentID].attr.int, 9585 },
		{ characters[currentID].attr.wis, 9586 },
		{ characters[currentID].attr.cha, 9587 }
		}


	if currentTab == 1 then
		if statusEffects[1] ~= nil then
			table.insert(listItems, { '233', '^D' .. t('STATUS_EFFECTS_LABEL') .. ':' .. '^B'})
		end
		for k, v in pairs(characters[currentID].statusEffects) do
			if v.current == 0 then --haste exception
				table.insert(listItems, {103, '    ' .. Infinity_FetchString(v.strRef)})
			else
				table.insert(listItems, {v.current, '    ' .. Infinity_FetchString(v.strRef)})
			end
		end
		if statusEffects[1] ~= nil then
			table.insert(listItems, { '233', '' })
		end
		table.insert(listItems, { '233', '^D' .. t('SKILLS_LABEL') .. ':' .. '^B'})
		table.insert(listItems, { '233', t('LORE_LABEL') .. ': ' .. characters[currentID].proficiencies.lore.current })
		table.insert(listItems, { '233', t('REPUTATION_LABEL') .. ': ' .. characters[currentID].proficiencies.reputation.current })
		
		
		for k, v in ipairs(characters[currentID].proficiencies.class_skills) do
			table.insert(listItems, { '233', Infinity_FetchString(v.strRef) .. ': '.. v.current .. '^-'})
		end
		
		table.insert(listItems, { '233', '' })
		table.insert(listItems, { '233', '^D' .. t('PROFICIENCIES_LABEL') .. ':' .. '^B'})
		if characters[currentID].proficiencies.weapons.current ~= "" then
			table.insert(listItems, { '233', characters[currentID].proficiencies.weapons.current })
		end
		
		if characters[currentID].proficiencies.fightingstyles.current ~= "" then
			table.insert(listItems, { '233', characters[currentID].proficiencies.fightingstyles.current})
		end
		
		table.insert(listItems, { '233', '' })
		table.insert(listItems, { '233', '^D' .. t('SAVING_THROWS_LABEL') .. ':' .. '^B'})
		table.insert(listItems, { '233', characters[currentID].proficiencies.savingThrows})
		table.insert(listItems, { '233', '' })
		table.insert(listItems, { '233', '^D' .. t('RESISTANCES_LABEL') .. ':' .. '^B' .. '^B'})
		table.insert(listItems, { '233', characters[currentID].proficiencies.resistances})
		--table.insert(listItems, { '233', '' })
		table.insert(listItems, { '233', '^D' .. '\n' .. t('ABILITIES_TITLE') ..  ':' .. '^B'})--11976
		for k, v in ipairs(characters[currentID].proficiencies.ability) do
			table.insert(listItems, {'233', v.current})
		end
	elseif currentTab == 2 then
		listItems = { 
		{ '233', '^D' .. t('BIOGRAPHY_LABEL') .. ':' .. '^B'},
		{ '233', Infinity_FetchString(characters[currentID].biography)},
		}
	elseif currentTab == 3 then
	
		table.insert(listItems, { '233', '^D' .. t('CLASS_LABEL') .. ':' .. '^B' })
		table.insert(listItems, { '233', characters[currentID].classlevel.first.details .. '\n' })
		
		if characters[currentID].classlevel.second ~= nil then
			table.insert(listItems, { '233', characters[currentID].classlevel.second.details .. '\n'})
		end
		
		if characters[currentID].classlevel.third ~= nil then
			table.insert(listItems, { '233', characters[currentID].classlevel.third.details .. '\n'})
		end
		
		table.insert(listItems, { '233', characters[currentID].kitDesc})
		
	elseif currentTab == 4 then
		listItems = { 
		{ '233', '^D' .. Infinity_FetchString(characters[currentID].Stats.partychapxp.strRef) .. '^B\n' .. t('CHAPTER_LABEL') .. ': ' ..  characters[currentID].Stats.partychapxp.current .. '% / ' .. t('GAME_LABEL') .. ': ' ..  characters[currentID].Stats.partygamexp.current .. '%\n'},
		{ '233', '^D' .. Infinity_FetchString(characters[currentID].Stats.partychapkills.strRef) .. '^B\n' .. t('CHAPTER_LABEL') .. ': ' .. characters[currentID].Stats.partychapkills.current .. '% / ' .. t('GAME_LABEL') .. ': ' ..  characters[currentID].Stats.partygamekills.current .. '%\n'},
		{ '233', '^D' .. Infinity_FetchString(characters[currentID].Stats.chapxpvalue.strRef) .. '^B\n' .. t('CHAPTER_LABEL') .. ': ' .. characters[currentID].Stats.chapxpvalue.current .. ' / ' .. t('GAME_LABEL') .. ': ' ..  characters[currentID].Stats.gamexpvalue.current .. '\n'},
		{ '233', '^D' .. Infinity_FetchString(characters[currentID].Stats.chapkills.strRef) .. '^B\n' .. t('CHAPTER_LABEL') .. ': ' .. characters[currentID].Stats.chapkills.current .. ' / ' .. t('GAME_LABEL') .. ': ' ..  characters[currentID].Stats.gamekills.current .. '\n'},
		{ '233', '^D' .. Infinity_FetchString(characters[currentID].Stats.bestenemy.strRef) .. '^B\n' .. characters[currentID].Stats.bestenemy.current .. '\n'},
		{ '233', '^D' .. Infinity_FetchString(characters[currentID].Stats.timespent.strRef) .. '^B\n' .. characters[currentID].Stats.timespent.current .. '\n'},
		{ '233', '^D' .. Infinity_FetchString(characters[currentID].Stats.favspell.strRef) .. '^B\n' .. characters[currentID].Stats.favspell.current .. '\n'},
		{ '233', '^D' .. Infinity_FetchString(characters[currentID].Stats.favweapon.strRef) .. '^B\n' .. characters[currentID].Stats.favweapon.current },
		}
	elseif currentTab == 5 then
		listItems = { 
		{ '233', '^D' .. t('ARMOR_CLASS_LABEL') .. ': ' .. characters[currentID].AC.current .. '^B'},
		--{ '233', characters[currentID].AC.details .. '\n'},
		{ '233', Infinity_FetchString(11766) },
		{ '233', Infinity_FetchString(11768) .. ': ' .. characters[currentID].AC.slashing },
		{ '233', Infinity_FetchString(11769) .. ': ' .. characters[currentID].AC.piercing },
		{ '233', Infinity_FetchString(11770) .. ': ' .. characters[currentID].AC.crushing },
		{ '233', Infinity_FetchString(11767) .. ': ' .. characters[currentID].AC.missile .. '\n' },
		{ '233', '^D' .. t('HIT_POINTS_LABEL') .. ': ' .. characters[currentID].HP.current .. '/' .. characters[currentID].HP.max .. '^B\n'},
		--{ '233', characters[currentID].HP.details .. '\n'},
		{ '233', rgGetTHAC0() .. '\n'},
		
		{ '233', rgGetDamage() .. '\n'},
		
		{ '233', '^D' .. Infinity_FetchString(characters[currentID].proficiencies.numAttacks.strRef) .. ': ' .. characters[currentID].proficiencies.numAttacks.current .. '^B\n'},
		{ '233', '^D' .. t('CURRENT_SCRIPT_LABEL') .. ': ' .. characters[currentID].proficiencies.currentScript .. '^B'},
		}
	end

end
function rgGetTHAC0()
	local str = '^D' .. t('THAC0_LABEL') .. ': ' .. characters[currentID].THAC0.current .. '^B'
	if(characters[currentID].THAC0.offhand) then
		str = str .. "\n" .. t('OFF_HAND_THAC0') .. ': ' .. characters[currentID].THAC0.offhand
	end
	return str
end
function rgGetDamage()
	local str =  '^D' .. t('DAMAGE_LABEL') .. ': ' .. characters[currentID].damage.min .. ' - ' .. characters[currentID].damage.max .. '^B'
	if(characters[currentID].damage.minOffhand and characters[currentID].damage.maxOffhand) then
		str = str .. "\n"  .. t('OFF_HAND_DAMAGE') .. ': ' .. characters[currentID].damage.minOffhand .. ' - ' .. characters[currentID].damage.maxOffhand 
	end
	return str
end
function rgGetDamageDetails()
	if characters[currentID].damage.detailsOffhand == nil or characters[currentID].damage.detailsOffhand == "" then
		return characters[currentID].damage.details
	else
		return characters[currentID].damage.details.."\n\n"..characters[currentID].damage.detailsOffhand
	end
end
function rgGetTHAC0Details()
	if characters[currentID].THAC0.detailsOffhand == nil or characters[currentID].THAC0.detailsOffhand == "" then
		return characters[currentID].THAC0.details
	else
		return characters[currentID].THAC0.details.."\n\n"..characters[currentID].THAC0.detailsOffhand
	end
end

characters = {}
statusEffects = { }

currentID = 16974083
canLevelUp = 0
openAdvance = 0
notrealValue = 0

function trunc(str, len)
	if str:len() < len then
		return str
	else
		return str:sub(1,len) .. "..."
	end
end

function rgCharDescString1(char)
	return char.name .. ', ' .. char.class .. ""
end
function rgCharDescString2(char)
	return Infinity_FetchString(char.race) .. ' ' .. Infinity_FetchString(char.gender) .. ', ' ..  Infinity_FetchString(char.alignment) .. ""
end

function isStatModified(index)
	if (index == 1 ) then
		--strength
		return (characters[currentID].attr.str.current ~= characters[currentID].attr.str.base or characters[currentID].attr.str.extra ~= characters[currentID].attr.str.extraBase)
	else
		return attributeItems[index][1].current ~= attributeItems[index][1].base
	end
end

function displayAttr(index)
	str = 0
	if (index == 1 ) then
		str = displaySTR()
	else
		str = displayBuff( attributeItems[index][1].current, attributeItems[index][1].base, 1)
	end
	return str
end

function getPercent(first, second)
	tempNumber = ( first/second ) *100
	return tempNumber
end

function displayBuff( current, base, highisbetter)
	
	tmpstr = ''	
	--Infinity_Log( current .. ' - '.. base )
	if(highisbetter) then
		if(current > base) then
			tmpstr	= '^G' .. current .. '^-'
		elseif (current < base) then
			tmpstr	= '^R' .. current .. '^-'			
		end
	else
		if(current > base) then
			tmpstr	= '^R' .. current .. '^-'
		elseif (current < base) then
			tmpstr	= '^G' .. current .. '^-'			
		end
	end
	if(current == base) then
		tmpstr = current		
	end
	return tmpstr
end

function getNextLevelString()
	local nextLevelXp = characters[currentID].level.nextLvlXp - characters[currentID].level.xp
	local str = ""
	if(nextLevelXp > 0) then
		str = t("NEXT_LEVEL_LABEL")
		str = str .. " "
		str = str .. nextLevelXp
		str = str .. " "
		str = str .. t("XP_LABEL")
	else
		str = t("READY_TO_LEVEL_LABEL")
	end
	return str
	
end

function CurrentlyInGame()
	if characterScreen:IsInGame() == true then
		return true
	else
		return false
	end
end

function getClassString()
	local out = characters[currentID].classlevel.first.details
	if ( characters[currentID].classlevel.second ) then
		out = out .. '\n\n' .. characters[currentID].classlevel.second.details
	end
	if ( characters[currentID].classlevel.third ) then
		out = out .. '\n\n' .. characters[currentID].classlevel.third.details
	end

	out = out .. '\n\n' .. characters[currentID].kitDesc

	return out
end
function rgRepeats(s,c)
    local _,n = s:gsub(c,"")
    return n
end

--"rgGetClassLevelString(1) .. ' - ^D' .. characters[currentID].classlevel.first.xp .. ' / ' .. characters[currentID].classlevel.first.nextLvlXp .. ' XP'"
function rgGetClassLevelString(num)
	--dual 19719
	local rgClass = ''
	local rgLevel = ''
	local rgLevelXP = ''
	if num == 1 then 
		rgClass = ',' .. characters[currentID].classlevel.first.details
		rgLevel = string.match(characters[currentID].classlevel.first.details, '%d.')
		if characters[currentID].classlevel.first.xp < characters[currentID].classlevel.first.nextLvlXp then 
			rgLevelXP = ' - ^D' .. characters[currentID].classlevel.first.xp .. ' / ' .. characters[currentID].classlevel.first.nextLvlXp .. ' XP'
		else
			rgLevelXP = ' - ^D' .. t('LEVEL_UP_BUTTON')
		end
	elseif num == 2 then
		rgClass = ',' .. characters[currentID].classlevel.second.details
		rgLevel = string.match(characters[currentID].classlevel.second.details, '%d.')
		if characters[currentID].classlevel.second.xp < characters[currentID].classlevel.second.nextLvlXp then 
			rgLevelXP = ' - ^D' .. characters[currentID].classlevel.second.xp .. ' / ' .. characters[currentID].classlevel.second.nextLvlXp .. ' XP'
		else
			if rgRepeats(rgClass,'\n') == 2 then
				rgLevelXP = ' - ^D' .. t('LEVEL_UP_BUTTON')
			else 
				rgLevelXP = ' - ^D' .. rgGetGameEngineString(24371,24371,35063,34575)
			end
		end
		--local MultiClass = ',' .. characters[currentID].proficiencies.details
		--local DualClass1 = string.match(MultiClass, ',.-\n\n')
		--rgLevelXP = string.match(DualClass1, '[^,\n\n]+')
		--if characters[currentID].classlevel.second.details == Infinity_FetchString(19719) then 
		--	rgLevelXP = 'Inactive'
		--end
		--fileLine(2, characters[currentID].classlevel.second.details)
	else
		rgClass = ',' .. characters[currentID].classlevel.third.details 
		rgLevel = string.match(characters[currentID].classlevel.third.details, '%d.')
		if characters[currentID].classlevel.third.xp < characters[currentID].classlevel.third.nextLvlXp then 
			rgLevelXP = ' - ^D' .. characters[currentID].classlevel.third.xp .. ' / ' .. characters[currentID].classlevel.third.nextLvlXp .. ' XP'
		else
			rgLevelXP = ' - ^D' .. t('LEVEL_UP_BUTTON')
		end
	end
    local rgClass1 = string.match(rgClass, ',.-:')
	local out = string.match(rgClass1, '[^,:]+') .. ' (' .. string.match(rgLevel, '[^\n]+') .. ')' .. rgLevelXP
	
    return out
end
--function fileLine (lineNum, fileName)
--  local count = 0
--  for line in io.lines(fileName) do
--    count = count + 1
--    if count == lineNum then return line end
--  end
--  error(fileName .. " has fewer than " .. lineNum .. " lines.")
--end
function rgGetClassLevelInt(num)
	local rgLevel = ''
	if num == 1 then 
		rgLevel = string.match(characters[currentID].classlevel.first.details, '%d.')
	elseif num == 2 then
		rgLevel = string.match(characters[currentID].classlevel.second.details, '%d.')
	else
		rgLevel = string.match(characters[currentID].classlevel.third.details, '%d.')
	end
	local out = string.match(rgLevel, '[^\n]+') - 0
	
    return out
end
function rgGetClassName(num)
	local rgClass = ''
	if num == 1 then 
		rgClass = ',' .. characters[currentID].classlevel.first.details
	elseif num == 2 then
		rgClass = ',' .. characters[currentID].classlevel.second.details
	else
		rgClass = ',' .. characters[currentID].classlevel.third.details
	end
    local rgClass1 = string.match(rgClass, ',.-:')
	local out = string.match(rgClass1, '[^,:]+')
	
    return out
end
function rgLvlUpFrame(num)
	local out = 0
	if num >= 100 then 
		out = 1
	end
	return out
end


	listItems = { }
	listTest = { }

	helpTextString = ''
	currentTabIndex = 0
	currentTab = 0
	currentItem = 0
	ShowClassInfo = 0
	showStats = 0
	showJustText = 0
	showMemorized = 0
	showBothLists = 0
	characterViewable = true
`
menu
{
	name	'CHARACTER'
	modal lua "not CurrentlyInGame()"
	align center center
	ignoreEsc
	onopen
	"
		Infinity_SetBackground('BACKGROUND')
		if currentTab == 0 then
			currentTab = 1
		end
		--currentTabIndex = 1
		--currentItem = 0
		--showStats = 0
		--showJustText = 0
		--showClassInfo = 0
		--showAbilityBonuses = 0
		--showMemorized = 0
		--showBothLists = 0
		characterViewable = true
		
		if(CurrentlyInGame()) then
			pushSidebars()
		end
		updateAttrTable()
	"
	onclose
	"
		Infinity_PopMenu('CHARACTER_CUSTOMIZE')
		Infinity_PopMenu('CHARACTER_BIOGRAPHY')
		Infinity_PopMenu('CHARACTER_SHOW_BIOGRAPHY')
		Infinity_PopMenu('CHARACTER_INFO')
		Infinity_PopMenu('CHARACTER_SCRIPT')
		Infinity_PopMenu('CHARACTER_EXPORT')
		Infinity_PopMenu('CHARACTER_SOUND')
		Infinity_PopMenu('CHARACTER_COLOR')
		Infinity_PopMenu('CHARACTER_SHOW_CLASSINFO')
		Infinity_PopMenu('CHARGEN_PORTRAIT')
		popSidebars()
	"

	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}
	
	
	--label
	--{
	--	name		"LABEL_2_268435495"
	--	area		102 14 456 42
	--	text		lua "characters[currentID].name"
	--	text style  	'title'
	--	text align	center center
	--	enabled "characterViewable"
	--}

	--label
	--{
	--	area		802 552 208 43
	--	progressbar lua "getPercent(characters[currentID].level.xp, characters[currentID].level.nextLvlXp)" --progress percentage, number 0-100
	--	greyscale	0 --display greyscale or not, number 0-1
	--	progressbar color	128 0 0 255	 --color when percentage != 100
	--	progressbar full	128 0 0 255	 --color when percentage == 100
	--	enabled "characterViewable"
	--}
	--label
	--{
	--	area		808 488 202 43
	--	text		lua "getNextLevelString()"
	--	text style  'normal'
	--	text align	center center
	--	text shadow 1
	--	enabled "characterViewable"
	--}



	button
	{
		area 572 180 180 66
		--text 'Info'
		highlightgroup	recpage
		bam RGPRCBT
		--ScaleToClip
		--text style 'rg_trajan'
		--text align center center
		--pad 20 0 20 0
		--text point 8
		action "currentTab = 1; updateAttrTable()"
	}
	button
	{
		area 572 250 180 66
		--text 'CLASS_LABEL'
		highlightgroup	recpage
		bam RGPRCBT
		Sequence 1
		action "currentTab = 3; updateAttrTable()"
	}
	button
	{
		area 572 320 180 66
		--text 'COMBAT_STATS_LABEL'
		highlightgroup	recpage
		bam RGPRCBT
		Sequence 2
		action "currentTab = 5; updateAttrTable()"
	}

	--button
	--{
	--	area 598 400 139 40
	--	bam 'GUIOSTSM'
	--	text 'ABILITIES_BUTTON'
	--	text style "button"
	--	action "currentTab = 8; updateAttrTable()"
	--}

	button
	{
		area 572 390 180 66
		--text 'STATS_LABEL'
		highlightgroup	recpage
		bam RGPRCBT
		Sequence 3
		action "currentTab = 4; updateAttrTable()"
	}

	button
	{
		area 572 460 180 66
		--text 'Bio'
		bam RGPRCBT
		highlightgroup	recpage
		Sequence 4
		action "currentTab = 2; updateAttrTable()"
	}
	button
	{
		area 572 530 180 66
		--text 'OPTIONS_TITLE'
		highlightgroup	recpage
		bam RGPRCBT
		Sequence 5
		action "currentTab = 6; updateAttrTable()"
	}

	list
	{
		column 
		{ 
			width 100
			label
			{
				area		0 0 450 70 
				bam rgprecbc
				sequence 1
				align left top
				ScaleToClip
			}
			label
			{
				area		0 0 310 70 
				text		lua "Infinity_FetchString( attributeItems[rowNumber][1].strRef)"
				text style  'normal'
				pad 35 0 0 2
				text align	left center
			}
			label
			{
				area		310 0 140 70
				text		lua  "displayAttr(rowNumber)" --"listItems[rowNumber][1].current"
				text style  'normal'
				text align center center
				pad 0 0 35 2
				text shadow lua "isStatModified(rowNumber)"
				
			}
		}

		area 108 180 450 420
		
		rowheight	70
		table		"attributeItems"
		var			currentItem
		hidehighlight
		enabled "characterViewable"
		action
		"
			helpTextString = Infinity_FetchString( attributeItems[currentItem][2])
		"		
	}

	--list
	--{
	--	column 
	--	{ 
	--		width 13
	--		label
	--		{
	--			area		0 0 22 -1
	--			bam			lua "statusEffects[rowNumber].bam"
	--			sequence	lua "statusEffects[rowNumber].current"
	--			text align	center center				
	--		}
	--	}
	--	column 
	--	{ 
	--		width 87
	--		label
	--		{
	--			area		0 0 -1 -1
	--			text		lua "Infinity_FetchString(statusEffects[rowNumber].strRef)"
	--			text style  'normal'
	--			text align	left center
	--		}
	--	}
    --
	--	area 822 627 176 108
	--	rowheight	dynamic
	--	table		"statusEffects"
	--	var		notrealValue
	--	scrollbar	'rgpscrl'
	--	enabled "characterViewable"
	--	hidehighlight	
	--}

	
	
	label
	{
		area		108 20 630 70 
		bam rgprecbc
		ScaleToClip
		text lua "rgCharDescString1(characters[currentID])"
		text style 'rg_trajan'
		text color '$'
		text point 12
		text align left center
		pad 35 5 35 5
		enabled "characterViewable"
	}
	label
	{
		area		108 90 630 70 
		bam rgprecbc
		ScaleToClip
		text lua "rgCharDescString2(characters[currentID])"
		text style 'normal'
		text align left center
		pad 35 5 35 5
		enabled "characterViewable"
	}
	
	--label
	--{
	--	area		108 620 629 65 
	--	bam RGPBUT1
	--	ScaleToClip
	--	text lua "rgGetClassLevelString(1)"
	--	text style 'normal'
	--	text align left center
	--	pad 55 5 0 5
	--}
	--label
	--{
	--	area		108 690 629 65 
	--	enabled	"characters[currentID].classlevel.second ~= nil"
	--	bam RGPBUT1
	--	ScaleToClip
	--	text lua "rgGetClassLevelString(2)"
	--	text style 'normal'
	--	text align left center
	--	pad 55 5 0 5
	--}
	list
	{		
		column 
		{ 
			width 100
			label
			{
				area		0 0 -1 -1
				bam rgprbar
				ScaleToClip
				sequence lua "rgLvlUpFrame(listClassLevels[rowNumber][2])"
				frame lua "listClassLevels[rowNumber][2]"
				text lua "listClassLevels[rowNumber][1]"
				text style 'normal'
				text align left center
				pad 35 5 35 5
			}
		}

		area 108 620 644 140
		
		rowheight	70
		table		"listClassLevels"
		var			currentItem
		scrollbar	'rgpscrl'		
		hidehighlight
		action
		"
			if listClassLevels[currentItem][2] >= 100 then
				characterScreen:OnLevelUpButtonClick();
			end
		"		
	}
	--label
	--{
	--	area		308 620 266 65 
	--	text		lua "characters[currentID].classlevel.first.xp .. ' / ' .. characters[currentID].classlevel.first.nextLvlXp .. ' XP'"
	--	text style  'normal'
	--	text align	right center
	--	text shadow 1
	--}
	--label
	--{
	--	area		308 690 266 65 
	--	text		lua "characters[currentID].classlevel.second.xp .. ' / ' .. characters[currentID].classlevel.second.nextLvlXp .. ' XP'"
	--	text style  'normal'
	--	text align	right center
	--	text shadow 1
	--}
	
	-- class section
		
	text
	{
		enabled		"showClassInfo"
		area		882 144 342 420
		text		lua "getClassString()"
		text style  'normal'
		scrollbar	'rgpscrl'		
	}

	-- ability bonus stuff
	
	list
	{		
		column 
		{ 
			width 100
			label
			{
				area		0 0 -1 -1
				bam            'STATES'
				sequence    lua "listItems[rowNumber][1]"
				text align	left center
				enabled "listItems[rowNumber][1] ~= '233'"
				--ScaleToClip
			}
			label
			{
				area		0 0 -1 -1
				text		lua "listItems[rowNumber][2]" 
				text style  'normal'
				text align	left center
			}
		}

		area 756 20 508 735
		
		--enabled		"showAbilityBonuses"
		rowheight	dynamic
		table		"listItems"
		var			currentItem
		scrollbar	'rgpscrl'		
		hidehighlight
		action
		"
			--helpTextString = Infinity_FetchString( listItems[currentItem][1].helpStrRef)
		"		
	}

	-- Stats screen stuff
	list
	{		
		column 
		{ 
			width 65
			label
			{
				area		0 0 -1 -1
				text		lua "Infinity_FetchString(otherlist[rowNumber][1])" 
				text style  'normal'
				text align	left center

			}
		}
		column 
		{ 
			width 35
			label
			{
				area		0 0 -1 -1
				text		lua " otherlist[rowNumber][2]"				
				text style  'normal'
				text align	center center
			}
		}

		area 862 166 372 182
		
		enabled		"showStats"
		rowheight	45
		table		"otherlist"
		var			currentItem
		scrollbar	'rgpscrl'		
		hidehighlight
		action
		"
			--helpTextString = Infinity_FetchString( listItems[currentItem][1].helpStrRef)
		"		
	}

	label
	{
		enabled		"showStats"
		area		1156 336 88 40
		text		"GAME_LABEL"
		text style  'label'
		text align	center center
	}
	label
	{
		enabled		"showStats"
		area		1074 336 90 38
		text		"CHAPTER_LABEL"
		text style  'label'
		text align	center center
	}

	list
	{		
		column 
		{ 
			width 65
			label
			{
				area		0 0 -1 -1
				text		lua "Infinity_FetchString(listItems[rowNumber][1])"  --lua " '^M' .. Infinity_FetchString(listItems[rowNumber][1]) .. '^-' .. '\n'  .. trunc(Infinity_FetchString( listItems[rowNumber][3]), 140)"
				text style  'normal'
				text align	left center

			}
		}
		column 
		{ 
			width 20
			label
			{
				area		0 0 -1 -1
				text		lua " listItems[rowNumber][2]"				
				text style  'normal'
				text align	center center
				
			}
		}
		column 
		{ 
			width 15
			label
			{
				area		0 0 -1 -1
				text		lua " listItems[rowNumber][3]"				
				text style  'normal'
				text align	center center
				
			}
		}

		area 862 366 372 186
		
		enabled		"showStats"
		rowheight	45
		table		"listItems"
		var			currentItem
		scrollbar	'rgpscrl'		
		hidehighlight
		action
		"
			--helpTextString = Infinity_FetchString( listItems[currentItem][1].helpStrRef)
		"		
	}


	-- Biography section 	

	--button
	--{ 
	--	enabled		"(currentTab == 4 or currentTab == 3) and openAdvance"
	--	area		570 158 206 46
	--	text		"SHOW_DETAILS_BUTTON"
	--	text style	'button'
	--	bam			GUIOSTUM
	--	action
	--	"
	--		helpTextString = ''
	--		openAdvance = 0
	--		for k, v in ipairs(listItems) do
	--			helpTextString = helpTextString .. '^M' .. Infinity_FetchString( v[1])  .. ': '.. v[2] .. '^-' .. '\n' ..trunc( Infinity_FetchString(v[3]), 140)  ..'\n \n'
	--		end
	--		
	--	"
	--}

	--text
	--{
	--	enabled		"showJustText"
	--	area		776 28 484 432
	--	text		lua "helpTextString"
	--	text style  'normal'
	--	text align	left top
	--	scrollbar	'rgpscrl'
	--}
	
	label
	{
		enabled		"currentTab == 6"
		area		876 31 262 406
		bam rgprecbc
		sequence 2
	}
	button
	{
		enabled "currentTab == 6"
		name		"BUTTON_2_2"
		area		886 44 242 380
		--text		lua "characters[currentID].portrait"
		text align	center center
		text point	10
		text color	B
		bitmap		lua "characters[currentID].portrait"
		action
		"
			Infinity_Log(dump(characters, 0))
		"
	}
		
	button
	{
		enabled 	"CurrentlyInGame() and currentTab == 6"
		name		"BUTTON_2_50"
		area		800 668 420 64
		text		"CUSTOMIZE_BUTTON"
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		clickable lua "characterScreen:IsMultiPlayerModifyable()"
		action 
		"
			characterScreen:OnCustomizeButtonClick();
		"
	}
	button
	{
		enabled 	"CurrentlyInGame() and currentTab == 6"
		name		"BUTTON_2_36"
		area		800 520 420 64
		text		"EXPORT_BUTTON"
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		clickable lua "characterScreen:IsExportButtonClickable()"
		action 
		"
			characterScreen:OnExportButtonClick();
		"
	}
	
	button
	{
		enabled 	"CurrentlyInGame() and currentTab == 6"
		clickable	lua "characterScreen:IsReformPartyButtonClickable()"
		name		"BUTTON_2_51"
		area		800 594 420 64
		text		"REFORM_PARTY_BUTTON"
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		action		"characterScreen:OnReformPartyButtonClick();"
	}
	button
	{
		enabled 	"CurrentlyInGame() and currentTab == 6"
		name		"BUTTON_2_0"
		area		800 446 420 64
		text		"DUAL_CLASS_BUTTON"
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		clickable	lua "characterScreen:IsDualClassButtonClickable()"
		action 		
		"
			popup2Button('DUALCLASS_CONFIRMATION', 'YES_BUTTON', function() characterScreen:OnDualClassButtonClick() end, 'NO_BUTTON')
		"
	}
	--button
	--{
	--	enabled 	"CurrentlyInGame() and characterScreen:IsLevelUpButtonClickable()"
	--	name		"BUTTON_2_37"
	--	area		356 620 381 62
	--	text		"LEVEL_UP_BUTTON"
	--	bam RGPBUT1
	--	ScaleToClip
	--	text style 'rg_trajan'
	--	text align center center
	--	pad 20 0 20 0
	--	sequence	3
	--	--clickable	lua "characterScreen:IsLevelUpButtonClickable()"
	--	action		" characterScreen:OnLevelUpButtonClick();"
	--}
	
	button
	{
		enabled 	"CurrentlyInGame()"
		on escape
		area		699 122 53 50
		action
		"
			e:SelectEngine(worldScreen)
		"
	}

	button
	{
		enabled 	"not CurrentlyInGame()"
		area		384 690 368 70
		text		"DONE_BUTTON"
		bam RGPBUT1
		ScaleToClip
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		action		"Infinity_PopMenu()"
	}
	--button
	--{
	--	area 16 690 368 70
	--	bam RGPBUT1
	--	ScaleToClip
	--	text lua "partyImport.character[1].createdelete"
	--	text style "rg_trajan"
	--	text align center center
	--	pad 30 5 30 5
	--	action
	--	"
	--		createPartyScreen:OnCreateDeleteButtonClick(0)
	--	"
	--}
}


menu
{
	name 'CHARACTER_CUSTOMIZE'
	align center center
	modal
	ignoreesc
	onOpen
	"
		currentPanelID = const.CUSTOMIZE_ID
	"
	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}

	text
	{
		area 646 110 610 454
		text 11327 --Customize help text
		scrollbar 'rgpscrl'
		text style	normal
	}
	label
	{
		area	38 14 774 44
		text	"CUSTOMIZE_TITLE"
		text style 'rg_trajan'
		text color '$'
		text align left center
	}
	button
	{
		area		38 110 566 64
		text "APPEARANCE_BUTTON"
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		action		"characterScreen:OnAppearanceButtonClick()"
	}
	button
	{
		area		38 184 566 64
		text "SOUNDS_BUTTON"
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		clickable lua "characterScreen:IsAppearanceButtonClickable();"
		action		"characterScreen:OnSoundsButtonClick()"
	}
	button
	{
		area		38 258 566 64
		text "COLORS_BUTTON"
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		action		"characterScreen:OnHairSkinButtonClick()"
	}
	button
	{
		area		38 334 566 64
		text "SCRIPT_BUTTON"
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		action		"characterScreen:OnScriptButtonClick()"
	}
	button
	{
		area		38 410 566 64
		text "BIOGRAPHY_BUTTON"
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		clickable lua "characterScreen:IsAppearanceButtonClickable();"
		action		"characterScreen:OnCusomizeBiographyButtonClick()"
	}
	button
	{
		on escape
		area 198 672 478 77
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			currentPanelID = 0
			Infinity_PopMenu('CHARACTER_CUSTOMIZE')
		"
	}
	button
	{
		area  682 672 478 77
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		text "DONE_BUTTON"		
		action 
		"
			characterScreen:OnDoneButtonClick()
			currentPanelID = 0
			Infinity_PopMenu('CHARACTER_CUSTOMIZE')
		"
	}
}
`
recBioEdit = ""
recBioEditBackup = ""
`
menu
{
	name 'CHARACTER_BIOGRAPHY'
	align center center
	ignoreesc
	onOpen
	"
		recBioEditBackup = recBioEdit
		currentPanelID = 23
	"
	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}
	label
	{
		area	38 14 774 44
		text	"BIOGRAPHY_TITLE"
		text style 'rg_trajan'
		text color '$'
		text align left center
	}
	edit
	{
		name		"recBioEditArea"
		area		548 110 728 526
		var			recBioEdit
		scrollbar	'rgpscrl'
		text style	"edit"
		fill        112 111 111 64
	}

	button
	{
		area		38 110 490 64
		text "CLEAR_BUTTON"	
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		action		"recBioEdit = ''"
	}
	button
	{
		area		38 184 490 64
		text "REVERT_BUTTON"	
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		action		"recBioEdit = recBioEditBackup"
	}
	button
	{
		on escape
		area 198 672 478 77
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
	button
	{
		area  682 672 478 77
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		text "DONE_BUTTON"		
		action 
		"
			characterScreen:OnDoneButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
}


`
scriptList_idx = 0
showingSmartOptions = false
function formatScriptName(text)
	local i =  string.find(text, ":", #text)
	if(i) then 
		text = string.sub(text,1, i - 1)
	end
	if(#text > 35) then
		text = string.sub(text,1, 35)
		text = text .. "..."
	end
	return text
end

scriptOptions = 
{
	{'SCRIPT_ATTACK_ENEMIES_LABEL',			'SCRIPT_ATTACK_ENEMIES_DESCRIPTION',		 1, 0, 0},
	{'SCRIPT_USE_MELEE_WEAPONS_LABEL',		'SCRIPT_USE_MELEE_WEAPONS_DESCRIPTION',		 2, 0, 0},
	{'SCRIPT_USE_RANGED_WEAPONS_LABEL',		'SCRIPT_USE_RANGED_WEAPONS_DESCRIPTION',	 3, 0, 0},
	{'SCRIPT_USE_ITEMS_LABEL',				'SCRIPT_USE_ITEMS_DESCRIPTION',				 4, 0, 0},
	{'SCRIPT_USE_SPECIAL_ABILITIES_LABEL',	'SCRIPT_USE_SPECIAL_ABILITIES_DESCRIPTION',	 5, 0, 0},
	{'SCRIPT_USE_OFFENSIVE_SPELLS_LABEL',	'SCRIPT_USE_OFFENSIVE_SPELLS_DESCRIPTION',	 6, 0, 0},
	{'SCRIPT_USE_DEFENSIVE_SPELLS_LABEL',	'SCRIPT_USE_DEFENSIVE_SPELLS_DESCRIPTION',	 7, 0, 0},
	{'SCRIPT_FIND_TRAPS_LABEL',				'SCRIPT_FIND_TRAPS_DESCRIPTION',			 8, 0, 0},
	{'SCRIPT_HIDE_IN_SHADOWS_LABEL',		'SCRIPT_HIDE_IN_SHADOWS_DESCRIPTION',		 9, 0, 0},
	{'SCRIPT_SING_BATTLESONG_LABEL',		'SCRIPT_SING_BATTLESONG_DESCRIPTION',		10, 0, 0},
	{'SCRIPT_TURN_UNDEAD_LABEL',			'SCRIPT_TURN_UNDEAD_DESCRIPTION',			11, 0, 0}
}

function handleScriptOptionChange(option)
	local wasOn = scriptOptions[option][4] == 2

	if option == 2 then --Melee
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option+1][4] = 0
			scriptOptions[option+1][5] = false
		end
	elseif option == 3 then --Ranged
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option-1][4] = 0
			scriptOptions[option-1][5] = false
		end
	elseif option == 8 then --Find Traps
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option+1][4] = 0
			scriptOptions[option+1][5] = false
			scriptOptions[option+2][4] = 0
			scriptOptions[option+2][5] = false
			scriptOptions[option+3][4] = 0
			scriptOptions[option+3][5] = false
		end
	elseif option == 9 then --Hide
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option-1][4] = 0
			scriptOptions[option-1][5] = false
			scriptOptions[option+1][4] = 0
			scriptOptions[option+1][5] = false
			scriptOptions[option+2][4] = 0
			scriptOptions[option+2][5] = false
		end
	elseif option == 10 then --Sing
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option-2][4] = 0
			scriptOptions[option-2][5] = false
			scriptOptions[option-1][4] = 0
			scriptOptions[option-1][5] = false
			scriptOptions[option+1][4] = 0
			scriptOptions[option+1][5] = false
		end
	elseif option == 11 then --Turn
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option-3][4] = 0
			scriptOptions[option-3][5] = false
			scriptOptions[option-2][4] = 0
			scriptOptions[option-2][5] = false
			scriptOptions[option-1][4] = 0
			scriptOptions[option-1][5] = false
		end
	else
		scriptOptions[option][4] = toggleFrame(scriptOptions[option][4])
		if scriptOptions[option][4] == 0 then
			scriptOptions[option][5] = false
		else
			scriptOptions[option][5] = true
		end
	end
end
function shouldShowDescriptionBox()
	if showingSmartOptions == true then
		return "GUICHISD"
	else
		return "GUICHISF"
	end
end
`
menu
{
	name 'CHARACTER_SCRIPT'
	align center center
	ignoreesc
	onOpen 
	"
		doneEnabled = characterScreen:IsDoneButtonClickable(currentID)
		currentPanelID = const.SCRIPT_ID

		showingSmartOptions = (scriptList_idx == 2)
		scriptDescription = t(scriptOptions[scriptList_idx][2])

		for index, var in pairs(scriptOptions) do
			var[5] = characterScreen:GetTempSmartScriptLocal(var[3])
			if var[5] == false then
				var[4] = 0
			else
				var[4] = 2
			end
		end
	"
	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}
	label
	{
		area	38 14 774 44
		text	"SCRIPTS_TITLE"
		text style 'rg_trajan'
		text color '$'
		text align left center
	}

	--label
	--{
	--	area 820 14 366 44
	--	text	"CURRENT_SCRIPT_LABEL"
	--	text style	'rg_trajan'
	--}
	text
	{
		area 954 74 374 574
		text lua "scriptDescription"
		scrollbar 'rgpscrl'
		text style	normal
		enabled "showingSmartOptions == true"
	}

	text
	{
		area 492 74 668 574
		text lua "scriptDescription"
		scrollbar 'rgpscrl'
		text style	normal
		enabled "showingSmartOptions == false"
	}

	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				enabled "scriptList[rowNumber] ~= ''"
				text lua "formatScriptName(scriptList[rowNumber])"
				text style	"normal"
				text point 8
				pad 8 0 0 0
			}
			label
			{
				area -10 -10 10000 10000
				enabled "scriptList[rowNumber] == ''"
				rectangle	1
			}
		}
		area 38 74 420 574
		rowheight	40
		table		"scriptList"
		var			"scriptList_idx"
		scrollbar	'rgpscrl'
		action
		"
			showingSmartOptions = (scriptList_idx == 2)
			if scriptList[scriptList_idx] ~= '' then
				Infinity_OnScriptItemSelect(scriptList_idx - 1)
				doneEnabled = characterScreen:IsDoneButtonClickable(currentID)
			else
				scriptList_idx = 0
				scriptDescription = ''
				doneEnabled = false
			end
		"
	}

	list
	{
		
		column 
		{ 
			width 80
			label
			{
				area 10 0 -1 -1
				text lua "t( scriptOptions[rowNumber][1])"
				text style	"normal"
				text align right center
			}
		}
		column 
		{ 
			width 20
			label
			{
				area		20 8 50 50
				bam			RGRNDBUT
				ScaleToClip
				align 		left top
				frame		lua "scriptOptions[rowNumber][4]"
			}
		}

		area 472 74 464 574
		
		rowheight	50
		table		"scriptOptions"
		var			selScriptOpt
		scrollbar	'rgpscrl'
		enabled 	"showingSmartOptions == true"

		action		
		"
			scriptDescription = t(scriptOptions[selScriptOpt][2])
			selectedSL = 0
			selFeedOpt = 0

			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')
				handleScriptOptionChange(selScriptOpt)
			end
		"
	}

	button
	{
		on escape
		area 198 672 478 77
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
	button
	{
		clickable lua "doneEnabled"
		area  682 672 478 77
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		text "DONE_BUTTON"		
		action 
		"
			if showingSmartOptions == true then
				for index, var in pairs(scriptOptions) do
					characterScreen:SetTempSmartScriptLocal(var[3], var[5])
				end
			end

			characterScreen:OnDoneButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
			
		"
	}
}
`
list_GUIREC_13_0_idx = 0
characterExportCharacterEdit = ""
`
menu
{
	name 'CHARACTER_EXPORT'
	align center center
	modal
	ignoreEsc
	onOpen
	"
		currentPanelID = const.EXPORT_ID;
		Infinity_FocusTextEdit('characterExportCharacterEditArea');
	"
	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}
	label
	{
		area	38 14 774 44
		text	"EXPORT_TITLE"
		text style 'rg_trajan'
		text color '$'
		text align left center
	}

	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "list_GUIREC_13_0[rowNumber]"
				text style "list"
				pad 8 0 0 0
			}
		}
		area 38 178 382 472
		rowheight	40
		table		"list_GUIREC_13_0"
		var			"list_GUIREC_13_0_idx"
		scrollbar	'rgpscrl'
		action
		"
			Infinity_OnCharacterItemSelect(list_GUIREC_13_0_idx - 1)
		"
	}
	label
	{
		area		38 98 402 44
		text		"EXPORT_FILENAME_LABEL"
		text style	"rg_trajan"
		text color 	3
	}
	label
	{
			area		440 98 372 44
			fill        100 111 111 64
	}
	edit
	{
		name		"characterExportCharacterEditArea"
		area		446 102 362 36
		var			characterExportCharacterEdit
		text style	"edit"
		maxlines	1
		action
		"
			if(characterExportCharacterEdit:len() > 7 and key_pressed ~= 8) then				
				return 0
			else
				Infinity_UpdateCharacterRecordExportPanel()
				return 1
			end
		"

	}
	text
	{
		area 446 178 714 472
		text 10962
		text style	normal
		scrollbar 'rgpscrl'
	}
	button
	{
		on escape
		area 198 672 478 77
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			Infinity_PopMenu('CHARACTER_EXPORT')
			currentPanelID = 0
		"
	}
	button
	{
		clickable	lua "characterScreen:IsDoneButtonClickable(currentID)"
		area  682 672 478 77
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		text "DONE_BUTTON"		
		action 
		"
			characterScreen:OnDoneButtonClick()
		"
	}
}
`
list_GUIREC_20_5_idx = 0
doneEnabled = 0
`
menu
{
	name 'CHARACTER_SOUND'
	align center center
	ignoreesc
	onOpen 
	"
		currentPanelID = const.SOUND_ID
		Infinity_OnSoundItemSelect(0)
		doneEnabled = characterScreen:IsDoneButtonClickable(currentID)
	"
	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}
	label
	{
		area	38 14 774 44
		text	"SOUND_TITLE"
		text style 'rg_trajan'
		text color '$'
		text align left center
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "getFileNameStringRef(rowNumber, list_GUIREC_20_5)"
				text style	"list"
				pad 8 0 0 0
			}
		}
		area 38 90 630 555
		rowheight	40
		table		"list_GUIREC_20_5"
		var			"list_GUIREC_20_5_idx"
		scrollbar	'rgpscrl'
		action
		"
			Infinity_OnSoundItemSelect(list_GUIREC_20_5_idx - 1)
			doneEnabled = characterScreen:IsDoneButtonClickable(currentID)
		"
	}
	text
	{
		area 682 90 478 386
		text "SOUND_DESCRIPTION"
		scrollbar 'rgpscrl'
		text style	normal
	}
	button
	{
		clickable lua "list_GUIREC_20_5_idx"
		area  682 526 478 77
		text	"PLAY_SOUND_BUTTON"
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		action 
		"	
			characterScreen:OnPlayButtonClick();			
		"
	}
	button
	{
		on escape
		area 198 672 478 77
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
	button
	{
		clickable lua "doneEnabled"
		area  682 672 478 77
		bam RGPBUT1
		ScaleToClip
		text style 'rg_trajan'
		text align center center
		pad 40 5 40 5
		text point 12
		text "DONE_BUTTON"		
		action 
		"
			characterScreen:OnDoneButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
}
`
function toggleFrame(curFrame)
	if curFrame == 0 then 
		return 2
	else 
		return 0
	end 
end
function getSelected(cur, my)
	if cur == my then 
		return 1
	else 
		return 0
	end 
end
function rgGetSelectedBackground(cur, my)
	if cur == my then 
		return 0
	else 
		return 1
	end 
end
function removeStoryModeOption()
	for index = 1, #toggleTitles-1, 1 do
		toggleTitles[index] = toggleTitles[index+1]
	end
	toggleTitles[#toggleTitles] = nil
end
function addStoryModeOption()
	for index = #toggleTitles, 1, -1 do
		toggleTitles[index+1] = toggleTitles[index]
	end
	toggleTitles[1] = {'DIFFICULTY_LABEL_STORYMODE',	'DIFFICULTY_DESCRIPTION_STORYMODE_BGEE',	65, 0, 0}
end

function removeOptionFromList(list, option)
	local startingPoint = 1
	local found = false
	for index = 1, #list-1, 1 do
		if list[index][3] == option then
			startingPoint = index
			found = true
			break
		end
	end
	if found == true then
		for index = startingPoint, #list-1, 1 do
			list[index] = list[index+1]
		end
		list[#list] = nil
	end
end

toggleTitles = {
{"DIFFICULTY_LABEL_STORYMODE_MIXED",	"DIFFICULTY_DESCRIPTION_STORYMODE_BGEE",	65, 0, 0},
{"ENABLE_CLOUD_LABEL",					"ENABLE_CLOUD_DESCRIPTION", 		60, 0, 0},
{"WORLDMAP_HIGHLIGHT_LABEL",			"WORLDMAP_HIGHLIGHT_DESCRIPTION", 	66, 0, 0},
{"MP_CHAT_LABEL",						"MP_CHAT_DESCRIPTION",				67, 0, 0},
{"GORE_LABEL",							"GORE_DESCRIPTION", 				19, 0, 0},
{"WEATHER_LABEL",						"WEATHER_DESCRIPTION", 				47, 0, 0},
{"GROUP_INFRA_LABEL",					"GROUP_INFRA_DESCRIPTION", 			42, 0, 0},
{"HEAL_ON_REST_LABEL",					"HEAL_ON_REST_DESCRIPTION", 		50, 0, 0},
{"MAX_HP_ON_LEVEL_LABEL",				"MAX_HP_ON_LEVEL_DESCRIPTION", 		55, 0, 0},
{"NO_DAMAGE_INCREASE_LABEL",			"NO_DAMAGE_INCREASE_DESCRIPTION", 	64, 0, 0},
{"AUTO_USE_MAGIC_AMMO_LABEL",			"AUTO_USE_MAGIC_AMMO_DESCRIPTION", 	68, 0, 0},
}

selectedOpt = 0
helpString = 0

ttDelaySLDR = 0
keyboardSLDR = 0
mouseSLDR = 0
difficultySLDR = 0

panelID = 8

function getDifficulty(d)
	local text = ""
	if ( d ==0 ) then
		text = t("DIFFICULTY_LABEL_EASY")
	elseif (d == 1) then
		text = t("DIFFICULTY_LABEL_NORMAL")
	elseif (d == 2) then
		text = t("DIFFICULTY_LABEL_CORERULES")
	elseif (d == 3) then
		text = t("DIFFICULTY_LABEL_HARD")
	elseif (d == 4) then
		text = t("DIFFICULTY_LABEL_INSANE")
	elseif (d == 5) then
		text = string.upper(t("MULTIPLAYER_DIFFICULTY_LABEL")).." "..t("DIFFICULTY_LABEL_LEGACYOFBHAAL")
	end
	return text
end
`

menu
{
	name	'OPTIONS_GAMEPLAY'
	align center center
	modal
	onOpen
	"
		panelID = 8
		helpString = 'GAMEPLAY_DESCRIPTION'
		selectedOpt = 0
		selectedSL = 0

		if Infinity_GetOption(59, 8) ~= 0 and toggleTitles[1][3] == 65 then
			removeStoryModeOption()
		elseif Infinity_GetOption(59, 8) == 0 and toggleTitles[1][3] ~= 65 then
			addStoryModeOption()
		end
 
		if Infinity_CanCloudSave() == false and (toggleTitles[1][3] == 60 or toggleTitles[2][3] == 60) then
			removeOptionFromList(toggleTitles,60)
		end

		ttDelaySLDR = Infinity_GetOption(1, panelID)
		keyboardSLDR = Infinity_GetOption(3, panelID)
		mouseSLDR = Infinity_GetOption(2, panelID)
		difficultySLDR = Infinity_GetOption(12, panelID)
		
		for index, var in pairs(toggleTitles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
 			end
		end
	"

	
	
	button
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
		action
		"
			helpString = 'GAMEPLAY_DESCRIPTION'
			selectedOpt = 0
			selectedSL = 0
		"
	}
	label
	{
		area		16 12 680 52
		text		"GAMEPLAY_TITLE"
		text style	'rg_trajan'
		text color '$'
	}

	list
	{
		
		column 
		{ 
			width 85
			label
			{	
				enabled "helpString == toggleTitles[rowNumber][2]"
				area 0 0 -1 -1
				bam rgpslct
				ScaleToClip
			}
			label
			{
				area 10 0 -1 -1
				text lua "t( toggleTitles[rowNumber][1])"
				text style "normal"
				text align left center
			}
		}
		column 
		{ 
			width 15
			label
			{
				area		10 8 55 55
				bam			RGRNDBUT
				ScaleToClip
				align 		left top
				frame		lua "toggleTitles[rowNumber][4]"
			}
		}

		area 16 74 476 600
		hidehighlight
		rowheight	55
		table		"toggleTitles"
		var		selectedOpt
		scrollbar	'rgpscrl'

		action		
		"
			panelID = 8
			selectedSL = 0
			helpString = toggleTitles[selectedOpt][2]

			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')

				toggleTitles[selectedOpt][4] = toggleFrame(toggleTitles[selectedOpt][4])

				if toggleTitles[selectedOpt][4] == 0 then
					toggleTitles[selectedOpt][5] = 0
				else 
					toggleTitles[selectedOpt][5] = 1
				end
			end
			if selectedOpt == 1 and toggleTitles[1][5] == 1 then
				groundItemsButtonToggle = 1
				highlightButtonToggle = 1
			end
		"
	}
	
	text
	{
		area		1016 70 334 604
		text		lua "t(helpString)"
		text style	normal
		text align	left top
		text point	12
		scrollbar	'rgpscrl'
	}

	text
	{
		area		514 80 242 40
		text		"TOOLTIP_DELAY_LABEL"
		text style	"rg_trajan"
		text align	right center
		text upper
		bam rgpslct
		ScaleToClip
		sequence lua "rgGetSelectedBackground(selectedSL, 1)"
		action 
		"
			helpString = 'TOOLTIP_DELAY_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 1
		" 
	}
	
	slider
	{
		area 772 74 200 50
		position "ttDelaySLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'rgsldrbc'
		scaleToClip
		sequence 0
		frame	 1
		settings	40
		pad 3 0 4 0
		action 
		"
			helpString = 'TOOLTIP_DELAY_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 1
		" 
	}

	--text
	--{
	--	area		514 162 242 40	
	--	text		"KEYBOARD_SCRLSPEED_LABEL"
	--	text style	"rg_trajan"
	--	text align	right center
	--	text upper
	--	bam rgpslct
	--	ScaleToClip
	--	sequence lua "rgGetSelectedBackground(selectedSL, 2)"
	--	enabled "not e:IsTouchUI()"
	--	action 
	--	"
	--		helpString = 'KEYBOARD_SCRLSPEED_DESCRIPTION' 
	--		selectedOpt = 0
	--		selectedSL = 2
	--	" 
	--}
	--slider
	--{
	--	area 772 156 200 50
	--	position "keyboardSLDR"
	--	bam	 'SLDRSTAR'
	--	mosaic GUISLDR
	--	sequence 0
	--	frame	 1
	--	settings	40
	--	pad 3 0 4 0
	--	enabled "not e:IsTouchUI()"
	--	action 
	--	"
	--		helpString = 'KEYBOARD_SCRLSPEED_DESCRIPTION' 
	--		selectedOpt = 0
	--		selectedSL = 2
	--	" 
	--}
    --
	--text
	--{
	--	area		514 246 242 40	
	--	text		"MOUSE_SCRLSPEED_LABEL"
	--	text style	"rg_trajan"
	--	text align	right center
	--	text upper
	--	bam rgpslct
	--	ScaleToClip
	--	sequence lua "rgGetSelectedBackground(selectedSL, 3)"
	--	enabled "not e:IsTouchUI()"
	--	action 
	--	"
	--		helpString = 'MOUSE_SCRLSPEED_DESCRIPTION' 
	--		selectedOpt = 0
	--		selectedSL = 3
	--	" 
	--}
	--slider
	--{
	--	area 772 241 200 50
	--	position "mouseSLDR"
	--	bam	 'SLDRSTAR'
	--	mosaic GUISLDR
	--	sequence 0
	--	frame	 1
	--	settings	40
	--	pad 3 0 4 0
	--	enabled "not e:IsTouchUI()"
	--	action 
	--	"
	--		helpString = 'MOUSE_SCRLSPEED_DESCRIPTION' 
	--		selectedOpt = 0
	--		selectedSL = 3
	--	" 
	--}

	text
	{
		area		514 204 242 40
		text		"DIFFICULTY_LABEL"
		text style	"rg_trajan"
		text align	right center
		text upper
		bam rgpslct
		ScaleToClip
		sequence lua "rgGetSelectedBackground(selectedSL, 4)"
		enabled "Infinity_GetOption(59, 8) == 0"
		action 
		"
			helpString = 'DIFFICULTY_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 4
		" 
	}
	slider
	{
		area 772 198 200 50
		position "difficultySLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'rgsldrbc'
		scaleToClip
		sequence 0
		frame	 1
		settings	5
		pad 3 0 4 0
		enabled "Infinity_GetOption(59, 8) == 0 and toggleTitles[1][4] == 0"
		action 
		"
			helpString = 'DIFFICULTY_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 4
		" 
	}
	label
	{
		area		772 256 200 32	
		text		lua "getDifficulty(difficultySLDR)"
		text style	"rg_trajan"
		text align	center center
		enabled "Infinity_GetOption(59, 8) == 0 and toggleTitles[1][4] == 0"
	}
	label
	{
		area		446 329 380 57
		text		lua "getDifficulty(5)"
		text style	"rg_trajan"
		text align	center center
		enabled "Infinity_GetOption(59, 8) ~= 0"
	}
	--fakes for story mode
	slider
	{
		area 626 329 200 39
		position "0"
		bam	 'SLDRSTAR'
		sliderBackground 'rgsldrbc'
		scaleToClip
		sequence 0
		frame	 1
		settings	5
		pad 3 0 4 0
		enabled "Infinity_GetOption(59, 8) == 0 and toggleTitles[1][4] ~= 0"
		action 
		"
			helpString = 'DIFFICULTY_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 4
		" 
	}
	label
	{
		area		626 368 200 23	
		text		lua "getDifficulty(0)"
		text style	"rg_trajan"
		text align	center center
		enabled "Infinity_GetOption(59, 8) == 0 and toggleTitles[1][4] ~= 0"
	}
	label
	{
		area 626 329 200 39
		enabled "Infinity_GetOption(59, 8) == 0 and toggleTitles[1][4] ~= 0"
		fill 1 1 1 150
	}
	
	--button
	--{
	--	bam			RGPBUT1
	--	area		514 438 458 66
	--	text		"ASSIGN_KEYS_BUTTON"
	--	text style	"rg_trajan"
	--	ScaleToClip
	--	align center center
	--	pad 30 5 30 5
	--	enabled "not e:IsTouchUI()"
	--	action
	--	"
	--		Infinity_PushMenu( 'OPTIONS_KEYBINDINGS' );
	--		selectedOpt = 0
	--	"
	--}
	button
	{
		area		514 350 458 66
		bam			RGPBUT1
		text 		"FEEDBACK_BUTTON"
		text style	"rg_trajan"
		ScaleToClip
		align center center
		pad 30 5 30 5
		action
		"

			Infinity_PushMenu( 'OPTIONS_FEEDBACK' );
			selectedOpt = 0
		"
	}
	button
	{
		area		514 488 458 66
		bam			RGPBUT1
		text 		"AUTO_PAUSE_BUTTON"
		text style	"rg_trajan"
		ScaleToClip
		align center center
		pad 30 5 30 5
		action
		"
			selectedOpt = 0
			Infinity_PushMenu( 'OPTIONS_AUTOPAUSE' );
		"
	}
	button
	{
		area		182 682 474 76
		bam			RGPBUT1
		text 		"CANCEL_BUTTON"
		text style	"rg_trajan"
		ScaleToClip
		align center center
		pad 30 5 30 5
		action
		"
			Infinity_PopMenu()
		"
	}
	button
	{
		area		714 682 474 76		
		bam			RGPBUT1
		text 		"DONE_BUTTON" --Done
		text style	"rg_trajan"
		ScaleToClip
		align center center
		pad 30 5 30 5
		action
		"
			panelID = 8
			Infinity_ChangeOption( 1, ttDelaySLDR, panelID)
			Infinity_ChangeOption( 3, keyboardSLDR, panelID )
			Infinity_ChangeOption( 2, mouseSLDR, panelID )
			Infinity_ChangeOption( 12, difficultySLDR + 1, panelID)

			selectedOpt = 0
			selectedSL = 0

			for index, var in pairs(toggleTitles) do
				
				Infinity_ChangeOption( var[3], var[5], panelID)
						
			end

			panelID = 8
			Infinity_PopMenu()
		"
	}

}

`

selOptAP = 0

function rgAddAutoPauseToggles()
	autoPauseToggles = { 
	{'WEAPON_UNUSABLE_LABEL',18036, 5 , 0, 0},
	{'END_OF_ROUND_LABEL',10640, 25, 0, 0},
	{'ENEMY_SIGHTED_LABEL',23514, 26, 0, 0},
	--{'SPELL_CAST_LABEL',24432, 31, 0, 0},
	--{'TRAP_FOUND_LABEL',24433, 34, 0, 0}
	}
	
	
	characterPauseToggles = { 
	--{'CENTER_MEMBER_LABEL',24434, 37, 0, 0},
	{'CHARACTER_HIT_LABEL',18032, 1 , 0, 0},
	{'CHARACTER_INJURED_LABEL',18033, 2 , 0, 0},
	{'CHARACTER_DEATH_LABEL',18034, 3 , 0, 0},
	{'CHARACTER_ATTACKED_LABEL',18035, 4 , 0, 0},
	{'CHARACTER_TARGET_DESTROYED',18037, 13, 0, 0},
	}
	local game = rgGameEngine
	if game == 0 or game == 1 then
		table.insert(autoPauseToggles, {'SPELL_CAST_LABEL',24432, 31, 0, 0})
		table.insert(autoPauseToggles, {'TRAP_FOUND_LABEL',24433, 31, 0, 0})
		table.insert(characterPauseToggles, {'CENTER_MEMBER_LABEL',24434, 31, 0, 0})
	elseif game == 2 then
		table.insert(autoPauseToggles, {'SPELL_CAST_LABEL',31872, 31, 0, 0})
		table.insert(autoPauseToggles, {'TRAP_FOUND_LABEL',58171, 31, 0, 0})
		table.insert(characterPauseToggles, {'CENTER_MEMBER_LABEL',10571, 31, 0, 0})
	elseif game == 3 then
		table.insert(autoPauseToggles, {'SPELL_CAST_LABEL',31872, 31, 0, 0})
		table.insert(autoPauseToggles, {'TRAP_FOUND_LABEL',34672, 31, 0, 0})
		table.insert(characterPauseToggles, {'CENTER_MEMBER_LABEL',10571, 31, 0, 0})
	end
end

`

menu
{
	name	'OPTIONS_AUTOPAUSE'
	modal
	align center center
	onOpen
	"
		panelID = 10
		selOptAP = 0
		autopauseString = 18044
		rgAddAutoPauseToggles()
		
		for index, var in pairs(autoPauseToggles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end
		
		for index, var in pairs(characterPauseToggles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end
	"
	onclose
	"
		autoPauseToggles = { }
		characterPauseToggles = { }
	"

	button
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
		action
		"
			autopauseString = 18044
			selOptAP = 0
		"
	}
	label
	{
		area		16 12 680 52
		text		"AUTO_PAUSE_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	list
	{
		
		column 
		{ 
			width 90 
			label
			{	
				enabled "autopauseString == autoPauseToggles[rowNumber][2]"
				area 0 0 -1 -1
				bam rgpslct
				ScaleToClip
			}
			label
			{
				area 10 0 -1 -1
				text lua "t( autoPauseToggles[rowNumber][1])"
				text style "normal"
				text align left center
			}
		}
		column 
		{ 
			width 10 
			label
			{
				area		0 18 35 35
				bam			RGRNDBUT
				ScaleToClip
				align 		left top
				frame		lua "autoPauseToggles[rowNumber][4]"
			}
		}

		area 550 112 384 504
		hideHighlight
		rowheight	70
		table		"autoPauseToggles"
		var		selOptAP
		scrollbar	'rgpscrl'

		action		
		"
			selOptAPC = 0
			autopauseString = autoPauseToggles[selOptAP][2]

			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')

				autoPauseToggles[selOptAP][4] = toggleFrame(autoPauseToggles[selOptAP][4])

				if autoPauseToggles[selOptAP][4] == 0 then
					autoPauseToggles[selOptAP][5] = 0
				else 
					autoPauseToggles[selOptAP][5] = 1
				end
			end
		"
	}
	list
	{
	
		column 
		{ 
			width 90 
			label
			{	
				enabled "autopauseString == characterPauseToggles[rowNumber][2]"
				area 0 0 -1 -1
				bam rgpslct
				ScaleToClip
			}
			label
			{
				area 10 0 -1 -1
				text lua "t( characterPauseToggles[rowNumber][1])"
				text style "normal"
				text align left center
			}
		}
		column 
		{ 
			width 10 
			label
			{
				area		0 18 35 35
				bam			RGRNDBUT
				ScaleToClip
				align 		left top
				frame		lua "characterPauseToggles[rowNumber][4]"
			}
		}

		area 34 112 494 504
		hideHighlight
		rowheight	70
		table		"characterPauseToggles"
		var		selOptAPC
		scrollbar	'rgpscrl'

		action		
		"
			selOptAP = 0
			autopauseString = characterPauseToggles[selOptAPC][2]

			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')

				characterPauseToggles[selOptAPC][4] = toggleFrame(characterPauseToggles[selOptAPC][4])

				if characterPauseToggles[selOptAPC][4] == 0 then
					characterPauseToggles[selOptAPC][5] = 0
				else 
					characterPauseToggles[selOptAPC][5] = 1
				end

				--Infinity_ChangeOption(characterPauseToggles[selOptAPC][3], characterPauseToggles[selOptAPC][5], panelID )
			end
		"
	}
	
	text
	{
		area		966 112 372 504
		text		lua "Infinity_FetchString(autopauseString)"
		text style	normal
		scrollbar	'rgpscrl'
	}

	button
	{
		area		182 682 474 76
		bam			RGPBUT1
		text 		"CANCEL_BUTTON"
		text style	"rg_trajan"
		ScaleToClip
		align center center
		pad 30 5 30 5
		action
		"
			panelID = 8
			helpString = 'GAMEPLAY_DESCRIPTION'
			Infinity_PopMenu()
		"
	}
	button
	{
		area		714 682 474 76		
		bam			RGPBUT1
		text 		"DONE_BUTTON" --Done
		text style	"rg_trajan"
		ScaleToClip
		align center center
		pad 30 5 30 5
		action
		"
			panelID = 10

			for index, var in pairs(autoPauseToggles) do
				Infinity_ChangeOption( var[3], var[5], panelID)		
			end
			for index, var in pairs(characterPauseToggles) do
				Infinity_ChangeOption( var[3], var[5], panelID)		
			end

			panelID = 8
			Infinity_PopMenu()
		"
	}
}

`
graphicsToggles = { }
function rgAddGraphicsToggles()
	local game = rgGameEngine
	table.insert(graphicsToggles, {'FULL_SCREEN_LABEL',18000, 9 , 0, 0, 0})
	if game == 0 or game == 1 then
		table.insert(graphicsToggles, {'HARDWARE_CURSOR_LABEL',32205, 13, 0, 0, 0})
		table.insert(graphicsToggles, {'SCALE_UI_LABEL',32206, 14, 0, 0, 0})
		table.insert(graphicsToggles, {'ZOOM_LOCK_LABEL',32712, 36, 0, 0, 0})
		table.insert(graphicsToggles, {'SPRITE_OUTLINE_LABEL',32708, 15, 0, 0, 0})
		table.insert(graphicsToggles, {'GREYSCALE_ON_PAUSE_LABEL',32709, 66, 0, 0, 0})
		table.insert(graphicsToggles, {'HIGHLIGHT_SPRITE_LABEL',32710, 67, 0, 0, 0})
		table.insert(graphicsToggles, {'DITHER_ALWAYS_LABEL',18021, 52, 0, 0, 0})
		table.insert(graphicsToggles, {'SHOW_HP_LABEL',32715, 53, 0, 0, 0})
		table.insert(graphicsToggles, {'SHOW_HEALTHBAR_LABEL',32718, 65, 0, 0, 0})
	elseif game == 2 then
		table.insert(graphicsToggles, {'HARDWARE_CURSOR_LABEL',93703, 13, 0, 0, 0})
		table.insert(graphicsToggles, {'SCALE_UI_LABEL',93704, 14, 0, 0, 0})
		table.insert(graphicsToggles, {'ZOOM_LOCK_LABEL',103188, 36, 0, 0, 0})
		table.insert(graphicsToggles, {'SPRITE_OUTLINE_LABEL',103189, 15, 0, 0, 0})
		table.insert(graphicsToggles, {'GREYSCALE_ON_PAUSE_LABEL',103190, 66, 0, 0, 0})
		table.insert(graphicsToggles, {'HIGHLIGHT_SPRITE_LABEL',103191, 67, 0, 0, 0})
		table.insert(graphicsToggles, {'DITHER_ALWAYS_LABEL',18021, 52, 0, 0, 0})
		table.insert(graphicsToggles, {'SHOW_HP_LABEL',103205, 53, 0, 0, 0})
		table.insert(graphicsToggles, {'SHOW_HEALTHBAR_LABEL',103192, 65, 0, 0, 0})
	elseif game == 3 then
		table.insert(graphicsToggles, {'HARDWARE_CURSOR_LABEL',34783, 13, 0, 0, 0})
		table.insert(graphicsToggles, {'SCALE_UI_LABEL',34784, 14, 0, 0, 0})
		table.insert(graphicsToggles, {'ZOOM_LOCK_LABEL',40771, 36, 0, 0, 0})
		table.insert(graphicsToggles, {'SPRITE_OUTLINE_LABEL',40852, 15, 0, 0, 0})
		table.insert(graphicsToggles, {'GREYSCALE_ON_PAUSE_LABEL',40853, 66, 0, 0, 0})
		table.insert(graphicsToggles, {'HIGHLIGHT_SPRITE_LABEL',40854, 67, 0, 0, 0})
		table.insert(graphicsToggles, {'DITHER_ALWAYS_LABEL',18021, 52, 0, 0, 0})
		table.insert(graphicsToggles, {'SHOW_HP_LABEL',0, 53, 0, 0, 0})
		table.insert(graphicsToggles, {'SHOW_HEALTHBAR_LABEL',40856, 65, 0, 0, 0})
	end
	table.insert(graphicsToggles, {'SHOW_BLACK_SPACE_LABEL','SHOW_BLACK_SPACE_DESCRIPTION', 69, 0, 0, 0})
	table.insert(graphicsToggles, {'NEAREST_NEIGHBOUR_LABEL','NEAREST_NEIGHBOUR_DESCRIPTION', 70, 0, 0, 0})
end

addedDirectx = false
function appendDirectXOption()
	if addedDirectx == false then
		dxOption = {'DIRECTX_LABEL', 32725, 68, 0, 0, 0}
		table.insert(graphicsToggles, dxOption)
		addedDirectx = true
	end
end

selectedGraphicOpt = 0

fontSizeSLDR = 0
fontSizeCancel = 0
function formatGraphicsInfoString()
	return options['Graphics']['version'] .. "\nrunning on " .. options['Graphics']['renderer'] .. "\ndriver provided by " .. options['Graphics']['vendor']
end
`

menu
{
	name	'OPTIONS_GRAPHICS'
	modal
	align center center
	onOpen
	"
		if e:HasDirectX() then
			appendDirectXOption()
		end
		rgAddGraphicsToggles()
		panelID = 6
		helpString = 18042
		selectedGraphicOpt = 0
		selectedSL = 0
		fontSizeSLDR = Infinity_GetOption(22, panelID)
		fontSizeCancel = Infinity_GetOption(22, panelID)
		
		for index, var in pairs(graphicsToggles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			var[6] = 0
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end

		if e:IsTouchUI() then
			removeOptionFromList(graphicsToggles, 9)
			removeOptionFromList(graphicsToggles, 13)
		end
	"
	onClose "graphicsToggles = { }"
	


	button
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
		action
		"
			helpString = 18042
			selectedSL = 0
		"
	}

	label
	{
		area		16 12 680 52
		text		"GRAPHICS_TITLE"
		text style	'rg_trajan'
		text color '$'
	}

	--label
	--{
	--	area		710 528 634 132
	--	text		lua "formatGraphicsInfoString()"
	--	text style	normal
	--	text align	center center
	--}
	
	--text
	--{
	--	area		720 24 158 42
	--	text		"DISPLAY_OPTIONS_LABEL"
	--	text style	"button"
	--	text align 	right center
	--	text highlight lua "getSelected(selectedSL, 2)"
	--	action 
	--	"
	--		selectedGraphicOpt = 0
	--		selectedSL = 2
	--	"
	--}

	list
	{
		
		column 
		{ 
			width 80
			label
			{	
				enabled "helpString == graphicsToggles[rowNumber][2]"
				area 0 0 -1 -1
				bam rgpslct
				ScaleToClip
			}
			label
			{
				area 0 0 -1 -1
				text lua "t( graphicsToggles[rowNumber][1])"
				text style "normal"
				text align right center
			}
		}
		column 
		{ 
			width 20 
			label
			{
				area		50 4 50 50
				bam			RGRNDBUT
				ScaleToClip
				align 		left top
				frame		lua "graphicsToggles[rowNumber][4]"
			}
		}

		area 16 92 706 568
		hideHighlight
		rowheight	50
		table		"graphicsToggles"
		var		selectedGraphicOpt
		scrollbar	'rgpscrl'

		action		
		"
			panelID = 6
			helpString = graphicsToggles[selectedGraphicOpt][2]
			selectedSL = 0
			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')
				graphicsToggles[selectedGraphicOpt][4] = toggleFrame(graphicsToggles[selectedGraphicOpt][4])

				if graphicsToggles[selectedGraphicOpt][4] == 0 then
					graphicsToggles[selectedGraphicOpt][5] = 0
				else 
					graphicsToggles[selectedGraphicOpt][5] = 1
				end
				graphicsToggles[selectedGraphicOpt][6] = 1
				--Infinity_ChangeOption(graphicsToggles[selectedGraphicOpt][3], graphicsToggles[selectedGraphicOpt][5], panelID )
			end
		"
	}

	text
	{
		area		744 92 600 398
		text		lua "getStringFromAmbiguousSource(helpString)"
		text style	normal
		scrollbar	'rgpscrl'
	}

	text
	{
		area		756 560 280 50
		text		"FONT_SIZE_LABEL"
		text style	"rg_trajan"
		text align	right center
		text upper
		bam rgpslct
		ScaleToClip
		sequence lua "rgGetSelectedBackground(selectedSL, 1)"
		action 
		"
			helpString = 17204 
			selectedGraphicOpt = 0
			selectedSL = 1
		" 
	}

	slider
	{
		area 1074 560 206 50
		position "fontSizeSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'rgsldrbc'
		scaleToClip
		sequence 0
		frame	 1
		settings	7
		pad 3 0 4 0
		action
		"
			Infinity_ChangeOption( 22, fontSizeSLDR, 6)
			helpString = 17204 
			selectedGraphicOpt = 0
			selectedSL = 1
		"
	}

	
	button
	{
		area		182 682 474 76
		bam			RGPBUT1
		text 		"CANCEL_BUTTON"
		text style	"rg_trajan"
		ScaleToClip
		align center center
		pad 30 5 30 5
		action
		"
			panelID = 6
			Infinity_ChangeOption( 22, fontSizeCancel, panelID)

			selectedSL = 0
			Infinity_PopMenu()
		"
	}
	button
	{
		area		714 682 474 76		
		bam			RGPBUT1
		text 		"DONE_BUTTON" --Done
		text style	"rg_trajan"
		ScaleToClip
		align center center
		pad 30 5 30 5
		action
		"
			panelID = 6
			Infinity_ChangeOption( 22, fontSizeSLDR, panelID)

			for index, var in pairs(graphicsToggles) do
				
				if ( var[6] == 1 ) then
					Infinity_ChangeOption( var[3], var[5], panelID)
				end				
			end

			selectedSL = 0
			Infinity_PopMenu()
		"
	}
}


`
soundsToggles = {
{'CHARACTER_SUBTITLES_LABEL',18015, 5, 0, 0},
{'BATTLE_CRIES_LABEL',18013, 6, 0, 0},
{'MOVEMENT_SOUNDS_LABEL',18014, 7, 0, 0}
}
selectedsoundOpt = 0
command = {
{'ALWAYS_LABEL',0, 8, 0, 0},
{'SELDOM_LABEL',0, 9, 0, 0},
{'NEVER_LABEL',0, 10, 0, 0}
}
commandSel = 0
selectOpt = {
{'ALWAYS_LABEL',0, 58, 0, 0},
{'SELDOM_LABEL',0, 59, 0, 0},
{'NEVER_LABEL',0, 60, 0, 0}
}
selectSel = 0
ambientSLDR = 0
sfxSLDR = 0
voiceSLDR = 0
musicSLDR = 0
movieSLDR = 0

`

menu
{
	name	'OPTIONS_SOUND'
	align center center
	modal
	onOpen
	"
		panelID = 7
		helpString = 18042
		selectedsoundOpt = 0
		selectedSL = 0

		ambientSLDR = Infinity_GetOption(1, panelID)
		sfxSLDR = Infinity_GetOption(2, panelID)
		voiceSLDR = Infinity_GetOption(3, panelID)
		musicSLDR = Infinity_GetOption(4, panelID)
		movieSLDR = Infinity_GetOption(22, panelID)

		for index, var in pairs(command) do
				var[5] = Infinity_GetOption(var[3], panelID)
				if var[5] == 0 then
					var[4] = 0
				else
					var[4] = 2
					commandSel = index
				end
			end
		for index, var in pairs(selectOpt) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
				selectSel = index
			end
		end
		for index, var in pairs(soundsToggles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
				selectSel = index
			end
		end
	"
	
	button
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
		action
		"
			helpString = 18042
		"
	}

	label
	{
		area		16 12 680 52
		text		"SOUND_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	
	text
	{
		area		826 46 510 44
		text		"CHARACTER_SOUNDS_LABEL"
		text style	"rg_trajan"
		text align 	right center
	}

	list
	{
		
		column 
		{ 
			width 85
			label
			{	
				enabled "helpString == soundsToggles[rowNumber][2]"
				area 0 0 -1 -1
				bam rgpslct
				ScaleToClip
			}
			label
			{
				area 0 0 -1 -1
				text lua "t( soundsToggles[rowNumber][1])"
				text style "normal"
				text align right center
			}
		}
		column 
		{ 
			width 15 
			label
			{
				area		20 0 46 46
				bam			RGRNDBUT
				ScaleToClip
				align 		left top
				frame		lua "soundsToggles[rowNumber][4]"
			}
		}

		area 826 96 510 145
		hidehighlight
		rowheight	46
		table		"soundsToggles"
		var		selectedsoundOpt
		scrollbar	'rgpscrl'

		action		
		"
			panelID = 7
			helpString = soundsToggles[selectedsoundOpt][2]
			selectedSL = 0
			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')
				soundsToggles[selectedsoundOpt][4] = toggleFrame(soundsToggles[selectedsoundOpt][4])

				if soundsToggles[selectedsoundOpt][4] == 0 then
					soundsToggles[selectedsoundOpt][5] = 0
				else 
					soundsToggles[selectedsoundOpt][5] = 1
				end
				
			end
		"
	}
	
	text
	{
		area		996 480 340 44
		text		"COMMAND_SOUNDS_BUTTON"
		text style	"rg_trajan"
		text align 	right center
		bam rgpslct
		ScaleToClip
		sequence lua "rgGetSelectedBackground(selectedSL, 1)"
		action 
		"
			helpString = 18016 
			selectedsoundOpt = 0
			selectedSL = 1
		"
	}

	
	list
	{
		
		column 
		{ 
			width 70
			label
			{
				area 10 0 -1 -1
				text lua "t( command[rowNumber][1])"
				text style	"normal"
				text align right center
			}
		}
		column 
		{ 
			width 30
			label
			{
				area		20 0 46 46
				bam			RGRNDBUT
				ScaleToClip
				align 		left top
				frame		lua "command[rowNumber][4]"
			}
		}

		area 1078 530 258 145
		
		rowheight	46
		table		"command"
		var		commandSel
		scrollbar	'rgpscrl'
		hidehighlight

		action		
		"
			panelID = 7
			helpString = 18016 
			selectedSL = 1
			selectedsoundOpt = 0
			opt = commandSel
			command[1][4] = 0
			command[2][4] = 0
			command[3][4] = 0
			
			Infinity_PlaySound('GAM_09')
			command[opt][4] = 2
		"
	}

	text
	{
		area		996 260 340 44
		text		"SELECTION_BUTTON"
		text style	"rg_trajan"
		text align 	right center
		bam rgpslct
		ScaleToClip
		sequence lua "rgGetSelectedBackground(selectedSL, 2)"
		action 
		"
			helpString = 11352 
			selectedsoundOpt = 0
			selectedSL = 2
		"
	}

	list
	{
		
		column 
		{ 
			width 70
			label
			{
				area 10 0 -1 -1
				text lua "t( selectOpt[rowNumber][1])"
				text style	"normal"
				text align right center
			}
		}
		column 
		{ 
			width 30
			label
			{
				area		20 0 46 46
				bam			RGRNDBUT
				ScaleToClip
				align 		left top
				frame		lua "selectOpt[rowNumber][4]"
			}
		}

		area 1078 310 258 145
		
		rowheight	46
		table		"selectOpt"
		var		selectSel
		scrollbar	'rgpscrl'
		hidehighlight
		action		
		"
			panelID = 7
			helpString = 11352 
			selectedSL = 2
			selectedsoundOpt = 0
			opt = selectSel
			selectOpt[1][4] = 0
			selectOpt[2][4] = 0
			selectOpt[3][4] = 0
			
			Infinity_PlaySound('GAM_09')
			selectOpt[opt][4] = 2
		"
	}
	
	text
	{
		area		40 492 786 178
		text		lua "Infinity_FetchString(helpString)"
		text style	normal
		scrollbar	'rgpscrl'
	}
	
	--text
	--{
	--	area		40 84 468 44
	--	text		"VOLUME_CONTROLS_LABEL"
	--	text style	"rg_trajan"
	--	text align 	right center
	--}

	text
	{
		area		40 108 432 38
		text		"AMBIENT_VOLUME_LABEL"
		text style	"rg_trajan"
		text align	right center
		text upper
		bam rgpslct
		ScaleToClip
		sequence lua "rgGetSelectedBackground(selectedSL, 4)"
		action 
		"
			helpString = 18008 
			selectedsoundOpt = 0
			selectedSL = 4
		"
	}
	slider
	{
		area 496 100 200 50
		position "ambientSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'rgsldrbc'
		scaleToClip
		sequence 0
		frame	 1
		settings	40
		pad 3 0 4 0
		action 
		"
			helpString = 18008 
			selectedsoundOpt = 0
			selectedSL = 4
		"
	}

	text
	{
		area		40 184 432 39	
		text		"SFX_VOLUME_LABEL"
		text style	"rg_trajan"
		text align	right center
		text upper
		bam rgpslct
		ScaleToClip
		sequence lua "rgGetSelectedBackground(selectedSL, 5)"
		action 
		"
			helpString = 18009 
			selectedsoundOpt = 0
			selectedSL = 5
		"
		
	}
	slider
	{
		area 496 180 200 50
		position "sfxSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'rgsldrbc'
		scaleToClip
		sequence 0
		frame	 1
		settings	40
		pad 3 0 4 0
		action 
		"
			helpString = 18009 
			selectedsoundOpt = 0
			selectedSL = 5
		"
	}

	text
	{
		area		40 266 432 38
		text		"VOICE_VOLUME_LABEL"
		text style	"rg_trajan"
		text align	right center
		text upper
		bam rgpslct
		ScaleToClip
		sequence lua "rgGetSelectedBackground(selectedSL, 6)"
		action 
		"
			helpString = 18010 
			selectedsoundOpt = 0
			selectedSL = 6
		"
	}
	slider
	{
		area 496 260 200 50
		position "voiceSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'rgsldrbc'
		scaleToClip
		sequence 0
		frame	 1
		settings	40
		pad 3 0 4 0
		action 
		"
			helpString = 18010 
			selectedsoundOpt = 0
			selectedSL = 6
		"
	}

	text
	{
		area		40 346 432 38	
		text		"MUSIC_VOLUME_LABEL"
		text style	"rg_trajan"
		text align	right center
		text upper
		bam rgpslct
		ScaleToClip
		sequence lua "rgGetSelectedBackground(selectedSL, 7)"
		action 
		"
			helpString = 18011 
			selectedsoundOpt = 0
			selectedSL = 7
		"
		
	}
	slider
	{
		area 496 340 200 50
		position "musicSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'rgsldrbc'
		scaleToClip
		sequence 0
		frame	 1
		settings	40
		pad 3 0 4 0
		action 
		"
			helpString = 18011 
			selectedsoundOpt = 0
			selectedSL = 7
		"
	}

	text
	{
		area		40 426 432 38	
		text		"MOVIE_VOLUME_LABEL"
		text style	"rg_trajan"
		text align	right center
		text upper
		bam rgpslct
		ScaleToClip
		sequence lua "rgGetSelectedBackground(selectedSL, 8)"
		action 
		"
			helpString = 18012
			selectedsoundOpt = 0
			selectedSL = 8
		"
	}
	slider
	{
		area 496 420 200 50
		position "movieSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'rgsldrbc'
		scaleToClip
		sequence 0
		frame	 1
		settings	40
		pad 3 0 4 0
		action 
		"
			helpString = 18012
			selectedsoundOpt = 0
			selectedSL = 8
		"
	}
	button
	{
		area		182 682 474 76
		bam			RGPBUT1
		text 		"CANCEL_BUTTON"
		text style	"rg_trajan"
		ScaleToClip
		align center center
		pad 30 5 30 5
		action
		"
			selectedSL = 0
			panelID = 8
			Infinity_PopMenu()
		"
	}
	button
	{
		area		714 682 474 76		
		bam			RGPBUT1
		text 		"DONE_BUTTON" --Done
		text style	"rg_trajan"
		ScaleToClip
		align center center
		pad 30 5 30 5
		action
		"
			panelID = 7
			
			for index, var in pairs(command) do
				Infinity_Log('Com var[4] #' .. index .. ': ' .. var[4])
				if var[4] == 2 then
					Infinity_ChangeOption( var[3], 1, panelID)
				end
			end
			for index, var in pairs(selectOpt) do
				Infinity_Log('Sel var[4] #' .. index .. ': ' .. var[4])
				if var[4] == 2 then
					Infinity_ChangeOption( var[3], 1, panelID)	
				end	
			end
			Infinity_ChangeOption( 1, ambientSLDR, panelID)
			Infinity_ChangeOption( 2, sfxSLDR, panelID )
			Infinity_ChangeOption( 3, voiceSLDR, panelID )
			Infinity_ChangeOption( 4, musicSLDR, panelID)
			Infinity_ChangeOption( 22, movieSLDR, panelID)

			selectedOpt = 0
			selectedSL = 0

			for index, var in pairs(soundsToggles) do				
				Infinity_ChangeOption( var[3], var[5], panelID)						
			end

			panelID = 8
			Infinity_PopMenu()
		"
	}
}


`

feedbackToggles = {
{'COLORED_MARKERS_LABEL',			'COLORED_MARKERS_HELP', 			38, 0, 0},
{'CLASSIC_MARKERS_LABEL',			'CLASSIC_MARKERS_HELP', 			45, 0, 0},
{'ENABLE_CONFIRMATION_LABEL',		'ENABLE_CONFIRMATION_HELP', 		41, 0, 0},
{'DISABLE_COSMETIC_ATTACKS_LABEL',	'DISABLE_COSMETIC_ATTACKS_HELP', 	43, 0, 0},
{'JOURNAL_POPUPS_LABEL',			'JOURNAL_POPUPS_HELP', 				44, 0, 0}
}

messagesToggles = { 
{'TO_HIT_ROLLS_LABEL',		'TO_HIT_ROLLS_HELP', 	10, 0, 0},
{'ACTIONS_LABEL', 			'ACTIONS_HELP', 		12, 0, 0},
{'STATE_CHANGES_LABEL',		'STATE_CHANGES_HELP', 	13, 0, 0},
{'COMBAT_INFO_LABEL',		'COMBAT_INFO_HELP', 	11, 0, 0},
{'SELECTION_TEXT_LABEL',	'SELECTION_TEXT_HELP',	14, 0, 0},
{'MISC_LABEL',				'MISC_HELP', 			15, 0, 0}
}

selFeedOpt = 0
selMessageOpt = 0
helpString = 0

markerFeedSLDR = 0
locatorFeedSLDR = 0

function getFrequency(d,includeHighter)
	strref = ""
	if ( d ==0 ) then
		strref = "MINIMUM"
	elseif (d == 1) then
		strref = "LOW"
	elseif (d == 2) then
		strref = "MEDIUM"
	elseif (d == 3) then
		strref = "HIGH"
	elseif (d == 4 and includeHighter == true) then
		strref = "HIGHER"
	elseif (d == 4 and includeHighter == false) then
		strref = "MAXIMUM"
	elseif (d == 5) then
		strref = "MAXIMUM"
	end
	return t(strref)
end

`

menu
{
	name	'OPTIONS_FEEDBACK'
	align center center
	modal
	onOpen
	"
		panelID = 9

		helpString = 'FEEDBACK_HELP'
		selFeedOpt = 0
		selMessageOpt = 0
		selectedSL = 0

		markerFeedSLDR = Infinity_GetOption(8, panelID)
		locatorFeedSLDR = Infinity_GetOption(9, panelID)
		
		for index, var in pairs(feedbackToggles) do
				var[5] = Infinity_GetOption(var[3], panelID)
				if var[5] == 0 then
					var[4] = 0
				else
					var[4] = 2
				end
			end

		for index, var in pairs(messagesToggles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end

	"

	button
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
		action
		"
			helpString = 'FEEDBACK_HELP'
			selFeedOpt = 0
			selMessageOpt = 0
			selectedSL = 0
		"
	}
	label
	{
		area		16 12 680 52
		text		"FEEDBACK_TITLE"
		text style	'rg_trajan'
		text color '$'
	}



	label
	{
		area		442 88 410 36
		text		"VISUAL_FEEDBACK_LABEL"
		text style	"rg_trajan"
		text align 	right center
	}

	list
	{
		
		column 
		{ 
			width 85
			label
			{	
				enabled "helpString == feedbackToggles[rowNumber][2]"
				area 0 0 -1 -1
				bam rgpslct
				ScaleToClip
			}
			label
			{
				area 0 0 -1 -1
				text lua "t( feedbackToggles[rowNumber][1])"
				text style "normal"
				text align right center
			}
		}
		column 
		{ 
			width 15 
			label
			{
				area		20 14 46 46
				bam			RGRNDBUT
				ScaleToClip
				align 		left top
				frame		lua "feedbackToggles[rowNumber][4]"
			}
		}

		area 422 130 460 508
		hideHighlight
		rowheight	70
		table		"feedbackToggles"
		var		selFeedOpt
		scrollbar	'rgpscrl'

		action		
		"
			selectedSL = 0
			selMessageOpt = 0
			helpString = feedbackToggles[selFeedOpt][2]

			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')
				feedbackToggles[selFeedOpt][4] = toggleFrame(feedbackToggles[selFeedOpt][4])

				if feedbackToggles[selFeedOpt][4] == 0 then
					feedbackToggles[selFeedOpt][5] = 0
				else 
					feedbackToggles[selFeedOpt][5] = 1
				end
			end
		"
	}

	label
	{
		area		16 88 372 36
		text		"FEEDBACK_MESSAGES_LABEL"
		text style	"rg_trajan"
		text align 	right center
	}

	list
	{
		
		column 
		{ 
			width 85
			label
			{	
				enabled "helpString == messagesToggles[rowNumber][2]"
				area 0 0 -1 -1
				bam rgpslct
				ScaleToClip
			}
			label
			{
				area 10 0 -1 -1
				text lua "t( messagesToggles[rowNumber][1])"
				text style	"normal"
				text align right center
			}
		}
		column 
		{ 
			width 15
			label
			{
				area		10 14 46 46
				bam			RGRNDBUT
				ScaleToClip
				align 		left top
				frame		lua "messagesToggles[rowNumber][4]"
			}
		}

		area 16 130 396 508
		hidehighlight
		rowheight	70
		table		"messagesToggles"
		var		selMessageOpt
		scrollbar	'rgpscrl'

		action		
		"

			helpString = messagesToggles[selMessageOpt][2]
			selectedSL = 0
			selFeedOpt = 0

			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')
				messagesToggles[selMessageOpt][4] = toggleFrame(messagesToggles[selMessageOpt][4])

				if messagesToggles[selMessageOpt][4] == 0 then
					messagesToggles[selMessageOpt][5] = 0
				else 
					messagesToggles[selMessageOpt][5] = 1
				end
			end
		"
	}
	
	text
	{
		area		912 334 420 304
		text		lua "t(helpString)"
		text style	normal
		scrollbar	'rgpscrl'
	}

	text 
	{
		area		912 88 206 36
		text		"MARKER_FEEDBACK_LABEL"
		text style	"rg_trajan"
		text align	right center
		text upper
		text useFontZoom 1
		bam rgpslct
		ScaleToClip
		sequence lua "rgGetSelectedBackground(selectedSL, 1)"
		action 
		"
			helpString = 'MARKER_FEEDBACK_HELP' 
			selFeedOpt = 0
			selMessageOpt = 0
			selectedSL = 1
		"
		
	}
	slider
	{
		area		1132 82 200 48
		position "markerFeedSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'rgsldrbc'
		scaleToClip
		sequence 0
		frame	 1
		settings	6
		pad 3 0 4 0
		action 
		"
			helpString = 'MARKER_FEEDBACK_HELP' 
			selFeedOpt = 0
			selMessageOpt = 0
			selectedSL = 1
		"
	}
	label
	{
		area		1132 134 200 36
		text		lua "getFrequency(markerFeedSLDR,true)"
		text style	"rg_trajan"
		text align	center center
	}

	text
	{
		area		912 204 206 36	
		text		"LOCATOR_FEEDBACK_LABEL"
		text style "rg_trajan"
		text align	right center
		text upper
		bam rgpslct
		ScaleToClip
		sequence lua "rgGetSelectedBackground(selectedSL, 2)"
		action 
		"
			helpString = 'LOCATOR_FEEDBACK_HELP'
			selFeedOpt = 0
			selMessageOpt = 0
			selectedSL = 2
		"
	}
	slider
	{
		area 1132 198 200 48
		position "locatorFeedSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'rgsldrbc'
		scaleToClip
		sequence 0
		frame	 1
		settings	5
		pad 4 0 5 0
		action 
		"
			helpString = 'LOCATOR_FEEDBACK_HELP'
			selFeedOpt = 0
			selMessageOpt = 0
			selectedSL = 2
		"
	}
	label
	{
		area		1132 250 200 36
		text		lua "getFrequency(locatorFeedSLDR,false)"
		text style	"rg_trajan"	
		text align	center center
	}
	button
	{
		area		182 682 474 76
		bam			RGPBUT1
		text 		"CANCEL_BUTTON"
		text style	"rg_trajan"
		ScaleToClip
		align center center
		pad 30 5 30 5
		action
		"
			helpString = 'GAMEPLAY_DESCRIPTION'
			selectedSL = 0
			panelID = 8
			Infinity_PopMenu()
		"
	}
	button
	{
		area		714 682 474 76		
		bam			RGPBUT1
		text 		"DONE_BUTTON" --Done
		text style	"rg_trajan"
		ScaleToClip
		align center center
		pad 30 5 30 5
		action
		"
			helpString = 'GAMEPLAY_DESCRIPTION'
			panelID = 9
			Infinity_ChangeOption( 8, markerFeedSLDR, panelID)
			Infinity_ChangeOption( 9, locatorFeedSLDR, panelID )

			selectedOpt = 0
			selectedSL = 0

			for index, var in pairs(messagesToggles) do
				
				Infinity_ChangeOption( var[3], var[5], panelID)
						
			end

			for index, var in pairs(feedbackToggles) do
				
				Infinity_ChangeOption( var[3], var[5], panelID)
						
			end
			Infinity_PopMenu()
		"
	}
}

`
function getGooglePlaySignInText()
	if(Infinity_GooglePlaySignedIn() == 1) then
		return t("SIGN_OUT_BUTTON")
	else
		return t("SIGN_IN_BUTTON")
	end
end

keyCategory = 1
key = 0

function displayHelp()
	if not (key == 0) then
		return 24680
	end
	return 0
end

function formatKeyCode(number)
	local ret = ""

	if number < 127 and number > 32 then
		return string.format('%c', keybindings[keyCategory][rowNumber][6])
	end
	ret = t("SDL_" .. string.format('%d', keybindings[keyCategory][rowNumber][6]))
 
	return ret
end

function getHotkeyName(category,number)
	local ret = ""
	if category < 5 then
		ret = t(keybindings[category][number][4])
		if ret == keybindings[category][number][4] then
			ret = Infinity_FetchString(keybindings[category][number][4])
		end
	else
		ret = Infinity_FetchString(keybindings[category][number][4])
	end
	return ret
end
`
menu
{
	name	'OPTIONS_KEYBINDINGS'
	modal
	align center center
	
	button -- Background
	{
		area 0 0 864 710
		mosaic GUICHISF 
	}
	
	label -- Title
	{
		area 78 8 712 46
		text  "ASSIGN_KEYS_TITLE" 
		text style	"title"
	}
	
	label -- Instruction
	{
		area 252 60 367 42
		text  "ASSIGN_KEYS_SUBTITLE" 
		text style	"label"
	}
	label -- Contextual instruction
	{
		area 42 128 778 34
		text lua "Infinity_FetchString(displayHelp())"
		text style	"label"
	}

	list -- Key categories
	{
		column 
		{ 
			width 100 
			label
			{
				area 0 0 -1 -1
				text lua "t(keycategories[rowNumber][2])"
				text style	"normal"
				text align	center center 
			}
		}
		area 42 190 360 420
		
		rowheight	24
		table		"keycategories"
		var			keyCategory
		scrollbar	'rgpscrl'
		action
		"
			Infinity_StopKeybind()
			key = 0
		"
	}

	
	list -- Key bindings
	{
		column 
		{ 
			width 90 
			label
			{
				area 0 0 -1 -1
				text lua "getHotkeyName(keyCategory,rowNumber)"
				text style	"normal"
				align left center
			}
		}
		column 
		{ 
			width 10
			label
			{
				area 0 0 -1 -1
				text lua "formatKeyCode(keybindings[keyCategory][rowNumber][6])"
				text style	"normal"
				text upper
				text align right center 
			}
		}
		
		area 448 190 372 420
		rowheight	24
		table		"keybindings[keyCategory]"
		var			key
		scrollbar	'rgpscrl'
		action
		"
		if(key > 0) then
			Infinity_StartKeybind(key);
			keybindings[keyCategory][key][6] = 0
		end
		"
	}
	
	button
	{
		area 464 656 236 44
		bam 'GUIOSTUR'
		sequence 0
		text		"DONE_BUTTON"
		text style	"button"
		action
		"
			Infinity_StopKeybind()
			key = 0
			Infinity_PopMenu();
		"	
	}
	button
	{
		area 210 656 236 44
		bam 'GUIOSTUL'
		sequence 0
		text		"REVERT_BUTTON"
		text style	"button"
		
		action
		"
			revertKeymap();
		"	
	}
}
`
function updateCreditsScroll(top, height, contentHeight)
	if (creditsScrollAuto == 0) then
		return nil
	end
	local dT = Infinity_GetClockTicks() - creditsScrollTimeStart
	local newTop = (dT * -0.015) + height
	if (newTop + contentHeight + height < height ) then
		return top
	end
	return newTop
end

`
menu
{
	name	'CREDITS'
	align center center

	onopen
	"
		creditsScrollTimeStart = Infinity_GetClockTicks()
		creditsScrollAuto = 1
		megaCredits = ''
		for k,v in pairs(credits) do
			megaCredits = megaCredits .. Infinity_FetchString(v)..'\n'
		end
	"
	
	label
	{
		area 0 0 1024 768
		mosaic GUISMBM
	}
	
	text
	{
		area 186 98 664 472
		text lua "megaCredits"
		scrollbar	'rgpscrl'
		scrollbar func "updateCreditsScroll"
		text style "normal"
		text align center top
		action "creditsScrollAuto = 0"
	}
	
	button
	{
		area		412 716 204 44
		bam			GUIOSTUM
		sequence	6
		text  "DONE_BUTTON"
		text style "button"
		
		action
		"
			Infinity_PopMenu();
		"	
	}
}

`
language = 0
showsubtitles = 0
function languageDetails()
	if languages[language] ~= nil then
		return Infinity_FetchString(languages[language][2]) .. '\n'  .. Infinity_FetchString(languages[language][3])
	else
		return ""
	end
end
function findCurrentLanguage()
	local lang = Infinity_GetINIString('Language', 'Text', '')
	for k,v in pairs(languages) do
		if v[1] == lang then
			language = k
		end
	end
end
`
menu
{
	name	'OPTIONS_LANGUAGE'
	modal
	align center center
	onOpen
	"
		showsubtitles = Infinity_GetINIValue('Program Options', 'Display Subtitles', 1)
		findCurrentLanguage()
	"
	
	button
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 490 52
		text		"LANGUAGE_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	
	list
	{
		column { 
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "languages[rowNumber][4]"
				text style	"rg_trajan"
				text align left center 
			}
		}
	
		area		16 78 380 536
		rowheight	35
		table		"languages"
		var			language
		scrollbar	'rgpscrl'
	}
	label
	{
		area 516 138 828 460
		fill 112 111 111 64
	}
	text
	{
		area		516 138 828 460
		text lua	"languageDetails()"
		text style	normal
		text align	center top
		scrollbar	'rgpscrl'
	}
	
	label
	{
		area		16 630 240 34
		text	"SHOW_SUBTITLES_LABEL"
		text style	"rg_trajan"
		text align	right center
		text upper
	}
	label
	{
		area		516 626 828 42
		text lua 	"rgGetGameEngineString(32129,32129,102624,37845)"
		text style	"rg_trajan"
		text align	center center
		text upper
	}
	label
	{
		area		516 12 828 110
		text lua 	"rgGetGameEngineString(32208,32208,102626,37846)"
		text style	"normal"
		text align	center center
		text color 	'$'
	}
	
	button
	{
		area		270 630 34 34
		bam			RGRNDBUT
				ScaleToClip
		toggle		showsubtitles
	}
	
	button
	{
		area		182 682 474 76
		bam			RGPBUT1
		text 		"CANCEL_BUTTON"
		text style	"rg_trajan"
		ScaleToClip
		align center center
		pad 30 5 30 5
		action
		"
			-- cancel
			for index, var in pairs(languages) do
				Infinity_Log(var[3])
			end
			Infinity_PopMenu();
		"
	}
	button
	{
		area		714 682 474 76		
		bam			RGPBUT1
		text 		"DONE_BUTTON" --Done
		text style	"rg_trajan"
		ScaleToClip
		align center center
		pad 30 5 30 5
		action
		"
			-- done
			Infinity_SetLanguage(languages[language][1],showsubtitles)
			Infinity_PopMenu()
		"
	}
	
}
`
function restoreOverlayFromQuit()
	--restore the old overlay if applicable
	if(oldOverlayMenuName) then
		Infinity_SetOverlay(oldOverlayMenuName)
	else
		Infinity_SetOverlay(nil)
	end
end
`
menu
{
	name 'QuitMenu'
	modal
	align center center
	label -- Background
	{
		area 0 0 682 238
		mosaic GUIERR6 
	}
	label --Title
	{
		area 36 24 600 120
		text  20186
		text style	"label"
	}
	button
	{
		area		360 170 300 44
		bam			GUIOSTCL
		sequence	0
		text  "QUIT_GAME_BUTTON"
		text style	"button"
		on 			return
		action
		"
			restoreOverlayFromQuit()
			Infinity_ShutdownGame()
		"	
	}
	button
	{
		area		24 170 300 44
		bam			GUIOSTCL
		sequence	0
		text  "CANCEL_BUTTON"
		text style	"button"
		on 			escape
		action
		"
			restoreOverlayFromQuit()
			Infinity_PopMenu('QuitMenu')
		"	
	}
}

`
selectedSlot = nil
itemRequestAmt = 0

function showItemAmountRequester(slotName)
	local slot = characters[id].equipment[slotName]
	if(slot.item.count == nil) then
		Infinity_Log("Nil count in requester!")
		return
	end
	if(slot.item.count > 1) then
		selectedSlot = slotName
		popupRequester(slot.item.count, inventorySplitStack, false)
	end
end
function inventorySplitStack(cnt)
	Infinity_SplitItemStack(characters[id].equipment[selectedSlot].id, cnt,'slot_inv_' .. characters[id].equipment[selectedSlot].id)
end

function GetAbilityIdentifyString()
	if(characters[id].equipment[selectedSlot].item.identified == 0) then
		return t("IDENTIFY_BUTTON")
	end
	
	if(characters[id].equipment[selectedSlot].abilityMode == 1) then
		return t("ABILITIES_BUTTON")
	end
	
	return ""
end
requester = {}
requester.requesterMax = 0
requester.requesterFunc = nil
requester.selling = false
`
menu
{
	name 'POPUP_REQUESTER'
	align center center
	modal
	onOpen
	"
		if requester.selling == false then
			itemRequestAmt = 0
			requestAmt = 0
		elseif requester.selling < 10
			itemRequestAmt = 1
			requestAmt = 1
		else
			itemRequestAmt = requester.requesterMax
			requestAmt = requester.requestMax
			
		end
		--if requester.selling == false then
		--	itemRequestAmt = 1
		--	requestAmt = 1
		--else
		--	itemRequestAmt = requester.requesterMax
		--	requestAmt = requester.requesterMax
		--end
		--itemRequestAmt = requester.requesterMax
		--requestAmt = requester.requesterMax
	"
	
	label
	{
		area		0 0 875 740
		bam "RGPIDET"
	}
	label
	{
		area	26 24 826 60
		text	"CHOOSE_AMT_LABEL"
		text style "rg_trajan"
		text align center center
		text color '$'
	}
	edit
	{
		area		294 130 276 132
		var			itemRequestAmt
		text style	"edit"
		align center center
		maxlines	1
		fill        112 111 111 64
		text point 35
		action
		"
			-- only permit numbers as letters.
			-- character limit of 4
			if((tonumber(letter_pressed) ~= nil and #tostring(itemRequestAmt) < 4) or not letter_pressed) then
				return 1
			else
				return 0
			end
		"
	}
	button
	{
		bam			RGPBUT1
		area		44 602 383 82
		text  "CANCEL_BUTTON"
		text style	"rg_trajan"
		align center center
		pad 30 5 30 5
		action
		"
			Infinity_PopMenu()
			requestAmt = 0
			itemRequestAmt = 1
		"
	}	
	button
	{
		bam			RGPBUT1
		area		446 602 383 82
		text  "DONE_BUTTON"
		text style	"rg_trajan"
		align center center
		pad 30 5 30 5
		action
		"
			local cnt = tonumber(itemRequestAmt)
			Infinity_PopMenu()
			if(cnt and cnt > 0 and cnt <= requester.requesterMax) then
				requester.requesterFunc(cnt)
			end
			requestAmt = 0
			itemRequestAmt = 1
		"
	}
	label
	{
		area 44 452 778 66
		bam rgpslid
		enabled "requester.requesterMax > 10"
	}
	slider
	{
		area 60 434 742 100
		position "requestAmt"
		bam	 'SLDRSTAR'
		--mosaic rgpslid
		sequence 0
		frame	 1
		settings 	21
		pad 4 0 6 0
		enabled "requester.requesterMax > 10"
		ScaleToClip
		action
		"
			selectedOpt = 0
			selectedSL = 0
			itemRequestAmt = math.floor(requestAmt * requester.requesterMax / 20)
		" 
	}

	button	{	enabled "requester.requesterMax > 10"	sequence	6	area	34 320 80 80	text	"0"	text style	"rg_trajan" align center center	--text point 	10
		action	"	local amt = tonumber(itemRequestAmt)	itemRequestAmt = 0	"	}
	button	{	enabled "requester.requesterMax > 10"	sequence	6	area	208 320 80 80	text lua	"math.floor(requester.requesterMax/4)"	text style	"rg_trajan"	align center center--text point 10
		action	"	local amt = tonumber(itemRequestAmt)	itemRequestAmt = math.floor(requester.requesterMax/4)	"	}
	button	{	enabled "requester.requesterMax > 10"	sequence	6	area	390 320 80 80	text lua	"math.floor(requester.requesterMax/2)"	text style	"rg_trajan"	align center center--text point 10
		action	"	local amt = tonumber(itemRequestAmt)	itemRequestAmt = math.floor(requester.requesterMax/2)	"	}
	button	{	enabled "requester.requesterMax > 10"	sequence	6	area	570 320 80 80	text lua	"math.floor(3*requester.requesterMax/4)"	text style	"rg_trajan"	align center center--text point 10
		action	"	local amt = tonumber(itemRequestAmt)	itemRequestAmt = math.floor(3*requester.requesterMax/4)	"	}
	button	{	enabled "requester.requesterMax > 10"	sequence	6	area	751 320 80 80	text lua	"math.floor(requester.requesterMax)"	text style	"rg_trajan"	align center center--text point 10
		action	"	local amt = tonumber(itemRequestAmt)	itemRequestAmt = math.floor(requester.requesterMax)	"	}
	button
	{
		bam rgpbtpl
		area 104 126 140 140
		sequence 0
		ScaleToClip
		action
		"
			local amt = tonumber(itemRequestAmt)
			if(amt < requester.requesterMax) then
				itemRequestAmt = amt + 1
			end
		"
		actionHold
		"
			local amt = tonumber(itemRequestAmt)
			if(amt < requester.requesterMax) then
				itemRequestAmt = amt + 1
			end
		"
	}
	button
	{
		bam rgpbtpl
		area 622 126 140 140
		sequence 1
		ScaleToClip
		action
		"
			local amt = tonumber(itemRequestAmt)
			if(amt > 1) then
				itemRequestAmt = amt - 1
			end
		"
		actionHold
		"
			local amt = tonumber(itemRequestAmt)
			if(amt > 1) then
				itemRequestAmt = amt - 1
			end
		"
	}
}
`
selectedAbility = -1
function initAbilities()
	--initialize selected ability
	local i = 1
	while ( i < 4 ) do
		local ability = characters[id].equipment[selectedSlot].abilities[i]
		if(ability ~= nil) then
			if(ability.selected == 1) then
				selectedAbility = i
				return
			end
		end
		i = i + 1
	end
end
`
menu
{
	name 'ITEM_ABILITIES'
	align center center
	modal
	onOpen "initAbilities()"
	
	label
	{
		area		0 0 875 740
		bam "RGPIDET"
	}
	label
	{
		area	26 24 826 60
		text	"ITEM_ABILITIES_TITLE"
		text style "rg_trajan"
		text align center center
		text color '$'
	}
	text
	{
		area 26 122 826 100
		text highlight lua "selectedAbility == 1"
		enabled "characters[id].equipment[selectedSlot].abilities[1] ~= nil"
		text lua "characters[id].equipment[selectedSlot].abilities[1].text"
		text style	"rg_trajan"
		align left center
		pad 120 0 0 0
		action "selectedAbility = 1"
	}
	button
	{
		area 26 122 100 100
		bam "STONSLOT"
		ScaleToClip
		enabled "characters[id].equipment[selectedSlot].abilities[1] ~= nil"
		icon lua "characters[id].equipment[selectedSlot].abilities[1].icon"
		action "selectedAbility = 1"
	}

	
	text
	{
		area 26 222 826 100
		text highlight lua "selectedAbility == 2"
		enabled "characters[id].equipment[selectedSlot].abilities[2] ~= nil"
		text lua "characters[id].equipment[selectedSlot].abilities[2].text"
		text style	"rg_trajan"
		align left center
		pad 120 0 0 0
		action "selectedAbility = 2"
	}
	button
	{
		area 26 222 100 100
		bam "STONSLOT"
		ScaleToClip
		enabled "characters[id].equipment[selectedSlot].abilities[2] ~= nil"
		icon lua "characters[id].equipment[selectedSlot].abilities[2].icon"
		action "selectedAbility = 2"
	}

	text
	{
		area 26 322 826 100
		text highlight lua "selectedAbility == 3"
		enabled "characters[id].equipment[selectedSlot].abilities[3] ~= nil"
		text lua "characters[id].equipment[selectedSlot].abilities[3].text"
		text style	"rg_trajan"
		align left center
		pad 120 0 0 0
		action "selectedAbility = 3"
	}
	button
	{
		area 26 322 100 100
		bam "STONSLOT"
		ScaleToClip
		enabled "characters[id].equipment[selectedSlot].abilities[3] ~= nil"
		icon lua "characters[id].equipment[selectedSlot].abilities[3].icon"
		action "selectedAbility = 3"
	}
	
	label
	{
		area 44 452 785 122
		text 11322
		text style "normal"
	}
	
	button
	{
		bam			RGPBUT1
		area		446 602 383 82
		text  "DONE_BUTTON"
		text style	"rg_trajan"
		align center center
		pad 30 5 30 5
		action
		"
			local itemNum = characters[id].equipment[selectedSlot].abilities[selectedAbility].itemNum
			Infinity_SelectItemAbility(selectedAbility - 1, itemNum, characters[id].equipment[selectedSlot].id)
			Infinity_PopMenu()
		"
	}
	
	button
	{
		bam			RGPBUT1
		area		44 602 383 82
		text  "CANCEL_BUTTON"
		text style	"rg_trajan"
		align center center
		pad 30 5 30 5
		action
		"
			Infinity_PopMenu()
		"
	}

}
`
TEXT_popup_info = 0
`
menu
{
	name 'POPUP_INFO'
	align center center
	modal
	label
	{
		area 0 0 679 640
		bam RGPIAMT
	}
	label
	{
		area 70 94 542 346
		text lua "getStringFromAmbiguousSource(TEXT_popup_info)"
		text style	"rg_trajan"
	}
	button
	{
		bam			RGPBUT1
		area		55 522 569 82
		text "DONE_BUTTON"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		action
		"
			Infinity_PopMenu()
		"
	}
}
menu
{
	name 'POPUP_TWOBUTTON'
	align center center
	modal
	label
	{
		area 0 0 679 640
		bam RGPIAMT
	}
	label
	{
		area 70 54 542 326
		text lua "getStringFromAmbiguousSource(Popup2Button.info)"
		text style	"normal"
		text align center center
	}
	button
	{
		bam			RGPBUT1
		area		55 422 569 82
		text lua "t(Popup2Button.cancelText or 'CANCEL_BUTTON')"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		action 
		"
			Infinity_PopMenu('POPUP_TWOBUTTON')
			if (Popup2Button.cancelFunc) then
				Popup2Button.cancelFunc()
			end
		"
	}
	button
	{
		bam			RGPBUT1
		area		55 522 569 82
		text lua "t(Popup2Button.okText or 'DONE_BUTTON')"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		action 
		"
			Infinity_PopMenu('POPUP_TWOBUTTON')
			if (Popup2Button.okFunc) then
				Popup2Button.okFunc()
			end
		"
	}
}

menu
{
	name 'POPUP_THREEBUTTON'
	align center center
	modal
	label
	{
		area 0 0 679 640
		bam RGPIAMT
	}
	label
	{
		area 55 21 569 183
		text lua "getStringFromAmbiguousSource(Popup3Button.info)"
		text style	"normal"
		text align center center
	}
	button
	{
		bam			RGPBUT1
		area		55 322 569 82
		text lua "t(Popup3Button.rightText)"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		action 
		"
			Infinity_PopMenu()
			if (Popup3Button.rightFunc) then
				Popup3Button.rightFunc()
			end
		"
	}
	button
	{
		bam			RGPBUT1
		area		55 422 569 82
		text lua "t(Popup3Button.midText)"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		action 
		"
			Infinity_PopMenu()
			if (Popup3Button.midFunc) then
				Popup3Button.midFunc()
			end
		"
	}
	button
	{
		bam			RGPBUT1
		area		55 522 569 82
		text lua "t(Popup3Button.leftText)"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		action 
		"
			Infinity_PopMenu()
			if (Popup3Button.leftFunc) then
				Popup3Button.leftFunc()
			end
		"
	}
}

menu
{
	name 'POPUP_FOURBUTTON'
	align center center
	modal
	label
	{
		area 0 0 679 640
		bam RGPIAMT
	}
	label
	{
		area 55 21 569 183
		text lua "getStringFromAmbiguousSource(Popup4Button.info)"
		text style	"normal"
		text align center center
	}
	button
	{
		bam			RGPBUT1
		area		55 222 569 82
		text lua "t(Popup4Button.farRightText)"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		action 
		"
			Infinity_PopMenu()
			if (Popup4Button.farRightFunc) then
				Popup4Button.farRightFunc()
			end
		"
	}
	button
	{
		bam			RGPBUT1
		area		55 322 569 82
		text lua "t(Popup4Button.rightText)"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		action 
		"
			Infinity_PopMenu()
			if (Popup4Button.rightFunc) then
				Popup4Button.rightFunc()
			end
		"
	}
	button
	{
		bam			RGPBUT1
		area		55 422 569 82
		text lua "t(Popup4Button.leftText)"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		action 
		"
			Infinity_PopMenu()
			if (Popup4Button.leftFunc) then
				Popup4Button.leftFunc()
			end
		"
	}
	button
	{
		bam			RGPBUT1
		area		55 522 569 82
		text lua "t(Popup4Button.farLeftText)"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		action 
		"
			Infinity_PopMenu()
			if (Popup4Button.farLeftFunc) then
				Popup4Button.farLeftFunc()
			end
		"
	}
}

menu
{
	name 'ITEM_IDENTIFY'
	align center center
	modal
	label
	{
		area 0 0 679 640
		bam RGPIAMT
	}
	text 
	{
		area 30 28 616 214
		text 19394
		text style "normal"
		align center center
	}
	
	button
	{
		bam			RGPBUT1
		area		146 290 383 82
		text  "SPELL_BUTTON"
		text style	"rg_trajan"
		align center center
		pad 30 5 30 5
		
		clickable lua "Infinity_GetSpellIdentifyEnabled(characters[id].equipment[selectedSlot].id)"
		action 
		"
			Infinity_OnSpellIdentify(characters[id].equipment[selectedSlot].id); 
			Infinity_PopMenu()
			itemDesc.item = characters[id].equipment[selectedSlot].item --update itemDesc item
		"
	}
	button
	{
		bam			RGPBUT1
		area		146 522 383 82
		text  "CANCEL_BUTTON"
		text style	"rg_trajan"
		align center center
		pad 30 5 30 5
		action
		"
			Infinity_PopMenu()
		"
	}
	button
	{
		bam			RGPBUT1
		area		146 406 383 82
		text  "SCROLL_BUTTON"
		text style	"rg_trajan"
		align center center
		pad 30 5 30 5
		
		clickable lua "Infinity_GetScrollIdentifyEnabled(characters[id].equipment[selectedSlot].id)"
		action 
		"
			Infinity_OnScrollIdentify(characters[id].equipment[selectedSlot].id)
			Infinity_PopMenu()
			itemDesc.item = characters[id].equipment[selectedSlot].item --update itemDesc item
		"
	}
	
	
}
`
function showItemDescriptionInventory(slotName)
	if(characters[id].equipment[slotName].empty ~= 0) then
		return
	end
	
	selectedSlot = slotName
	
	Infinity_CheckItemIdentify(characters[id].equipment[slotName].id)
	showItemDescription(characters[id].equipment[slotName].item, 0)
end

itemDesc = {}
function showItemDescription(item, mode)
	itemDesc.item = item
	itemDesc.mode = mode
	Infinity_PushMenu('ITEM_DESCRIPTION',0,0)
end

function itemDescLeftButtonEnabled()
	if(itemDesc.mode == 0) then
		return GetAbilityIdentifyString() ~= ""
	elseif(itemDesc.mode == 1) then
		return itemDesc.item.isBag
	end
	return 0
end
function itemDescLeftButtonText()
	if(itemDesc.mode == 0) then
		return GetAbilityIdentifyString()
	elseif(itemDesc.mode == 1) then
		return t('OPEN_CONTAINER_BUTTON')
	end
	return ""
end
function itemDescLeftButtonAction()
	if(itemDesc.mode == 0) then
		if(characters[id].equipment[selectedSlot].item.identified == 0) then
			Infinity_PushMenu('ITEM_IDENTIFY',0,0)
		else
			Infinity_PushMenu('ITEM_ABILITIES',0,0)
		end
	elseif(itemDesc.mode == 1) then
		storeScreen:OpenBag(itemDesc.item.res)
		Infinity_PopMenu()
	end
end

function itemDescRightButtonEnabled()
	if(itemDesc.mode == 0) then
		return characters[id].equipment[selectedSlot].useMode ~= -1
	else
		return 0
	end
end
function itemDescRightButtonText()
	return Infinity_GetUseButtonText(characters[id].equipment[selectedSlot].id, characters[id].equipment[selectedSlot].useMode)
end
function itemDescRightButtonAction()
	Infinity_PopMenu()
	Infinity_OnUseButtonClick(characters[id].equipment[selectedSlot].id, characters[id].equipment[selectedSlot].useMode)
end
`
menu
{
	name 'ITEM_DESCRIPTION'
	align center center
	modal
	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}
	label
	{
		area 994 32 354 340
		bam "RGPIIDE"
		ScaleToClip
	}
	--label
	--{
	--	area 81 11 700 44
	--	text "ITEM_TITLE"
	--	text style title
	--}
	label
	{
		area 20 0 100 100
		bam RGPIICO
		ScaleToClip
	}
	label
	{
		area 28 8 84 84
		icon lua "itemDesc.item.icon"
	}
	label
	{
		area 128 28 700 46
		text lua "itemDesc.item.name"
		text align center center
		text style "rg_trajan"
		text color '$'
	}
	text
	{
		area 28 100 948 644
		text lua "itemDesc.item.description"
		scrollbar 'rgpscrl'
		text style "normal"
	}
	label
	{
		area 1006 38 330 327
		bam lua "itemDesc.item.descPicture"
		sequence 0
		frame 0
		align center center
	}
	button
	{
		bam			RGPBUT1
		area		980 400 383 82
		enabled "itemDescRightButtonEnabled()"
		text lua "itemDescRightButtonText()"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		action
		"
			itemDescRightButtonAction()
		"
	}
	button
	{
		bam			RGPBUT1
		area		980 530 383 82
		enabled "itemDescLeftButtonEnabled()"
		text lua "itemDescLeftButtonText()"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		action
		"
			itemDescLeftButtonAction()
		"
	}
	button
	{
		bam			RGPBUT1
		area		980 660 383 82
		text  "DONE_BUTTON"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		action
		"
			Infinity_PopMenu();
		"
	}
	
}
`
function highlightSidebarButton(engine)
	return (engine == e:GetActiveEngine())
end
sidebarVisible =
{
	LEFT = 1,
	RIGHT = 1
}
function toggleSidebar(side)
	local show = side .. "_SIDEBAR"
	local hide = show .. "_HIDDEN"
	if(sidebarVisible[side] == 1) then
		local temp = show
		show = hide
		hide = temp
		sidebarVisible[side] = 0
	else
		sidebarVisible[side] = 1
	end
	Infinity_PushMenu(show)
	Infinity_PopMenu(hide)
end
sidebarForceTooltips = 0
`
menu
{
	name 'LEFT_SIDEBAR'
	align left top
	ignoreEsc
	onOpen 
	"
		if(sidebarVisible.LEFT == 1) then
			Infinity_PushMenu('LEFT_SIDEBAR_BOTTOM')
		else
			Infinity_PopMenu('LEFT_SIDEBAR')
			Infinity_PushMenu('LEFT_SIDEBAR_HIDDEN')
		end
		if(showJournal == 1) then
			Infinity_PushMenu('JOURNAL')
		end
		sidebarForceTooltips = 0
	"
	onClose 
	"
		Infinity_PopMenu('LEFT_SIDEBAR_BOTTOM')
		Infinity_PopMenu('JOURNAL')
	"
	label
	{
		name 'leftSidebarBackground'
		area 0 0 80 0
		mosaic GUIWLSP
	}
	--label
	--{
    --
	--	area 0 1536 80 1536
	--	mosaic GUIWLSP
	--}
	--button
	--{
	--	area 3 14 73 55
	--	bam GUILS10
	--	sequence 0
	--	tooltip lua "getTooltipWithHotkey(2,24364)"
	--	tooltip force lua "sidebarForceTooltips == 1"
	--	tooltip force top
--	--	glow lua "highlightSidebarButton(worldScreen)"
	--	clickable lua "sidebarsGreyed ~= 1"
	--	action
	--	"
	--		e:GetActiveEngine():OnLeftPanelButtonClick(0)
	--	"
	--}
	button
	{
		enabled "worldScreen ~= e:GetActiveEngine()"
		area 0 3 86 106
		bam RGPGUIL
		sequence 0
		tooltip lua "getTooltipWithHotkey(4,15418)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(mapScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(1)
		"
	}
	button
	{
		enabled "worldScreen ~= e:GetActiveEngine()"
		area 0 112 86 106
		bam RGPGUIL
		sequence 1
		tooltip lua "getTooltipWithHotkey(3,24359)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		--glow lua "showJournal == 1"
		glow lua "rgEscModeJournal == 1 and rgIsInEscMode == 1"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			rgEscModeJournal = 1
			if rgIsInEscMode == 0 then
				e:GetActiveEngine():OnLeftPanelButtonClick(7)
			end
			Infinity_PushMenu('RIGHT_SIDEBAR_BOTTOM')
		"
	}
	button
	{
		enabled "worldScreen ~= e:GetActiveEngine()"
		area 0 221 86 106
		bam RGPGUIL
		sequence 2
		tooltip lua "getTooltipWithHotkey(0,24358)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(inventoryScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(3)
		"
	}
	button
	{
		enabled "worldScreen ~= e:GetActiveEngine()"
		area 0 330 86 106
		bam RGPGUIL
		sequence 3
		tooltip lua "getTooltipWithHotkey(1,24356)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(characterScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(4)
		"
	}
	button
	{
		enabled "worldScreen ~= e:GetActiveEngine()"
		area 0 439 86 106
		bam RGPGUIL
		sequence 4
		tooltip lua "getTooltipWithHotkey(5,24360)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(mageScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(5)
		"
	}
	button
	{
		enabled "worldScreen ~= e:GetActiveEngine()"
		area 0 548 86 106
		bam RGPGUIL
		sequence 5
		tooltip lua "getTooltipWithHotkey(6,24357)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(priestScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(6)
		"
	}
	button
	{
		enabled "worldScreen ~= e:GetActiveEngine()"
		area 0 657 86 106
		bam RGPGUIL
		sequence 6
		tooltip lua "getTooltipWithHotkey(7,24362)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		--glow lua "highlightSidebarButton(optionsScreen)"
		glow lua "rgEscModeJournal == 0 and rgIsInEscMode == 1"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			rgEscModeJournal = 0
			if rgIsInEscMode == 0 then
				e:GetActiveEngine():OnLeftPanelButtonClick(7)
			end
			Infinity_PopMenu('RIGHT_SIDEBAR_BOTTOM')
		"
	}
	--button
	--{
	--	area 3 454 73 55
	--	enabled "e:IsMultiplayer()"
	--	bam GUILS10
	--	sequence 8
	--	tooltip lua "getTooltipWithHotkey(8,24363)"
	--	tooltip force lua "sidebarForceTooltips == 1"
	--	tooltip force top
	--	glow lua "highlightSidebarButton(multiplayerScreen)"
	--	clickable lua "sidebarsGreyed ~= 1"
	--	action
	--	"
	--		e:GetActiveEngine():OnLeftPanelButtonClick(8)
	--	"
	--}

	--button
	--{
	--	area 6 0 67 16
	--	bam GUIPNL10
	--	action
	--	"
	--		toggleSidebar('LEFT')
	--	"
	--}
}
menu
{
	name 'LEFT_SIDEBAR_BOTTOM'
	align left bottom
	offset 0 0
	--combined height of these buttons makes a menu with height = 231, menu is placed into lower left. y pos is offset from top of this menu.
	ignoreEsc
	label
	{
		area 0 0 1 1
	}
	
	--button
	--{
	--	area 3 56 73 55
	--	enabled "worldScreen == e:GetActiveEngine()"
	--	bam GUILS10
	--	sequence 16
	--	tooltip lua "Infinity_FetchString(31827)" --"getTooltipWithHotkey(16,31827)"
	--	tooltip force lua "sidebarForceTooltips == 1"
	--	tooltip force top
	--	clickable lua "sidebarsGreyed ~= 1"
	--	action
	--	"
	--		Infinity_PushMenu('HELP')
	--	"
	--}
	--button
	--{
	--	area 3 110 73 55
	--	bam GUILS10
	--	sequence 9
	--	tooltip lua "getTooltipWithHotkey(31,11942)"
	--	tooltip force lua "sidebarForceTooltips == 1"
	--	tooltip force top
	--	clickable lua "sidebarsGreyed ~= 1"
	--	action
	--	"
	--		e:GetActiveEngine():OnRestButtonClick()
	--	"
	--}
	
}
menu
{
	name 'LEFT_SIDEBAR_HIDDEN'
	align left top
	ignoreEsc
	button
	{
		area 6 0 67 16
		bam GUIPNL10
		action
		"
			toggleSidebar('LEFT')
		"
	}
}
`
	mouseOverPortrait = -1
	draggedPortrait = nil
	function swapPortraits(dest)
		worldScreen:SwapPortraits(dest,draggedPortrait)
		draggedPortrait = nil
	end
	function getPartyAITooltip()
		if aiButtonToggle == 1 then
			return Infinity_FetchString(15918)
		else
			return Infinity_FetchString(15917)
		end
	end
`
menu
{
	name 'RIGHT_SIDEBAR'
	align right top
	ignoreEsc
	onOpen 
	"
		if(sidebarVisible.RIGHT == 1) then
			Infinity_PushMenu('RIGHT_SIDEBAR_BOTTOM')
		else
			Infinity_PopMenu('RIGHT_SIDEBAR')
			Infinity_PushMenu('RIGHT_SIDEBAR_HIDDEN')
		end
		if(worldScreen == e:GetActiveEngine() and game:GetPartyAI()) then aiButtonToggle = 1 end
		if(worldScreen == e:GetActiveEngine()) then Infinity_PushMenu('WORLD_LEVEL_UP_BUTTONS') end
	"
	onClose
	"
		Infinity_PopMenu('RIGHT_SIDEBAR_BOTTOM')
		Infinity_PopMenu('WORLD_LEVEL_UP_BUTTONS')
	"
	label
	{
		name 'rightSidebarBackground'
		area 0 0 154 1
		mosaic BLANK
	}
	button
	{
		area 0 7 80 102
		enabled "worldScreen == e:GetActiveEngine()"
		toggle highlightButtonToggle
		bam rgpsrch
		ScaleToClip
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			worldScreen:SetHighlightEnabled(highlightButtonToggle == 1)
		"
	}
	button
	{
		area 80 8 71 102
		portrait 0
		bam rgpporl
		ScaleToClip
		enabled "Infinity_GetNumCharacters() > 0"
		glow lua "draggedPortrait and draggedPortrait ~= 0"
		action "Infinity_OnPortraitLClick(0) rgAutoIdentifyItems()"
		actionAlt "Infinity_OnPortraitRClick(0)"
		actionDbl "Infinity_OnPortraitDblClick(0)"
		actiondrag "Infinity_SwapWithPortrait(0)"
		actionEnter "mouseOverPortrait = 0"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 0"
		actionSimpleDrop "swapPortraits(0)"
		tooltip lua "Infinity_GetPortraitTooltip(0)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 80 111 71 102
		portrait 1
		bam rgpporl
		ScaleToClip
		enabled "Infinity_GetNumCharacters() > 1"
		glow lua "draggedPortrait and draggedPortrait ~= 1"
		action "Infinity_OnPortraitLClick(1) rgAutoIdentifyItems()"
		actionAlt "Infinity_OnPortraitRClick(1)"
		actionDbl "Infinity_OnPortraitDblClick(1)"
		actiondrag "Infinity_SwapWithPortrait(1)"
		actionEnter "mouseOverPortrait = 1"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 1"
		actionSimpleDrop "swapPortraits(1)"
		tooltip lua "Infinity_GetPortraitTooltip(1)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 80 214 71 102
		portrait 2
		bam rgpporl
		ScaleToClip
		enabled "Infinity_GetNumCharacters() > 2"
		glow lua "draggedPortrait and draggedPortrait ~= 2"
		action "Infinity_OnPortraitLClick(2) rgAutoIdentifyItems()"
		actionAlt "Infinity_OnPortraitRClick(2)"
		actionDbl "Infinity_OnPortraitDblClick(2)"
		actiondrag "Infinity_SwapWithPortrait(2)"
		actionEnter "mouseOverPortrait = 2"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 2"
		actionSimpleDrop "swapPortraits(2)"
		tooltip lua "Infinity_GetPortraitTooltip(2)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 80 317 71 102
		portrait 3
		bam rgpporl
		ScaleToClip
		enabled "Infinity_GetNumCharacters() > 3"
		glow lua "draggedPortrait and draggedPortrait ~= 3"
		action "Infinity_OnPortraitLClick(3) rgAutoIdentifyItems()"
		actionAlt "Infinity_OnPortraitRClick(3)"
		actionDbl "Infinity_OnPortraitDblClick(3)"
		actiondrag "Infinity_SwapWithPortrait(3)"
		actionEnter "mouseOverPortrait = 3"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 3"
		actionSimpleDrop "swapPortraits(3)"
		tooltip lua "Infinity_GetPortraitTooltip(3)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 80 420 71 102
		portrait 4
		bam rgpporl
		ScaleToClip
		enabled "Infinity_GetNumCharacters() > 4"
		glow lua "draggedPortrait and draggedPortrait ~= 4"
		action "Infinity_OnPortraitLClick(4) rgAutoIdentifyItems()"
		actionAlt "Infinity_OnPortraitRClick(4)"
		actionDbl "Infinity_OnPortraitDblClick(4)"
		actiondrag "Infinity_SwapWithPortrait(4)"
		actionEnter "mouseOverPortrait = 4"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 4"
		actionSimpleDrop "swapPortraits(4)"
		tooltip lua "Infinity_GetPortraitTooltip(4)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 80 523 71 102
		portrait 5
		bam rgpporl
		ScaleToClip
		enabled "Infinity_GetNumCharacters() > 5"
		glow lua "draggedPortrait and draggedPortrait ~= 5"
		action "Infinity_OnPortraitLClick(5) rgAutoIdentifyItems()"
		actionAlt "Infinity_OnPortraitRClick(5)"
		actionDbl "Infinity_OnPortraitDblClick(5)"
		actiondrag "Infinity_SwapWithPortrait(5)"
		actionEnter "mouseOverPortrait = 5"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 5"
		actionSimpleDrop "swapPortraits(5)"
		tooltip lua "Infinity_GetPortraitTooltip(5)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	--button
	--{
	--	area 10 0 67 16
	--	bam GUIPNL10
	--	action
	--	"
	--		toggleSidebar('RIGHT')
	--	"
	--}
}
menu
{
	name 'RIGHT_SIDEBAR_BOTTOM'
	align right bottom
	ignoreEsc
	button
	{
		enabled "worldScreen ~= e:GetActiveEngine()"
		area 58 0 86 137
		bam RGPBTCLS
		sequence 0
		tooltip lua "getTooltipWithHotkey(2,24364)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
--		glow lua "highlightSidebarButton(worldScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(0)
		"
	}
	--button
	--{
	--	enabled "storeScreen == e:GetActiveEngine()"
	--	area 58 0 86 137
	--	bam RGPBTCLS
	--	sequence 0
	--	action
	--	"
	--		storeScreen:OnMainDoneButtonClick()
	--	"
	--}
	label
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 0 0 144 141
		bam "RGPCLOCK"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 180 180 180
	}
	label
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 0 0 144 141
		bam "RGPCGEAR"
		frame lua "timer:GetCurrentTime() % 24"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 180 180 180
	}
	label
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 0 80 144 51
		ScaleToClip
		text lua "timer:GetCurrentHour()"
		text style "rg_trajan"
		align center center
		text color '5'
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 180 180 180
	}
	--begin clock
	--label
	--{
	--	enabled "worldScreen == e:GetActiveEngine()"
	--	area 0 0 144 144
	--	bam "CGEAR"
	--	ScaleToClip
	--	frame lua "timer:GetCurrentTime() % 24"
	--	useOverlayTint "worldScreen:CheckIfPaused()"
	--	overlayTint 180 180 180
	--}
	--label
	--{
	--	enabled "worldScreen == e:GetActiveEngine()"
	--	area 0 0 144 144
	--	bam "CDIAL"
	--	ScaleToClip
	--	frame lua "timer:GetCurrentHour() % timer.TIMESCALE_HOUR_PER_DAY"
	--	useOverlayTint "worldScreen:CheckIfPaused()"
	--	overlayTint 180 180 180
	--}
	--label
	--{
	--	enabled "worldScreen == e:GetActiveEngine()"
	--	area 0 0 144 144
	--	bam "CPEN"
	--	ScaleToClip
	--	frame lua "timer:GetCurrentTime() % 24"
	--	useOverlayTint "worldScreen == e:GetActiveEngine() and worldScreen:CheckIfPaused()"
	--	overlayTint 180 180 180
	--}
	button
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 0 0 144 141
		tooltip lua "worldScreen:GetCurrentTimeString()"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			worldScreen:TogglePauseGame(true)
		"
	}
	--end clock
	label
	{
		--area is preset
		enabled "gameOptions.m_bRenderFrameTimes"
		frameTimes
	}
	--Buttons form a menu aligned bottom right, with height = 197, y is offset from top of that menu.
	--button
	--{
	--	area 6 0 71 48
	--	enabled "e:IsTouchUI() and worldScreen == e:GetActiveEngine()"
	--	toggle selectionButtonToggle
	--	bam GUILS10
	--	sequence 14
	--	clickable lua "sidebarsGreyed ~= 1"
	--	action
	--	"
	--		worldScreen:OnSelectionButtonClick()
	--	"
	--}
	--button
	--{
	--	area 6 49 71 48
	--	enabled "worldScreen == e:GetActiveEngine()"
	--	tooltip lua "Infinity_FetchString(32729)"
	--	toggle highlightButtonToggle
	--	bam GUILS10
	--	sequence 11
	--	clickable lua "sidebarsGreyed ~= 1"
	--	action
	--	"
	--		worldScreen:SetHighlightEnabled(highlightButtonToggle == 1)
	--	"
	--}
	--button
	--{
	--	area 6 99 71 48
	--	enabled "worldScreen == e:GetActiveEngine()"
	--	tooltip lua "getPartyAITooltip()"
	--	toggle aiButtonToggle
	--	bam GUILS10
	--	sequence 10
	--	clickable lua "sidebarsGreyed ~= 1"
	--	action
	--	"
	--		game:ToggleAI()
	--	"
	--}
	--button
	--{
	--	area 6 149 71 48
	--	enabled "worldScreen == e:GetActiveEngine()"
	--	tooltip lua "Infinity_FetchString(10485)"
	--	bam GUILS10
	--	sequence 13
	--	clickable lua "sidebarsGreyed ~= 1"
	--	action
	--	"
	--		game:SelectAll()
	--	"
	--	actionDbl
	--	"
	--		game:CenterOnGroupLeader()
	--	"
	--}
}
menu
{
	name 'RIGHT_SIDEBAR_HIDDEN'
	align right top
	ignoreEsc
	button
	{
		area 10 0 67 16
		bam GUIPNL10
		action
		"
			toggleSidebar('RIGHT')
		"
	}
}
`
	TEXT_inventoryError = ""

function resetStatsDisplay()
	tempStats = {}
end
function getTempDamage()
	local str = ""
	local dmgMinTemp = getTempStat(characters[id].damage.min,'dmgMin',1)
	local dmgMaxTemp = getTempStat(characters[id].damage.max,'dmgMax',1)
	if(dmgMinTemp == "-" and dmgMaxTemp == "-") then
		return "-"
	end
	if(dmgMinTemp == "-") then
		str = characters[id].damage.min
	else
		str = dmgMinTemp
	end
	str = str .. " - "
	if(dmgMaxTemp == "-") then
		str = str .. characters[id].damage.max
	else
		str = str .. dmgMaxTemp
	end

	return str
end
function getStat(old, newName, coeff)
	return old
end
function getTempStat(old, newName, coeff)
	if(tempStats[id] == nil) then
		return "-"
	end
	local new = tempStats[id][newName]
	local score = coeff * (new - old)
	if(score == 0) then
		return "-"
	end
	if(score < 0) then
		return "^R" .. new .. "^-"
	end
	if(score > 0) then
		return "^G" .. new .. "^-"
	end
end
function getStatsTitle()
	if(tempStats[id] ~= nil) then
		return tempStats[id].tempItem
	else
		return ""
	end
end
function slotDoubleClick(slotName, force)
	local slot = characters[id].equipment[slotName]
	
	if(string.sub(slotName,1,6) == "ground" and force == nil) then
		--this hack is needed because the unlike other slots, ground item add/remove is a message (doesnt get executed immediately)
		--since the double click removes the item before re-adding it, we need to wait for that re-add to complete before continuing.
		doubleClickEventScheduled = slotName
		return
	end
	
	if(slot ~= nil) then
		if(slot.item.isBag ~= 0) then
			Infinity_OpenInventoryContainer(slot.item.res)
		else
			showItemAmountRequester(slotName)
		end
	end
end
function checkDoubleClickScheduled(slotName)
	if(doubleClickEventScheduled == slotName) then
		slotDoubleClick(doubleClickEventScheduled, true)
		doubleClickEventScheduled = nil
	end
end
function getTempHP()
	local maxHP = getTempStat(characters[id].HP.max,'maxHP',1)
	local currentHP = getTempStat(characters[id].HP.current, 'currentHP',1)
	if(maxHP == "-" and currentHP == "-") then
		--nothing changed.
		return "-"
	end
	if(maxHP == "-") then
		--only current HP changed.
		maxHP = characters[id].HP.max
	end
	if(currentHP == "-") then
		--only max HP changed.
		currentHP = characters[id].HP.current
	end
	
	return currentHP .. '/' .. maxHP
end
function shouldGreyOutInventory()
	return characters[id].HP.current <= 0 or inventoryScreen:IsSpriteOrderable() == false
end
function getInventoryTHAC0()
	local str = characters[id].THAC0.current
	if(characters[id].THAC0.offhand) then
		str = str .. "\n" .. characters[id].THAC0.offhand
	end
	return str
end
function getInventoryDamage()
	local str = characters[id].damage.min .. ' - ' .. characters[id].damage.max
	if(characters[id].damage.minOffhand and characters[id].damage.maxOffhand) then
		str = str .. "\n" .. characters[id].damage.minOffhand .. ' - ' .. characters[id].damage.maxOffhand 
	end
	return str
end
function getInventoryDamageDetails()
	if characters[id].damage.detailsOffhand == nil or characters[id].damage.detailsOffhand == "" then
		return characters[id].damage.details
	else
		return characters[id].damage.details.."\n\n"..characters[id].damage.detailsOffhand
	end
end
function getInventoryTHAC0Details()
	if characters[id].THAC0.detailsOffhand == nil or characters[id].THAC0.detailsOffhand == "" then
		return characters[id].THAC0.details
	else
		return characters[id].THAC0.details.."\n\n"..characters[id].THAC0.detailsOffhand
	end
end
function scrollGroundItems()
	forceGroundItemsScrollbar = true
	if scrollDirection > 0 then
		Infinity_OnGroundPage(-1)
	elseif scrollDirection < 0 then
		Infinity_OnGroundPage(1)
	end
	currentFakePage = Infinity_GetCurrentGroundPage()
end

fakeItemList = {}
currentFakePage = 1
currentMaxFakePages = 1
forceGroundItemsScrollbar = false

function scrollGroundItemsFunction(top, height, contentHeight)
	if forceGroundItemsScrollbar then
		forceGroundItemsScrollbar = false
		return (currentFakePage / currentMaxFakePages) * (height - contentHeight)
	elseif top ~= 0 and height ~= contentHeight and currentMaxFakePages ~= 0 then
		local currentPage = currentFakePage
		currentFakePage = math.floor((top / (height - contentHeight) * currentMaxFakePages))
		if currentPage > currentFakePage then
			Infinity_OnGroundPage(-1)
		elseif currentPage < currentFakePage then
			Infinity_OnGroundPage(1)
		end
		return nil
	end
end

function isGroundScrollbarEnabled()
	local maxPages = Infinity_GetMaxGroundPage()
	if currentMaxFakePages ~= maxPages then
		currentMaxFakePages = maxPages

		fakeItemList = {}
		for i = 1, currentMaxFakePages+1 do
			fakeItemList[i] = 1
		end
	end

	return currentMaxFakePages > 0
end
function getErrorTextWithoutPause()
	local errorText = TEXT_inventoryError
	if errorText == Infinity_FetchString(24355) then
		errorText = ''

	end

	return errorText
end
function getInventoryTHAC0()
	local str = characters[id].THAC0.current
	if(characters[id].THAC0.offhand) then
		str = str .. "\n" .. characters[id].THAC0.offhand
	end
	return str
end
function getInventoryDamage()
	local str = characters[id].damage.min .. ' - ' .. characters[id].damage.max
	if(characters[id].damage.minOffhand and characters[id].damage.maxOffhand) then
		str = str .. "\n" .. characters[id].damage.minOffhand .. ' - ' .. characters[id].damage.maxOffhand 
	end
	return str
end
function rgAutoIdentifyItems()
if e:GetActiveEngine() == inventoryScreen then
	Infinity_CheckItemIdentify(characters[id].equipment.group0.id)
	Infinity_CheckItemIdentify(characters[id].equipment.group1.id)
	Infinity_CheckItemIdentify(characters[id].equipment.group2.id)
	Infinity_CheckItemIdentify(characters[id].equipment.group3.id)
	Infinity_CheckItemIdentify(characters[id].equipment.group4.id)
	Infinity_CheckItemIdentify(characters[id].equipment.group5.id)
	Infinity_CheckItemIdentify(characters[id].equipment.group6.id)
	Infinity_CheckItemIdentify(characters[id].equipment.group7.id)
	Infinity_CheckItemIdentify(characters[id].equipment.group8.id)
	Infinity_CheckItemIdentify(characters[id].equipment.group9.id)
	Infinity_CheckItemIdentify(characters[id].equipment.group10.id)
	Infinity_CheckItemIdentify(characters[id].equipment.group11.id)
	Infinity_CheckItemIdentify(characters[id].equipment.group12.id)
	Infinity_CheckItemIdentify(characters[id].equipment.group13.id)
	Infinity_CheckItemIdentify(characters[id].equipment.group14.id)
	Infinity_CheckItemIdentify(characters[id].equipment.group15.id)
end
end

`
menu
{
	name 'INVENTORY'
	align center center
	ignoreEsc
	
	onOpen 
	"
		Infinity_SetBackground('BACKGROUND')
		Infinity_ActivateInventory()
		pushSidebars()
		doubleClickEventScheduled = nil
		
		for i = 1, Infinity_GetMaxGroundPage()+1 do
			fakeItemList[i] = 1
		end
		currentFakePage = Infinity_GetCurrentGroundPage()
		currentMaxFakePages = Infinity_GetMaxGroundPage()+1
		abilitiesDetails = 0
		rgAutoIdentifyItems()
	"
	onClose 
	"
		Infinity_PopMenu('CHARACTER_COLOR')
		Infinity_PopMenu('ITEM_DESCRIPTION')
		Infinity_PopMenu('ITEM_IDENTIFY')
		popSidebars()

		fakeItemList = {}
	"
	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}
	
	
	--label
	--{
	--	area		524 50 330 37
	--	text lua	"getStatsTitle()"
	--	text style	"label"
	--	text color 'D'
	--}
	--
	--label
	--{
	--	enabled		"tempStats[id] ~= nil"
	--	area		672 87 86 31
	--	text		"CURRENT_LABEL"
	--	text style	"label"
	--	text color 'D'
	--	text point 10
	--}
	--label
	--{
	--	enabled		"tempStats[id] ~= nil"
	--	area		762 87 80 31
	--	text		"NEW_LABEL"
	--	text style	"label"
	--	text color 'D'
	--	text point 10
	--}
	--text
	--{
	--	area		530 118 142 72
	--	text		"ARMOR_CLASS_LABEL"
	--	text style	"label"
	--	enabled		"tempStats[id] ~= nil"
	--	tooltip lua "characters[id].AC.details"
	--	text align left center
	--}
	
	
	--label
	--{
	--	enabled		"tempStats[id] ~= nil"
	--	area		762 122 80 62
	--	text lua	"getTempStat(characters[id].AC.current,'AC',-1)"
	--	text style	"label"
	--	align center center
	--}
	--
	--text
	--{
	--	area		530 190 142 76
	--	text		"HIT_POINTS_LABEL"
	--	text style	"label"
	--	enabled		"tempStats[id] ~= nil"
	--	tooltip lua "characters[id].HP.details"
	--	text align left center
	--}
	
	--label
	--{
	--	enabled		"tempStats[id] ~= nil"
	--	area		762 194 80 70
	--	text lua	"getTempHP()"
	--	text style	"label"
	--	align center center
	--}
	--
	--text
	--{
	--	area		530 268 142 74
	--	text		"THAC0_LABEL"
	--	text style	"label"
	--	enabled		"tempStats[id] ~= nil"
	--	tooltip lua "characters[id].THAC0.details"
	--	text align left center
	--}	
	
	--label
	--{
	--	enabled		"tempStats[id] ~= nil"
	--	area		762 272 80 70
	--	text lua	"getTempStat(characters[id].THAC0.current,'THAC0',-1)"
	--	text style	"label"
	--	align center center
	--}
	--
	--text
	--{
	--	area		530 347 142 74
	--	text		"DAMAGE_LABEL"
	--	text style	"label"
	--	enabled		"tempStats[id] ~= nil"
	--	tooltip lua "characters[id].damage.details"
	--	text align left center
	--}	
	
	--label
	--{
	--	enabled		"tempStats[id] ~= nil"
	--	area		762 347 80 74
	--	text lua	"getTempDamage()"
	--	text style	"label"
	--	align center center
	--}
	
	--stat details begin
	--label
	--{
	--	enabled		"tempStats[id] == nil"
	--	area 511 49 345 378
	--	mosaic "INVSTATS"
	--}
	--label
	--{
	--	enabled		"tempStats[id] == nil"
	--	area		540 76 42 42
	--	text lua	"characters[id].AC.current"
	--	text style	"label"
	--	align center center
	--}
	--text
	--{
	--	enabled		"tempStats[id] == nil"
	--	area 609 60 237 78
	--	text lua "characters[id].AC.details"
	--	text style "normal"
	--	scrollbar 'rgpscrl'
	--}
	--label
	--{
	--	enabled		"tempStats[id] == nil"
	--	area		536 164 48 46
	--	text lua	"characters[id].HP.current .. '/' .. characters[id].HP.max"
	--	text style	"label"
	--	align center center
	--}
	--text
	--{
	--	enabled		"tempStats[id] == nil"
	--	area 608 156 234 75
	--	text lua "characters[id].HP.details"
	--	text style "normal"
	--	scrollbar 'rgpscrl'
	--}
	--
	--label
	--{
	--	enabled		"tempStats[id] == nil"
	--	area		540 260 38 42
	--	text lua	"getInventoryTHAC0()"
	--	text style	"label"
	--	align center center
	--}
	--text
	--{
	--	enabled		"tempStats[id] == nil"
	--	area 609 248 237 76
	--	text lua "getInventoryTHAC0Details()"
	--	text style "normal"
	--	scrollbar 'rgpscrl'
	--}
	--
	--label
	--{
	--	enabled		"tempStats[id] == nil"
	--	area		540 354 44 38
	--	text lua	"getInventoryDamage()"
	--	text style	"label"
	--	align center center
	--}
	--text
	--{
	--	enabled		"tempStats[id] == nil"
	--	area 609 339 237 69
	--	text lua "getInventoryDamageDetails()"
	--	text style "normal"
	--	scrollbar 'rgpscrl'
	--}
	
	--stat details end
	
	label
	{
		area 679 36 216 216
		bam "rgpiappe"
	}
	button
	{
		area 726 60 124 181
		paperdoll 1
		actiondrag "Infinity_SwapWithAppearance()"
		action
		"
			Infinity_PushMenu('CHARACTER_COLOR', 0, 0)
		"
	}
	
	
	--label
	--{
	--	area 679 11 216 44
	--	text "INVENTORY_TITLE"
	--	text style "title"
	--}
	--label
	--{
	--	area 258 690 200 43
	--	text "QUICK_WEAPONS_LABEL"
	--	text style "label"
	--}
	--label
	--{
	--	area 466 690 162 41
	--	text "QUICK_ITEMS_LABEL"
	--	text style "label"
	--}
	--label
	--{
	--	area 100 698 150 40
	--	text "QUIVER_LABEL"
	--	text style "label"
	--}
	label
	{
		area 662 604 153 32
		text "GROUND_LABEL"
		text style "rg_trajan"
		align right center
	}
	label
	{
		area 834 604 75 32
		text lua "Infinity_GetCurrentGroundPage()+1 .. '/' .. Infinity_GetMaxGroundPage()+1"
		text style "rg_trajan"
		align left center
	}
	
	
	text
	{
		area 355 360 864 28
		text lua "getErrorTextWithoutPause()"
		--scrollbar 'rgpscrl'
		text style "normal"
		align center center
	}
	
	
	label { area 463 252 108 108 bam "STONSL10" Frame 3 ScaleToClip }
	label { area 571 252 108 108 bam "STONSL10" Frame 3 ScaleToClip }
	label { area 679 252 108 108 bam "STONSL10" Frame 3 ScaleToClip }


	slot {name "slot_inv_1"			area 355 252 108 108	bam "STONSL10"	ScaleToClip	slotinfo "characters[id].equipment.weapon0"		}
	slot {name "slot_inv_2"			area 463 252 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.weapon1"		}
	slot {name "slot_inv_3"			area 571 252 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.weapon2"		}
	slot {name "slot_inv_4"			area 679 252 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.weapon3"		}
		
	slot {name "slot_inv_5"			area 355 144 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.personal0"	}
	slot {name "slot_inv_6"			area 463 144 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.personal1"	}
	slot {name "slot_inv_7"			area 571 144 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.personal2"	}
	
	slot {name "slot_inv_11"		area 895 144 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.armor"		}
	slot {name "slot_inv_13"		area 895 36 108 108		bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.helmet"		}
	slot {name "slot_inv_12"		area 1003 144 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.gauntlets"	}
	slot {name "slot_inv_14"		area 1111 36 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.amulet"		}
	slot {name "slot_inv_15"		area 355 36 108 108		bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.quiver0"		}
	slot {name "slot_inv_16"		area 463 36 108 108		bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.quiver1"		}
	slot {name "slot_inv_17"		area 571 36 108 108		bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.quiver2"		}
	slot {name "slot_inv_21"		area 895 252 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.belt"		}
	slot {name "slot_inv_22"		area 1111 144 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.ringleft"	}
	slot {name "slot_inv_23"		area 1111 252 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.ringright"	}
	slot {name "slot_inv_24"		area 1003 36 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.cloak"		}
	slot {name "slot_inv_25"		area 1003 252 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.boots"		}
	slot {name "slot_inv_26"		area 787 252 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.shield"		}
	
	slot {name "slot_inv_30"		area 355 388 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.group0"		}
	slot {name "slot_inv_31"		area 355 496 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.group1"		}
	slot {name "slot_inv_32"		area 463 388 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.group2"		}
	slot {name "slot_inv_33"		area 463 496 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.group3"		}
	slot {name "slot_inv_34"		area 571 388 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.group4"		}
	slot {name "slot_inv_35"		area 571 496 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.group5"		}
	slot {name "slot_inv_36"		area 679 388 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.group6"		}
	slot {name "slot_inv_37"		area 679 496 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.group7"		}
	slot {name "slot_inv_38"		area 787 388 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.group8"		}
	slot {name "slot_inv_39"		area 787 496 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.group9"		}
	slot {name "slot_inv_40"		area 895 388 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.group10"		}
	slot {name "slot_inv_41"		area 895 496 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.group11"		}
	slot {name "slot_inv_42"		area 1003 388 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.group12"		}
	slot {name "slot_inv_43"		area 1003 496 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.group13"		}
	slot {name "slot_inv_44"		area 1111 388 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.group14"		}
	slot {name "slot_inv_45"		area 1111 496 108 108	bam "STONSL10"	ScaleToClip slotinfo "characters[id].equipment.group15"		}

	list
	{
		column 
		{ 
			width	100
			label
			{
				area 		0,0,928,-1
			}
		}
		
		area 306 636 42 108
		rowheight	220
		hidehighlight
		table		"fakeItemList"
		var			currentFakePage
		scrollbar	'rgpscrl'
		scrollbar func "scrollGroundItemsFunction"
		scrollbar respectConstraints
		actionScroll "scrollGroundItems()"
		enabled "isGroundScrollbarEnabled()"
	}
 
	slot {name "slot_inv_68"		area 355 636 108 108	bam "STONSL10" ScaleToClip	slotinfo "characters[id].equipment.ground0"	actionScroll "scrollGroundItems()"	}
	slot {name "slot_inv_69"		area 463 636 108 108	bam "STONSL10" ScaleToClip	slotinfo "characters[id].equipment.ground1"	actionScroll "scrollGroundItems()"	}
	slot {name "slot_inv_70"		area 571 636 108 108	bam "STONSL10" ScaleToClip	slotinfo "characters[id].equipment.ground2"	actionScroll "scrollGroundItems()"	}
	slot {name "slot_inv_71"		area 679 636 108 108	bam "STONSL10" ScaleToClip	slotinfo "characters[id].equipment.ground3"	actionScroll "scrollGroundItems()"	}
	slot {name "slot_inv_72"		area 787 636 108 108	bam "STONSL10" ScaleToClip	slotinfo "characters[id].equipment.ground4"	actionScroll "scrollGroundItems()"	}
	slot {name "slot_inv_73"		area 895 636 108 108	bam "STONSL10" ScaleToClip	slotinfo "characters[id].equipment.ground5"	actionScroll "scrollGroundItems()"	}
	slot {name "slot_inv_74"		area 1003 636 108 108	bam "STONSL10" ScaleToClip	slotinfo "characters[id].equipment.ground6"	actionScroll "scrollGroundItems()"	}
	slot {name "slot_inv_75"		area 1111 636 108 108	bam "STONSL10" ScaleToClip	slotinfo "characters[id].equipment.ground7"	actionScroll "scrollGroundItems()"	}

	button
	{
		area 684 196 50 52
		bam RGPICOLR
		colordisplay 2
		action
		"
			Infinity_PushMenu('CHARACTER_COLOR', 0, 0)
		"
	}
	button
	{
		area 840 196 50 52
		bam RGPICOLR
		colordisplay 1
		action
		"
			Infinity_PushMenu('CHARACTER_COLOR', 0, 0)
		"
	}
	--label
	--{
	--	enabled		"abilitiesDetails == 1"
	--	area 0 0 1365 768
	--	bam "RGBACKG"
	--	ScaleToClip
	--}
	label
	{
		enabled		"abilitiesDetails == 1"
		area		352 14 875 740
		bam "RGPIDET"
	}
	label
	{
		enabled		"abilitiesDetails == 1"
		area		386 32 826 704
		text lua	"characters[id].AC.details .. '\n\n' .. characters[id].HP.details .. '\n\n' .. getInventoryTHAC0Details() .. '\n\n' .. getInventoryDamageDetails()" 
		text style	"normal"
		scrollbar 'rgpscrl'
		align left top
	}
	button
	{
		enabled		"abilitiesDetails == 1"
		area 1086 32 108 108
		--bam "MAPBUT"
		bam RGPBTDIA
		ScaleToClip
		action
		"
			abilitiesDetails = 0
		"
	}
	
	label
	{
		area 103 16 245 39
		text lua "characters[id].name"
		text style "rg_trajan"
		text color '$'
	}
	label
	{
		area 103 55 245 41
		text lua "characters[id].class"
		text style "rg_trajan"
		text color '$'
	}
	label
	{
		area		220 136 128 50
		text lua	"getStat(characters[id].AC.current,'AC',-1)"
		text style	"rg_trajan"
		align left center
		text point 12
	}
	label
	{
		area		220 216 128 70
		text lua	"characters[id].HP.current .. '/' .. getStat(characters[id].HP.max, 'HP', 1) "
		text style	"rg_trajan"
		align left center
		text point 12
	}
	label
	{
		area		220 304 128 70
		text lua	"getInventoryTHAC0()"
		text style	"rg_trajan"
		align left center
		text point 12
	}
	label
	{
		area		220 394 128 74
		text lua	"getInventoryDamage()"
		text style	"rg_trajan"
		align left center
		text point 12
	}
	label
	{
		area		220 484 128 74
		text lua	"characters[id].proficiencies.numAttacks.current"
		text style	"rg_trajan"
		align left center
		text point 12
	}
	label
	{
		area		242 576 86 66
		text	"/"
		text style	"rg_trajan"
		align center center
		text point 12
	}
	button
	{
		area 216 592 150 36
		encumbrance
	}
	label
	{
		area 220 669 128 64
		text lua "characters[id].gold"
		text style "rg_trajan"
		align left center
		text point 12
	}
	text
	{
		area 103 110 245 636
		bam "RGPISTAT"
		action "
		if abilitiesDetails == 1 then abilitiesDetails = 0 else abilitiesDetails = 1 end
		--abilitiesDetails = 1
		"
	}
	label --this has to be last so it draws over top of everything.
	{
		area 0 0 1365 768
		enabled "shouldGreyOutInventory()"
		--mosaic 'RGPINVDE'
		--rectangle opacity 200
		fill 1 1 1 130
	}
}
`
SLIDER_color_hair_start = 1
SLIDER_color_skin_start = 1
SLIDER_color_major_start = 1
SLIDER_color_minor_start = 1

SLIDER_color_hair = 1
SLIDER_color_skin = 1
SLIDER_color_major = 1
SLIDER_color_minor = 1
`
menu
{
	name 'CHARACTER_COLOR'
	align center center
	ignoreesc
	modal

	onOpen
	"
		Infinity_UpdateLuaStats()
		
		SLIDER_color_hair = characters[id].colors.hair
		SLIDER_color_skin = characters[id].colors.skin
		SLIDER_color_major = characters[id].colors.major
		SLIDER_color_minor = characters[id].colors.minor
		
		SLIDER_color_hair_start = SLIDER_color_hair
		SLIDER_color_skin_start = SLIDER_color_skin
		SLIDER_color_major_start = SLIDER_color_major
		SLIDER_color_minor_start = SLIDER_color_minor
	"
	onClose
	"
		if(SLIDER_color_hair_start ~= -1) then Infinity_SetHairColor(SLIDER_color_hair_start) end
		if(SLIDER_color_skin_start ~= -1) then Infinity_SetSkinColor(SLIDER_color_skin_start) end
		if(SLIDER_color_major_start ~= -1) then Infinity_SetMajorColor(SLIDER_color_major_start) end
		if(SLIDER_color_minor_start ~= -1) then Infinity_SetMinorColor(SLIDER_color_minor_start) end
	"
	--label
	--{
	--	area 0 0 1024 768
	--	mosaic 'GUICGB'
	--	enabled "CurrentlyInGame()"
	--}
	label
	{
	
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}
	--label
	--{
	--	area 494 4 414 44
	--	text "COLOR_CHOICES_TITLE"
	--	text style "title"
	--}
	
	button
	{
		area 544 598 114 160
		align center center
		paperdoll 0
	}
	button
	{
		area 700 598 114 160
		align center center
		paperdoll 1
	}
	
	label
	{
		enabled "characters[id].PC == 1"
		area 1308 104 42 44
		colordisplay 6
	}
	label
	{
		enabled "characters[id].PC == 1"
		area 1308 220 42 44
		colordisplay 3
	}
	label
	{
		area 1304 386 42 44
		colordisplay 2
	}
	label
	{
		area 1304 506 42 44
		colordisplay 1
	}
	
	label
	{
		area 28 16 382 44
		text "APPEARANCE_LABEL"
		text style "rg_trajan"
		text color 	'$'
		text point 14
		text align left center
	}
	
	label
	{
		enabled "characters[id].PC == 1"
		area 582 56 200 40
		text "HAIR_LABEL"
		text style "rg_trajan"
		align center center
	}
	slider
	{
		palette 6
		enabled "characters[id].PC == 1"
		area 28 84 1280 84
		bam	 'SLDRSTAR'
		scaleToClip
		position "SLIDER_color_hair"
		sequence 0
		frame	 1
		settings lua "game:GetPaletteSize(6)"
		action
		"
			Infinity_SetHairColor(SLIDER_color_hair)
		"
	}

	label
	{
		enabled "characters[id].PC == 1"
		area 582 172 200 40
		text "SKIN_LABEL"
		text style "rg_trajan"
		align center center
	}
	slider
	{
		palette 3
		enabled "characters[id].PC == 1"
		area 28 200 1280 84
		bam	 'SLDRSTAR'
		scaleToClip
		position "SLIDER_color_skin"
		sequence 0
		frame	 1
		settings lua "game:GetPaletteSize(3)"
		action
		"
			Infinity_SetSkinColor(SLIDER_color_skin)
		"
	}
	
	label
	{
		area 28 310 382 44
		text "CLOTHING_LABEL"
		text style "rg_trajan"
		text color 	'$'
		text point 14
		text align left center
	}
	
	label
	{
		area 582 340 200 40
		text "MAJOR_LABEL"
		text style "rg_trajan"
		align center center
	}
	slider
	{
		palette 2
		area 28 366 1276 84
		bam	 'SLDRSTAR'
		scaleToClip
		position "SLIDER_color_major"
		sequence 0
		frame	 1
		settings lua "game:GetPaletteSize(2)"
		action
		"
			Infinity_SetMajorColor(SLIDER_color_major)
		"
	}
	
	label
	{
		area 582 458 200 40
		text "MINOR_LABEL"
		text style "rg_trajan"
		align center center
	}
	slider
	{
		palette 1
		area 28 484 1276 86
		bam	 'SLDRSTAR'
		scaleToClip
		position "SLIDER_color_minor"
		sequence 0
		frame	 1
		settings lua "game:GetPaletteSize(1)"
		action
		"
			Infinity_SetMinorColor(SLIDER_color_minor)
		"
	}
	button
	{
		on escape
		area 82 650 383 82
		bam RGPBUT1
		text "CANCEL_BUTTON"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		action
		"
			Infinity_PopMenu('CHARACTER_COLOR',0,0)
		"
	}
	button
	{
		on return
		area 904 658 383 82
		bam RGPBUT1
		text "DONE_BUTTON"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		action
		"
			--save settings
			SLIDER_color_hair_start = SLIDER_color_hair
			SLIDER_color_skin_start = SLIDER_color_skin
			SLIDER_color_major_start = SLIDER_color_major
			SLIDER_color_minor_start = SLIDER_color_minor
			
			if (e:GetActiveEngine() == createCharScreen) then
				createCharScreen:OnDoneButtonClick()
			end
			
			Infinity_PopMenu('CHARACTER_COLOR',0,0)
		"
	}
}

menu
{
	name 'WORLD_LEVEL_UP_BUTTONS'
	align right top
	offset -65 0
	ignoreesc
	enabled "0" --disable this menu for now.
	button
	{
		enabled "Infinity_CanLevelUp(0)"
		bam GUIOSW
		area 0 14 44 44
		sequence 0
		action "Infinity_ActivateRecord(0)"
		pulse 1
	}
	button
	{
		enabled "Infinity_CanLevelUp(1)"
		bam GUIOSW
		area 0 106 44 44
		sequence 0
		action "Infinity_ActivateRecord(1)"
		pulse 1
	}
	button
	{
		enabled "Infinity_CanLevelUp(2)"
		bam GUIOSW
		area 0 198 44 44
		sequence 0
		action "Infinity_ActivateRecord(2)"
		pulse 1
	}
	button
	{
		enabled "Infinity_CanLevelUp(3)"
		bam GUIOSW
		area 0 290 44 44
		sequence 0
		action "Infinity_ActivateRecord(3)"
		pulse 1
	}
	button
	{
		enabled "Infinity_CanLevelUp(4)"
		bam GUIOSW
		area 0 382 44 44
		sequence 0
		action "Infinity_ActivateRecord(4)"
		pulse 1
	}
	button
	{
		enabled "Infinity_CanLevelUp(5)"
		bam GUIOSW
		area 0 474 44 44
		sequence 0
		action "Infinity_ActivateRecord(5)"
		pulse 1
	}
	
}
--local delta = Infinity_GetContentHeight(styles.normal.font, w, tableEntry.text, styles.normal.point, 1, styles.normal.useFontZoom) --1 for indent.
--Infinity_GetContentHeight(styles.normal.font, 500, getBodyString(), styles.normal.point, 1, styles.normal.useFontZoom)
`
function rgGetPopupArea()
	local rgJHeight = Infinity_GetContentHeight(styles.normal.font, 622, getBodyString(), styles.normal.point, 1, styles.normal.useFontZoom)
	Infinity_SetArea('rgJournalPopudBackground', nil, nil, nil, (rgJHeight+160))
end
`

menu
{
	name 'textflash'
	opacity lua 'getOpacityForInfoBlock(1000)'
	enabled 'getOpacityForInfoBlock(1000) ~= 0'
	align center top
	offset 0 10
	--onOpen
	--"
	--	--local rgJHeight = Infinity_GetContentHeight(styles.normal.font, 650, getBodyString(), styles.normal.point, 1, styles.normal.useFontZoom)
	--	--Infinity_SetArea('rgJournalPopudBackground', nil, nil, nil, rgJHeight*10)
	--	Infinity_PopMenu('WORLD_QUICKLOOT')
	--"
	--onClose
	--"
	--	Infinity_PushMenu('WORLD_QUICKLOOT')
	--"

	label
	{
		name "rgJournalPopudBackground"
		area 0 0 650 214	
		rectangle 4
		rectangle opacity 200 
	}
	label
	{
		area 0 0 0 0
		text lua "rgGetPopupArea()"
	}
	label
	{
		area 20 14 500 26
		text lua "getSubtitleString()" --getTitleString() .. ': ' .. 
		text style "rg_trajan"
		text align left center
		text point 14
		text color C
	}
	--text
	--{
	--	area 92 36 348 26
	--	text lua "getSubtitleString()"
	--	text style "label"
	--	text align left center
	--	text point 14
	--	text color D
	--	scrollbar 'rgpscrl'
	--	scrollbar hide lua "1"
	--}

	text
	{
		area 20 40 622 180
		text lua "getBodyString()"
		text style "normal"
		text align left top
		text point 10
		scrollbar 'rgpscrl'
		scrollbar hide lua "1"
	}	
	--label
	--{
	--	area 16 9 72 55
	--	bam 'GUILS10'
	--	sequence 2
	--	frame 0
	--}
	button
	{
		area 0 0 650 240
		action
		"
			FindTitle = getSubtitleString()
			if(sidebarsGreyed ~= 1) then
				rgEscModeJournal = 1
				e:GetActiveEngine():OnLeftPanelButtonClick(7)
				CloseAll_Small()
				findQuestPopUp()
				local tf = next(textflashes)
				setSelectedQuest(textflashes[tf][5])
				CheckForOpenedQuests_Small()
			end
		"
	}
	button
	{
		bam GUIOSW
		on esc
		area 600 4 44 44
		sequence 2
		action 
		"
			--end the animation
			local tf = next(textflashes)
			textflashes[tf] = nil
		"
	}
}


`
luaEdit = ""
luaEditDebugDump = 0
luaEditHistory = {}
luaEditMaxHistory = 10
luaEditHistoryIndex = 0
luaEditShowHistoryList = 0
luaEditHistoryListSelected = 0
function CloseAll_Small()
	for i=1,#questDisplay,1 do
		if questDisplay[i].expanded == 1 then questDisplay[i].expanded = nil end
	end
end

function CheckForOpenedQuests_Small()
	QuestOpen = 0
	for i=1,#questDisplay,1 do
		if questDisplay[i].expanded == 1  then
			QuestOpen = 1
		end
	end
end
function hasMatchingJournal()
	FindTitle = string.sub(getSubtitleString(),1,15)
	for i=1,#questDisplay,1 do
		local rowTab =  questDisplay[i]
		local text = Infinity_FetchString(rowTab.text)
		if string.find(string.lower(text), string.lower(FindTitle)) then
			return 1
		end
	end
	return nil
end
function findQuestPopUp()
	FindTitle = string.sub(FindTitle,1,15)
	for i=1,#questDisplay,1 do
		local rowTab =  questDisplay[i]
		local text = Infinity_FetchString(rowTab.text)
		if string.find(string.lower(text), string.lower(FindTitle)) then
			questDisplay[i].expanded = 1
			questDisplay[i+1].expanded = 1
			QFilter = 3
			if (questDisplay[i].stateType ~= const.ENTRY_TYPE_COMPLETE) then
				rgIsCurrentQuests = 1
			else
				rgIsCurrentQuests = 0
			end
		end
	end
end
function updateLuaHistory()
	local i = 2
	local tempTab = {}
	tempTab[1] = luaEdit
	while ( i <= luaEditMaxHistory ) do
		tempTab[i] = luaEditHistory[i-1]
		i = i + 1
	end
	luaEditHistory = tempTab
end
function loadLuaHistory()
	local i = 1
	while (i <= luaEditMaxHistory ) do
		luaEditHistory[i] = Infinity_GetINIString("Lua Edit","String"..i-1, "")
		i = i + 1
	end
end
function saveLuaHistory()
	local i = 1
	while (i <= luaEditMaxHistory ) do
		Infinity_SetINIValue("Lua Edit","String"..i-1, luaEditHistory[i])
		i = i + 1
	end
end
function luaEditHistoryUp()
	if(luaEditHistoryIndex <= 1) then return end
	luaEditHistoryIndex = luaEditHistoryIndex - 1
	luaEdit = luaEditHistory[luaEditHistoryIndex]
end
function luaEditHistoryDown()
	if(luaEditHistoryIndex == luaEditMaxHistory) then return end
	if(luaEditHistory[luaEditHistoryIndex + 1] == "") then return end
	luaEditHistoryIndex = luaEditHistoryIndex + 1
	luaEdit = luaEditHistory[luaEditHistoryIndex]
end

function rgGetCheatLists()
	local out = {}
	
	for i = 1,#keybindings[5] do
		local a = keybindings[5][i][3]
		local b = keybindings[5][i][4]
		table.insert(out, {a,b})
		
	end
	
	for i = 1,#keybindings[6] do
		local a = keybindings[6][i][3]
		local b = keybindings[6][i][4]
		table.insert(out, {a,b})
	end
	
	rgCheatSpells = out
end
function rgGetCheatSpellCode(spell)
	local out = ''
	out = 'C:AddSpell("' .. spell .. '")'
	return out
end

cheatGoldAmt = 1000000
cheatXpAmt = 500000

cheatAreaDisplayList = {}
rgCheatSection = 1
rgCheatSpells = {}

`
menu
{
	name 'cheatMenu'
	ignoreEsc

	onOpen
	"
		if rgGameEngine == 0 then --bg1
			if game:GetMissionPackInfo() then
				cheatAreaDisplayList = cheatAreasTutorial
			elseif game:GetMissionPackInfoTBP() then
				cheatAreaDisplayList = cheatAreasArena
			else
				cheatAreaDisplayList = cheatAreas
			end
		elseif rgGameEngine == 1 then --sod
			if game:GetMissionPackInfo() then
				cheatAreaDisplayList = cheatAreasTutorial
			elseif game:GetMissionPackInfoTBP() then
				cheatAreaDisplayList = cheatAreasArena
			elseif startEngine:GetCampaign() == 3 then
				cheatAreaDisplayList = cheatAreasExpansion
			else
				cheatAreaDisplayList = cheatAreas
			end
		elseif rgGameEngine == 2 then --bg2
			if game:GetMissionPackInfo() then
				cheatAreaDisplayList = cheatAreasTutorial
			elseif game:GetMissionPackInfoTBP() then
				cheatAreaDisplayList = cheatAreasArena
			elseif game:GetMissionPackInfo25() then
				cheatAreaDisplayList = cheatAreasExpansion
			else
				cheatAreaDisplayList = cheatAreas
			end
		elseif rgGameEngine == 3 then --iwd
			if game:GetMissionPackInfo25() then
				cheatAreaDisplayList = cheatAreasHoW
			else
				cheatAreaDisplayList = cheatAreas
			end
		elseif rgGameEngine == 4 then --eet
			if startCampaignData[currentCampaign].cheatAreasTable ~= nil then
				cheatAreaDisplayList = startCampaignData[currentCampaign].cheatAreasTable
			else
				cheatAreaDisplayList = cheatAreas
			end
		end
		
		w, h = Infinity_GetScreenSize()
		Infinity_SetArea('rgCheatButtonLearnSpell', w-75, 8, 71, 103 * Infinity_GetNumCharacters())
	"

	label
	{
		area 100 80 829 298
		rectangle 4	
	}
	list
	{
		column 
		{ 
			width 100 
			label
			{	
				area 0 0 -1 24
				bam rgpslct
				sequence lua "rgGetSelectedBackground(cheatTeleportArea, rowNumber)"
				ScaleToClip
			}
			label
			{
				area 10 0 90 24
				text lua "cheatAreaDisplayList[rowNumber][1]"
				text style "normal"
			}
			label
			{
				area 100 0 -1 24
				text lua "cheatAreaDisplayList[rowNumber][2]"
				text style "normal"
			}
		}
		hideHighlight
		area 120 98 494 260
		enabled "rgCheatSection == 1"
		rowheight	24
		table		"cheatAreaDisplayList"
		var		cheatTeleportArea
		scrollbar	'rgpscrl'
	}
	button
	{
		area		620 314 288 49
		enabled "rgCheatSection == 1"
		bam			RGPBUT1
		text		"TRAVEL_BUTTON"
		text style	"rg_trajan"
		text align center center
		ScaleToClip
		pad 30 5 30 5
		action 		"C:MoveToArea(cheatAreaDisplayList[cheatTeleportArea][1])"
	}
	list
	{
		column 
		{ 
			width 100 
			label
			{	
				area 0 0 -1 24
				bam rgpslct
				sequence lua "rgGetSelectedBackground(cheatSpell, rowNumber)"
				ScaleToClip
			}
			label
			{
				area 10 0 90 24
				text lua "rgCheatSpells[rowNumber][1]"
				text style	"normal"
				align left center
			}
			label
			{
				area 100 0 -1 24
				text lua "Infinity_FetchString(rgCheatSpells[rowNumber][2])"
				text style	"normal"
				align left center
			}
		}
		hideHighlight
		enabled "rgCheatSection == 2"
		area 120 98 494 260
		rowheight	dynamic
		table		"rgCheatSpells"
		var			cheatSpell
		scrollbar	'rgpscrl'
		action "luaEdit = rgGetCheatSpellCode(rgCheatSpells[cheatSpell][1])"
		
	}
	button
	{
		area		620 206 288 49
		bam			RGPBUT1
		text			"GODBOW_LABEL"
		text style	"rg_trajan"
		text align center center
		ScaleToClip
		pad 30 5 30 5
		action		"C:CreateItem('godbow')"
	}
	button
	{
		area		620 98 154 48
		bam			RGPBUT1
		text			"GIVE_GOLD_LABEL"
		text style	"rg_trajan"
		text align center center
		ScaleToClip
		pad 30 5 30 5
		action		"C:AddGold(cheatGoldAmt)"
	}
	edit
	{
		area		774 102 134 40
		var		cheatGoldAmt
		text style	"edit"
		maxlines	1
		fill        112 111 111 64
	}

	button
	{
		area		620 152 154 48
		bam			RGPBUT1
		text			"GIVE_XP_LABEL"
		text style	"rg_trajan"
		text align center center
		ScaleToClip
		pad 30 5 30 5
		action		"C:SetCurrentXP(cheatXpAmt)"
	}
	edit
	{
		area		774 156 134 40
		var		cheatXpAmt
		text style	"edit"
		maxlines	1
		fill        112 111 111 64
	}

	button
	{
		area		620 260 288 49
		bam			RGPBUT1
		text			"EXPLORE_LABEL"
		text style	"rg_trajan"
		text align center center
		ScaleToClip
		pad 30 5 30 5
		action		"C:ExploreArea()"
	}
	
	button
	{
		enabled "rgCheatSection == 1"
		area 110 370 87 87
		bam rgpguils
		sequence 4
		ScaleToClip
		action		"rgCheatSection = 2"
	}
	button
	{
		enabled "rgCheatSection == 2"
		area 110 370 87 87
		bam rgpguils
		sequence 0
		ScaleToClip
		action		"rgCheatSection = 1"
	}
	button
	{
		area 200 370 87 87
		bam STONSL10
		text style	"rg_trajan"
		text "+1 h"
		text align center center
		ScaleToClip
		action		"C:Eval('AdvanceTime(300)')"
	}
	button 
	{
		name "rgCheatButtonLearnSpell"
		enabled "rgCheatSection == 2"
		area 0 0 70 70
		fill 112 111 111 64
		action
		"
			--luaEdit = rgGetCheatSpellCode(rgCheatSpells[cheatSpell][1])
			updateLuaHistory()
			saveLuaHistory()
			Infinity_LuaConsoleInput(luaEditObjectId,luaEditDebugDump)
			return -1
		"
	}

}
menu
{
	name "luaHistoryMenu"
	offset 400 80
	align center top
	label
	{
		area 0 0 309 300
		rectangle 4	
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "luaEditHistory[rowNumber]"
				text style	"normal"
			}
		}
		area 20 16 270 266
		rowheight	30
		var luaEditHistoryListSelected
		table		"luaEditHistory"
		scrollbar	'rgpscrl'
		action
		"
			luaEdit = luaEditHistory[luaEditHistoryListSelected]
		"
	}
}
menu
{
	name 'cheatConsole'
	align center top
	ignoreEsc

	onOpen 
	"
		toolbarTop = 50
		Infinity_PushMenu('WORLD_MESSAGES')
		Infinity_PushMenu('cheatMenu', 0, 0);
		Infinity_FocusTextEdit('luaEditArea'); 
		luaEdit = trim(luaEdit)
		loadLuaHistory()
	"
	onClose 
	"
		Infinity_PopMenu('cheatMenu', 0, 0);
		Infinity_PopMenu('luaHistoryMenu', 0, 0);
	"
	label
	{
		area 0 0 1000 80
		bam rgprecbc
		ScaleToClip
	}
	edit
	{
		name				"luaEditArea"
		area				58 18 888 46
		var					luaEdit
		scrollbar			'rgpscrl'
		text style			"edit"
		fill            	112 111 111 64
		text useFontZoom	0
		text point 28
		--text align left center
		action
		"
			--if key_pressed is return
			if (key_pressed == 13) then
				updateLuaHistory()
				saveLuaHistory()
				Infinity_LuaConsoleInput(luaEditObjectId,luaEditDebugDump)
				return -1
			end
			if (key_pressed == 27) then
				return 0
			end
			return 1
		"
	}
	
	--button
	--{
	--	area		816 6 32 32
	--	bam			ROUNDBUT
	--	toggle		luaEditShowHistoryList
	--	action
	--	"
	--		if(luaEditShowHistoryList == 0) then
	--			Infinity_PopMenu('luaHistoryMenu',0,0)
	--		else
	--			Infinity_PushMenu('luaHistoryMenu',0,0)
	--		end
	--	"
	--}
	button
	{
		area		1000 5 70 70
		bam			RGPBTDIA
		ScaleToClip
		action
		"
			Infinity_PopMenu('cheatConsole')
			Infinity_PopMenu('luaHistoryMenu')
			Infinity_PopMenu('cheatMenu')
			Infinity_PushMenu('WORLD_MESSAGES')
			Infinity_PushMenu('WORLD_QUICKLOOT')
		"
	}
	button
	{
		enabled "Infinity_TextEditHasFocus()"
		on up
		action
		"
			luaEditHistoryUp()
		"
	}
	button
	{
		enabled "Infinity_TextEditHasFocus()"
		on down
		action
		"
			luaEditHistoryDown()
		"
	}

}
`
cloudLoadState=0
function CheckCloudSaveStatus()
	Infinity_UpdateCloudSaveState()
	if(cloudLoadState == 0) then
		Infinity_PopMenu()
	end
	return GetCloudLoadingText()
end
function GetCloudLoadingText()
	if(cloudLoadState == 1 or cloudLoadState == 0) then
		return t('DOWNLOADING_SAVE_NORMAL')
	end
	if(cloudLoadState == 2) then
		return t('SEARCHING_SAVE_NORMAL')
	end
	return t('CLOUD_STATE_UNDEFINED_NORMAL')
end
`
menu
{
	name 'CloudSaveUpdateMenu'
	modal
	label
	{
		area 0 0 408 418
		mosaic GUIERR
	}
	label 
	{
		area 82 74 242 88
		text lua "CheckCloudSaveStatus()"
		text style "label"
	}
	button
	{
		area 		102 318 200 44
		bam 		GUIOSTUM
		sequence	0
		text		"SKIP_BUTTON"
		text style	"button"
		on 			escape
		action
		"
			Infinity_PopMenu()
		"	
	}
}
`
messageBoxCurMessage = nil
messageBoxMessages = {}
function initMessageBox(message)
	messageBoxMessages[message] = 1
	if(messageBoxCurMessage ~= nil) then
		--message box already active
		return
	end
	getNextMessage()
	Infinity_PushMenu('LuaMessageBox',0,0)
end

function getNextMessage()
	i = 1
	while ( i <= messageBoxMessageCount ) do
		showMessage = messageBoxMessages[i]
		if ( showMessage ~= nil ) then
			messageBoxCurMessage = i
			return 1
		end
		i = i + 1
	end
	--whole table scanned, all messages have been displayed
	return 0
end
`
menu
{
	name 'LuaMessageBox'
	align center center
	modal
	label
	{
		area 0 0 657 234
		mosaic GUIERR6
	}
	label
	{
		area 29 21 580 126
		text lua "messages[messageBoxCurMessage]"
		text style	"label"
	}
	button
	{
		area 213 170 230 44
		bam GUIBUTNT
		text "DONE_BUTTON"
		text style	"button"
		action
		"
			messageBoxMessages[messageBoxCurMessage] = nil
			if(getNextMessage() == 0) then
				messageBoxCurMessage = nil
				Infinity_PopMenu()
			end
		"	
	}
}

`
	partyImport = {}
`
menu
{
	name 'IMPORTPARTY'
	align center center
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text "CREATE_PARTY_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	label
	{
		enabled		"game:GetMissionPackInfoTBP()"
		area 		67 534 1185 126
		scrollbar	'rgpscrl'
		text style	"normal"
		text 			32717
	}

	--portraits
	label
	{
		area 67 104 71 102
		bam rgpporl
		ScaleToClip
	}
	button
	{
		area 71 106 63 98
		bitmap lua "partyImport.character[1].portrait"
		clickable lua "partyImport.character[1].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(0)
		"
	}
	label
	{
		area 67 241 71 102
		bam rgpporl
		ScaleToClip
	}
	button
	{
		area 71 243 63 98
		bitmap lua "partyImport.character[2].portrait"
		clickable lua "partyImport.character[2].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(1)
		"
	}
	label
	{
		area 67 380 71 102
		bam rgpporl
		ScaleToClip
	}
	button
	{
		area 71 382 63 98
		bitmap lua "partyImport.character[3].portrait"
		clickable lua "partyImport.character[3].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(2)
		"
	}
	label
	{
		area 714 104 71 102
		bam rgpporl
		ScaleToClip
	}
	button
	{
		area 718 106 63 98
		bitmap lua "partyImport.character[4].portrait"
		clickable lua "partyImport.character[4].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(3)
		"
	}
	label
	{
		area 714 241 71 102
		bam rgpporl
		ScaleToClip
	}
	button
	{
		area 718 243 63 98
		bitmap lua "partyImport.character[5].portrait"
		clickable lua "partyImport.character[5].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(4)
		"
	}
	label
	{
		area 718 380 71 102
		bam rgpporl
		ScaleToClip
	}
	button
	{
		area 722 382 63 98
		bitmap lua "partyImport.character[6].portrait"
		clickable lua "partyImport.character[6].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(5)
		"
	}

	button
	{
		area 688 674 416 76
		bam RGPBUT1
		ScaleToClip
		text "PLAY_IMPORT_BUTTON" -- Play
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		clickable lua "partyImport.playbuttonclickable"
		action 
		"
			createPartyScreen:OnDoneButtonClick()
		"
	}
	button
	{
		on escape
		area 260 674 416 76
		bam RGPBUT1
		ScaleToClip
		text "BACK_BUTTON" -- Back
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		action 
		"
			createPartyScreen:OnBackButtonClick()
		"
	}

	--delete/create buttons
	button
	{
		area 166 102 438 70
		bam RGPBUT1
		ScaleToClip
		text lua "partyImport.character[1].createdelete"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		action
		"
			createPartyScreen:OnCreateDeleteButtonClick(0)
		"
	}
	button
	{
		area 166 239 438 71
		bam RGPBUT1
		ScaleToClip
		text lua "partyImport.character[2].createdelete"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		action
		"
			createPartyScreen:OnCreateDeleteButtonClick(1)
		"
	}
	button
	{
		area 166 380 438 72
		bam RGPBUT1
		ScaleToClip
		text lua "partyImport.character[3].createdelete"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		action
		"
			createPartyScreen:OnCreateDeleteButtonClick(2)
		"
	}
	button
	{
		area 814 104 438 68
		bam RGPBUT1
		ScaleToClip
		text lua "partyImport.character[4].createdelete"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		action
		"
			createPartyScreen:OnCreateDeleteButtonClick(3)
		"
	}
	button
	{
		area 814 241 438 69
		bam RGPBUT1
		ScaleToClip
		text lua "partyImport.character[5].createdelete"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		action
		"
			createPartyScreen:OnCreateDeleteButtonClick(4)
		"
	}
	button
	{
		area 814 380 438 72
		bam RGPBUT1
		ScaleToClip
		text lua "partyImport.character[6].createdelete"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		action
		"
			createPartyScreen:OnCreateDeleteButtonClick(5)
		"
	}

	-- character labels
	label
	{
		area 196 178 408 50
		text lua "partyImport.character[1].name"
		text style "rg_trajan"
	}
	label
	{
		area 196 315 408 50
		text lua "partyImport.character[2].name"
		text style "rg_trajan"
	}
	label
	{
		area 196 456 408 50
		text lua "partyImport.character[3].name"
		text style "rg_trajan"
	}
	label
	{
		area 844 178 408 50
		text lua "partyImport.character[4].name"
		text style "rg_trajan"
	}
	label
	{
		area 844 315 408 50
		text lua "partyImport.character[5].name"
		text style "rg_trajan"
	}
	label
	{
		area 838 456 414 50
		text lua "partyImport.character[6].name"
		text style "rg_trajan"
	}
}
`
function getCampaignButtonTitle()
	--local titl
	
	
	if rgGameEngine == 0 then
		if currCampaign == 1 then
			return t("BALDURS_GATE_BUTTON")
		elseif currCampaign == 0 then
			return t("BLACK_PITS_BUTTON")
		else 
			return ''
		end
	elseif rgGameEngine == 2 then
		if currCampaign == 2 then
			return t("SHADOWS OF AMN")
		elseif currCampaign == 1 then
			return t("THE BLACK PITS 2")
		elseif currCampaign == 0 then
			return t("THRONE OF BHAAL")
		else 
			return ''
		end
	elseif rgGameEngine == 3 then
		if currCampaign == 1 then
			return t("ICEWIND DALE")
		elseif currCampaign == 0 then
			return t("HEART OF WINTER")
		else 
			return ''
		end
	end
end

function rgGetGameEngine()
	local str = cheatAreas[1][1]
	local stre = ''
	if type(cheatAreasExpansion) == 'table' then
		stre = cheatAreasExpansion[1][1]
	end
	
	if stre == "BD0010" then --sod
		return 1
	elseif str == "AR0002" then --bg1
		return 0 
	elseif str == "AR0011" then --bg2
		return 2
	elseif str == "AR1000" then --iwd
		return 3
	end
end

function rgGetGameEngineString(bg1,sod,bg2,iwd)
	local eng = rgGameEngine
	
	if eng == 0 then 
		return Infinity_FetchString(bg1)
	elseif eng == 1 then 
		return Infinity_FetchString(sod)
	elseif eng == 2 then 
		return Infinity_FetchString(bg2)
	elseif eng == 3 then 
		return Infinity_FetchString(iwd)
	end
end

if type(cheatAreasExpansion) == 'table' then
	if cheatAreasExpansion[1][1] == "BD0010" then
		usingSODStartMenu = 1
	end
end

`
menu
{
	name 'START'
	align center center
	ignoreesc
	onOpen "
		e:CheckGUISong()
		rgGameEngine = rgGetGameEngine()
		rgEscModeJournal = 0
		rgIsInEscMode = 0
		rgGetCheatLists()
		if currCampaign == nil then currCampaign = 0 end
		--currCampaign = 0
		--local state = startEngine:GetEngineState()
		--if lastStartMenu and lastStartMenu ~= 'START' then
		--	Infinity_PushMenu(lastStartMenu)
		--	lastStartMenu = nil
		--elseif state == 1 then
		--	Infinity_PushMenu('START_SP')
		--elseif state == 2 then
		--	Infinity_PushMenu('START_MP')
		--elseif state == 0 then
		--	Infinity_PushMenu('START_MAIN')
		--end
		Infinity_SetBackground('BACKGROUND')
		canContinue = startEngine:HasGameToContinue()
		--startEngine:OnSoAButtonClick(true)
	"
	onClose "
		--local state = startEngine:GetEngineState()
		--if state == 1 then
		--	Infinity_PopMenu('START_SP')
		--elseif state == 2 then
		--	Infinity_PopMenu('START_MP')
		--elseif state == 0 or state == 3 then
		--	Infinity_PopMenu('START_MAIN')
		--end

	"

	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}
	label
	{
		area 78 42 544 146	
		bam 'RGPTITLE'
		sequence lua "rgGameEngine"
		align center center
		frame lua "currCampaign"
	}
	label
	{
		area 72 188 548 548	
		bam 'RGPLOGO'
		ScaleToClip
		sequence lua "rgGameEngine"
		--align center center
		frame lua "currCampaign"
	}
	
	button
	{
		bam RGPBUT1
		area 700 60 640 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "CONTINUE_BUTTON"
		clickable lua "canContinue"
		action "startEngine:OnContinueGame()"
	}
	button
	{
		bam RGPBUT1
		area 700 170 640 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "NEW_GAME_BUTTON"
		action 
		"
			if rgGameEngine == 0 or rgGameEngine == 3 then
				if currCampaign == 0 then
					startEngine:OnSoAButtonClick(true)
				else
					startEngine:OnTBPButtonClick(true)
				end
			elseif rgGameEngine == 1 then
				startEngine:OnCampaignButtonClick('SOD',true)
			elseif rgGameEngine == 2 then
				if currCampaign == 0 then
					startEngine:OnSoAButtonClick(true)
				elseif currCampaign == 1 then
					startEngine:OnToBButtonClick(true)
				else
					startEngine:OnTBPButtonClick(true)
				end
			end
			Infinity_PopMenu(); 
			if rgGameEngine == 3 then
				startEngine:OnCreatePartyButtonClick();
			else
				startEngine:OnNewGameButtonClick();
			end
		"
	}
	button
	{
		bam RGPBUT1
		area 700 280 640 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "LOAD_GAME_BUTTON"
		action "Infinity_PopMenu(); startEngine:OnLoadGameButtonClick()"
	}
	button
	{
		bam RGPBUT1
		area 700 390 640 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "MULTIPLAYER_BUTTON"
		action 
		"
			startEngine:OnMultiPlayerButtonClick()
		"
	}
	button
	{
		bam RGPBUT1
		area 700 500 640 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "OPTIONS_BUTTON"
		action "
			Infinity_TransitionMenu('START_OPTIONS')
			optionsScreen:SetEngineState(1)
			startEngine:OnOptionsButtonClick()
			lastStartMenu = 'START_MAIN'
		"
	}
	button 
	{
		enabled "rgGameEngine ~= 1"
		bam RGPBUT1
		area 700 610 640 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		text color '$'
		ScaleToClip
		text lua "getCampaignButtonTitle()"
		action 
		"
		if rgGameEngine == 0 or rgGameEngine == 3 then
			if currCampaign == 0 then
				currCampaign = 1
				startEngine:OnTBPButtonClick(true)
			else
				currCampaign = 0
				startEngine:OnSoAButtonClick(true)
			end
		elseif rgGameEngine == 2 then
			if currCampaign == 0 then
				currCampaign = 1
				startEngine:OnToBButtonClick(true)
			elseif currCampaign == 1 then
				currCampaign = 2
				startEngine:OnTBPButtonClick(true)
			else
				currCampaign = 0
				startEngine:OnSoAButtonClick(true)
			end
		end
		"
	}
	label
	{
		area 916 722 210 36
		text lua "versionString"
		text style	"rg_trajan"
		--text point	10
		align center center
	}
	--button
	--{
	--	bam 'STARTMBT'
	--	sequence 0
	--	area 116 282 252 66
	--	pad 10 8 10 8
	--	text style "button"
	--	text "SINGLEPLAYER_BUTTON"
	--	--text 15413
	--	action 
	--	"
	--		startEngine:SetEngineState(1)
	--		Infinity_TransitionMenu('START_SP')
	--	"
	--}
	--button 
	--{
	--	bam 'STARTMBT'
	--	sequence 6
	--	area 50 306 300 44
	--	align center center
	--	text style "button"
	--	text "TUTORIAL_BUTTON"
	--	action 
	--	"
	--		startEngine:OnTutorialButtonClick()
	--	"
	--}
	--button 
	--{
	--	bam 'STARTMBT'
	--	sequence 6
	--	area 50 456 300 44
	--	align center center
	--	text style "button"
	--	text "CREDITS_BUTTON"
	--	action 
	--	"
	--		Infinity_PushMenu('CREDITS')
	--	"
	--}
    --
	--button 
	--{
	--	bam 'STARTMBT'
	--	sequence 6
	--	area 50 704 300 44
	--	align center center
	--	text style "button"
	--	text "QUIT_GAME_BUTTON"
	--	enabled "not e:IsTouchUI()"
	--	action 
	--	"
	--		startEngine:OnQuitButtonClick()
	--	"
	--}
}

menu
{
	name 'START_MAIN'
	align center center
	ignoreEsc

	onOpen	"
		canContinue = startEngine:HasGameToContinue()
	"

	label
	{
		area 0 0 1024 768
		mosaic 'START'
	}


	
	button
	{
		area 655 446 249 66
		bam 'STARTMBT'
		sequence 5
		pad 10 8 10 8
		text style "button"
		text "BACK_BUTTON"
		action 
		"
			e:GetObjectGame():SetCampaign('')
			Infinity_PopMenu()
			"
	}
}
menu
{
	name 'START_SP'
	align center center
	ignoreEsc

	label
	{
		area 0 0 1024 768
		mosaic 'START'
	}


	
	button
	{
		bam 'STARTMBT'
		sequence 1
		area 116 356 226 78
		pad 10 8 10 8
		text style "button"
		text "PREGENERATE_BUTTON"
		action "Infinity_PopMenu(); startEngine:OnPreGenerateButtonClick()"
	}
	--button
	--{
	--	bam 'STARTMBT'
	--	sequence 4
	--	area 678 356 226 78
	--	pad 10 8 10 8
	--	text style "button"
	--	text "IMPORT_BUTTON"
	--	action 
	--	"
	--		Infinity_TransitionMenu('CONNECTION')
	--		startEngine:OnMultiPlayerButtonClick()
	--	"
	--}
	button
	{
		bam 'STARTMBT'
		sequence 2
		area 116 446 256 70
		pad 10 8 10 8
		text style "button"
		text "OPTIONS_BUTTON"
		action "
			Infinity_TransitionMenu('START_OPTIONS')
			optionsScreen:SetEngineState(1)
			startEngine:OnOptionsButtonClick()
			lastStartMenu = 'START_SP'
		"
	}
	button
	{
		area 655 446 249 66
		bam 'STARTMBT'
		sequence 5
		pad 10 8 10 8
		text style "button"
		text "BACK_BUTTON"
		action "startEngine:SetEngineState(0); Infinity_TransitionMenu('START')"
	}
}


`

function magePageInfo()
	if bookMode == 0 then -- Regular
		if characters[id].hasSorcererBook then
			return t("SPELLS_CAN_CAST_LABEL") .. ": " .. characters[id].mageDetails[currentSpellLevel].slotsRemaining .. "/" .. characters[id].mageDetails[currentSpellLevel].maxMemorized
		else
			return t("MEMORIZED_LABEL") --.. ": " .. #bottomSpells .. "/" .. characters[id].mageDetails[currentSpellLevel].maxMemorized
		end
	elseif bookMode == 1 then -- Sequencer/Contingency
		return t("SPELLS_LABEL") .. " :" .. #bottomSpells .. "/" .. #bottomSpellsPlaceHolder
    
	end
	return ""
end

contingencyDescription = 0

function mageBookDescription()
	if mageBookEnabled == true then
		if bookMode == 0 then
			if characters[id].mageSpells[currentSpellLevel][currentBookSpell] then
				return Infinity_FetchString(characters[id].mageSpells[currentSpellLevel][currentBookSpell].description)
			else
				return t('SPELL_MEMORIZATION_HELP')
			end
		elseif bookMode == 1 then
			if contingencyDescription == 0 and currentBookSpell ~= 0 then
				return Infinity_FetchString(bookSpells[currentBookSpell].description)
			else
				lastCurrentBookSpell = 0
				if contingencyDescription == 0 then
					contingencyDescription = mageBookStrings[contingencyResRef].tip
				end
				return Infinity_FetchString(contingencyDescription)
			end
		end
	end
	return ""
end
function mageBookTitle()
	if bookMode == 1 and mageBookStrings[contingencyResRef] then
		return t(mageBookStrings[contingencyResRef].title)
	else
		return characters[id].name .. ', ' .. characters[id].class
	end
end
function mageBookAction()
	if bookMode == 1 and mageBookStrings[contingencyResRef] then
		return t(mageBookStrings[contingencyResRef].action)
	else
		return t("MAGE_BOOK_LABEL")
	end
end


function makeBlankTable(num)
	local out = {}
	for i = 1,num do
		table.insert(out, {})
	end
	return out
end

function contingencyComplete()
	if showContingency then
		return #bottomSpells == #bottomSpellsPlaceHolder and (currentContingencyCondition or 0) > 0 and (currentContingencyTarget or 0) > 0
	else
		return #bottomSpells == #bottomSpellsPlaceHolder
	end
end

function contingencyDoneButtonText()
	if contingencyComplete() then
		return t("DONE_BUTTON")
	else
		return t("CANCEL_BUTTON")
	end
end

function filterMemorizedMageSpells()
	local out = {}
	currentSpellLevel = math.min(currentSpellLevel, 9)
	for k,v in pairs(characters[id].mageSpells[currentSpellLevel]) do
		for i=v.memorizedCount, 1, -1 do
			local spell = deepcopy(v)
			if(i <= v.castableCount) then
				spell.castable = 1
			else
				spell.castable = 0
			end
			table.insert(out, spell)
		end
	end
	return out
end

function tableInsert(out, v)
	if mageScreen:SpellSwappedInContingency(v.resref) then
		for key,value in pairs(contingencySwapTable) do
			value.castableCount = v.castableCount
			table.insert(out, value)
		end
	else
		table.insert(out, v)
	end
end

function filterContingencyMageSpells()
	local out = {}
	if characters[id].mageSpells ~= nil and characters[id].mageSpells[currentSpellLevel] ~= nil then
		for k,v in pairs(characters[id].mageSpells[currentSpellLevel]) do
			if v.castableCount > 0 and mageScreen:SpellAllowedForContingency(v.level, v.resref) then
				tableInsert(out, v)
			end
		end
	end
	if characters[id].priestSpells ~= nil and characters[id].priestSpells[currentSpellLevel] ~= nil then
		for k,v in pairs(characters[id].priestSpells[currentSpellLevel]) do
			if v.castableCount > 0 and mageScreen:SpellAllowedForContingency(v.level, v.resref) then
				tableInsert(out, v)
			end
		end
	end
	return out
end

function findFirstDifferenceInSpellList(oldList, newList)
	local ret = -1
	local spellIndex = 1

	if oldList ~= nil and newList ~= nil then
		while oldList[spellIndex] ~= nil do
			if newList[spellIndex] == nil then
				print("New list empty at point "..spellIndex)
				ret = spellIndex
				break
			end
			if oldList[spellIndex].icon ~= newList[spellIndex].icon then
				print("Lists differ at point "..spellIndex.." "..oldList[spellIndex].icon.." vs "..newList[spellIndex].icon)
				ret = spellIndex
				break
			end
			spellIndex = spellIndex + 1
		end
		if oldList[spellIndex] == nil and newList[spellIndex] ~= nil then
			print("New list has a new spell at point "..spellIndex)
			ret = spellIndex
		end
	end

	return ret
end

showMageMemorizationFlash = false

function refreshMageBook()
	if currentSpellLevel == nil then
		currentSpellLevel = 1
	end
	if bookMode == 0 then
		if characters[id].hasMageBook then
			bookSpells = characters[id].mageSpells[currentSpellLevel]
			newBottomSpells = filterMemorizedMageSpells()
			
			if showMageMemorizationFlash == true then
				createMageMemorizationSparkle(0,0,0,0,"memorizedListMage", findFirstDifferenceInSpellList(bottomSpells, newBottomSpells))
				showMageMemorizationFlash = false
			end
			bottomSpells = newBottomSpells
			bottomSpellsPlaceHolder = makeBlankTable(characters[id].mageDetails[currentSpellLevel].maxMemorized) 
			
			if (characters[id].mageDetails[currentSpellLevel].maxMemorized) >= 4 then
				bottomSpellsPlaceHolder1 = makeBlankTable(characters[id].mageDetails[currentSpellLevel].maxMemorized-4) else bottomSpellsPlaceHolder1 = {} end
			if (characters[id].mageDetails[currentSpellLevel].maxMemorized) >= 8 then
				bottomSpellsPlaceHolder2 = makeBlankTable(characters[id].mageDetails[currentSpellLevel].maxMemorized-8) else bottomSpellsPlaceHolder2 = {} end
			if (characters[id].mageDetails[currentSpellLevel].maxMemorized) >= 12 then
				bottomSpellsPlaceHolder3 = makeBlankTable(characters[id].mageDetails[currentSpellLevel].maxMemorized-12) else bottomSpellsPlaceHolder3 = {} end
			
			rgKnownSpellsPlaceHolder1 = makeBlankTable(rgGetMaxKnownSpells())
			if rgGetMaxKnownSpells() >= 5  then rgKnownSpellsPlaceHolder2 = makeBlankTable(rgGetMaxKnownSpells()-5)  else rgKnownSpellsPlaceHolder2 = {} end
			if rgGetMaxKnownSpells() >= 10 then rgKnownSpellsPlaceHolder3 = makeBlankTable(rgGetMaxKnownSpells()-10) else rgKnownSpellsPlaceHolder3 = {} end
			if rgGetMaxKnownSpells() >= 15 then rgKnownSpellsPlaceHolder4 = makeBlankTable(rgGetMaxKnownSpells()-15) else rgKnownSpellsPlaceHolder4 = {} end
			if rgGetMaxKnownSpells() >= 20 then rgKnownSpellsPlaceHolder5 = makeBlankTable(rgGetMaxKnownSpells()-20) else rgKnownSpellsPlaceHolder5 = {} end
		
		else
			bookSpells = characters[id].mageSpells[currentSpellLevel]
			bottomSpells = {}
			bottomSpellsPlaceHolder = {}
			bottomSpellsPlaceHolder1 = {}
			bottomSpellsPlaceHolder2 = {}
			bottomSpellsPlaceHolder3 = {}
			
			rgKnownSpellsPlaceHolder1 = {}
			rgKnownSpellsPlaceHolder2 = {}
			rgKnownSpellsPlaceHolder3 = {}
			rgKnownSpellsPlaceHolder4 = {}
			rgKnownSpellsPlaceHolder5 = {}
		end
	elseif bookMode == 1 then
		bookSpells = filterContingencyMageSpells()
		bottomSpells = sequencerSpells
		bottomSpellsPlaceHolder = makeBlankTable(contingencyMaxSpells) 
		contingencyDescription = mageBookStrings[contingencyResRef].tip
	end
end

function setMageBookLevel(num)
	lastCurrentBookSpell = 0
	currentBookSpell = 0
	currentSpellLevel = num
	mageScreen:SetSpellLevel(num-1)
	refreshMageBook()
end

currentAnimationID = 1
updateCounterMemorizationSparkles = 1

function updateMemorizationSparkles()
	local sparkleNumber = 1
	updateCounterMemorizationSparkles = updateCounterMemorizationSparkles + 1
	if updateCounterMemorizationSparkles > 2 then
		updateCounterMemorizationSparkles = 1
		for sparkleNumber = 1, #(memorizationFlashes), 1 do
			if memorizationFlashes[sparkleNumber][1] == true then
				memorizationFlashes[sparkleNumber][2] = memorizationFlashes[sparkleNumber][2] + 1
				if memorizationFlashes[sparkleNumber][2] > 7 then
					memorizationFlashes[sparkleNumber][1] = false
					memorizationFlashes[sparkleNumber][2] = 0
					memorizationFlashes[sparkleNumber][3] = true
				end
			end
		end
	end
end

function destroyMemorizationSparkle(instanceId)
	local ret = memorizationFlashes[instanceId][3]
	memorizationFlashes[instanceId][3] = false
	return ret
end

function showMemorizationSparkle(instanceId)
	updateMemorizationSparkles()
	return memorizationFlashes[instanceId][1]
end

function createMageMemorizationSparkle(x,y,w,h, fromList, listIndex)
	Infinity_InstanceAnimation("TEMPLATE_mageMemorizationSparkle","FLASHBR",x,y,w,h,fromList,listIndex)
	memorizationFlashes[currentAnimationID][1] = true
	memorizationFlashes[currentAnimationID][3] = false
	currentAnimationID = currentAnimationID + 1
	if currentAnimationID > #(memorizationFlashes) then
		currentAnimationID = 1
	end
end

function findMemorizedUncastable(resref)
	local index = 1
	local sparkle = -1
	for index = 1, #(bottomSpells), 1 do
		if bottomSpells[index].resref == resref then
			if bottomSpells[index].castable == 0 then
				sparkle = index
				break
			end
		end
	end

	return sparkle
end

function unmemorizingMageSpell(resref)
	local index = 1
	local sparkle = -1
	for index = 1, #(bottomSpells), 1 do
		if bottomSpells[index].resref == resref then
			sparkle = index
			if bottomSpells[index].castable == 0 then
				break
			end
		end
	end

	createMageMemorizationSparkle(0, 0, 0, 0, 'memorizedListMage', sparkle)
end

function unmemorizeMageSpell(slot)
	showMageMemorizationFlash = false
	mageScreen:UnmemorizeSpell( bottomSpells[slot].level, bottomSpells[slot].memorizedIndex )
	Infinity_PlaySound('GAM_44')
end
function rgIncrementMageBookLevel(lvl)
	if lvl >= 1 and lvl <= 8 then
		setMageBookLevel(lvl+1)
		currentBookSpell = 0
		currentSpellLevel = (lvl+1)
		MageScreen:SetSpellLevel(lvl)
		refreshMageBook()
	end
end
function rgDecrementMageBookLevel(lvl)
	if lvl >= 2 and lvl <= 9 then
		setMageBookLevel(lvl-1)
		currentBookSpell = 0
		currentSpellLevel = (lvl-1)
		MageScreen:SetSpellLevel(lvl)
		refreshMageBook()
	end
end
function rgGetMaxKnownSpells()
	local outList = { }
	local out = ''
	local num = 0
    for k, v in ipairs(characters[id].proficiencies.ability) do
        table.insert(outList, {v.current})
    end
	for k, v in ipairs(outList) do
		if string.find(outList[k][1], rgGetGameEngineString(32704,32704,103151,40927)) then 
			out = outList[k][1]
		end
    end
	
	num = string.match(out, ":(.*)")
	
	return num - 0
end
function rgMemorizeMageSpell(num,txtList)
	contingencyDescription = 0
	if cellNumber == 1 then
		if bookMode == 0 then
			if #bottomSpells < #bottomSpellsPlaceHolder then
				createMageMemorizationSparkle(0, 0, 100, 100, txtList, -1)
				Infinity_PlaySound('GAM_24')
				showMageMemorizationFlash = true
			else
				rgSpellDescString = characters[id].mageSpells[currentSpellLevel][currentBookSpell+num].description 
				rgSpellIndex = currentBookSpell+num
			end
			mageScreen:MemorizeSpell( bookSpells[currentBookSpell+num].level, bookSpells[currentBookSpell+num].index )
		elseif bookMode == 1 and #bottomSpells < #bottomSpellsPlaceHolder then
			mageScreen:SequenceSpell( bookSpells[currentBookSpell+num].resref, bookSpells[currentBookSpell+num].masterResref )
		end
	end
	if lastCurrentBookSpell == currentBookSpell+num and cellNumber == 2 then
		currentBookSpell = 0
		contingencyDescription = mageBookStrings[contingencyResRef].tip
	else
		lastCurrentBookSpell = currentBookSpell+num
	end
end
function rgUnmemorizeMageSpell(num)
	if bookMode == 0 then
		if findMemorizedUncastable(bottomSpells[currentBottomSpell+num].resref) == -1 and Infinity_GetOption(41, 9) ~= 0 then
			popup2Button(11824, 'REMOVE_BUTTON', function() unmemorizeMageSpell(currentBottomSpell+num) end, 'CANCEL_BUTTON')
		else
			unmemorizeMageSpell(currentBottomSpell+num)
		end
	elseif bookMode == 1 then
		mageScreen:UnSequenceSpell( bottomSpells[currentBottomSpell+num].resref, bottomSpells[currentBottomSpell+num].masterResref )
		table.remove(sequencerSpells, currentBottomSpell+num)
		bottomSpells = sequencerSpells
		currentBottomSpell = 0
	end
end
function rgCastableOpacity(num)
	if bottomSpells[num].castable == 0 then
		return 135
	else
		return 255
	end
end

memorizationFlashes = 
{
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false}
}

`


menu
{
	name 'MAGE'
	align center center
	modal lua "bookMode == 1"

	onopen "
		Infinity_SetBackground('BACKGROUND')
		if bookMode == 0 then
			Infinity_PushMenu('LEFT_SIDEBAR')
			Infinity_PushMenu('RIGHT_SIDEBAR')
			Infinity_PushMenu('RIGHT_SIDEBAR_BOTTOM')
		end
		showMageMemorizationFlash = false
		mgpage = nil
		setMageBookLevel(1)
		--if showContingency then
		--	Infinity_SetArea('bookListMage', nil, 374, nil, 200)
		--	Infinity_SetArea('bookDescription', nil, 412, nil, 156)
		--else
		--	Infinity_SetArea('bookListMage', nil, 174, nil, 400)
		--	Infinity_SetArea('bookDescription', nil, 186, nil, 384)
		--end
		if bookMode == 1 then
			contingencyDescription = mageBookStrings[contingencyResRef].tip
		end
		currentContingencyCondition = 0
		currentContingencyTarget = 0
		currentAnimationID = 1
		updateCounterMemorizationSparkles = 1
		rgSpellDescString = ''
		rgSpellIndex = 0
		"
	onclose "
		rgSpellDescString = ''
		rgSpellIndex = 0
	"

	button
	{
		enabled 	"CurrentlyInGame()"
		on escape
		action
		"
			--Return to world screen on escape 
			e:SelectEngine(worldScreen)
		"
	}

	template
	{
		label
		{
			enabled "showMemorizationSparkle(instanceId)"
			ignoreEvents
			area 0 0 45 42
			bam "FLASHBR"
			usealpha lua "true"
			frame lua "memorizationFlashes[instanceId][2]"
			align center center
		}
		name "TEMPLATE_mageMemorizationSparkle"
	}


	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}
	label
	{
		area 		96 4 1176 35
		text lua	"mageBookTitle()"--"rgGetMaxKnownSpells()"
		text style "rg_trajan"
		text color '$'
		align center center
	}
	
	--label
	--{
	--	area 		210 59 446 30
	--	text lua	"mageBookAction()"
	--	text style	"label"
	--}
	button
	{
		area		218 44 100 100
		bam		RGPBTSP
		frame lua "rgGetSpellButtHighlight(1)"
		text '1'
		text style "rg_trajan"
		text color '5'
		text point 24
		text shadow 1
		align center center
		sequence	2
		ScaleToClip
		enabled		"maxMagePage > 0"
		action		"setMageBookLevel(1)"
	}
	button
	{
		area		322 44 100 100
		bam		RGPBTSP
		frame lua "rgGetSpellButtHighlight(2)"
		text '2'
		text style "rg_trajan"
		text color '5'
		text point 24
		text shadow 1
		align center center
		sequence	2
		ScaleToClip
		enabled		"maxMagePage > 1"
		action		"setMageBookLevel(2)"
	}
	button
	{
		area		426 44 100 100
		bam		RGPBTSP
		frame lua "rgGetSpellButtHighlight(3)"
		text '3'
		text style "rg_trajan"
		text color '5'
		text point 24
		text shadow 1
		align center center
		sequence	2
		ScaleToClip
		enabled		"maxMagePage > 2"
		action		"setMageBookLevel(3)"
	}
	button
	{
		area		530 44 100 100
		bam		RGPBTSP
		frame lua "rgGetSpellButtHighlight(4)"
		text '4'
		text style "rg_trajan"
		text color '5'
		text point 24
		text shadow 1
		align center center
		sequence	2
		ScaleToClip
		enabled		"maxMagePage > 3"
		action		"setMageBookLevel(4)"
	}
	button
	{
		area		634 44 100 100
		bam		RGPBTSP
		frame lua "rgGetSpellButtHighlight(5)"
		text '5'
		text style "rg_trajan"
		text color '5'
		text point 24
		text shadow 1
		align center center
		sequence	2
		ScaleToClip
		enabled		"maxMagePage > 4"
		action		"setMageBookLevel(5)"
	}
	button
	{
		area		738 44 100 100
		bam		RGPBTSP
		frame lua "rgGetSpellButtHighlight(6)"
		text '6'
		text style "rg_trajan"
		text color '5'
		text point 24
		text shadow 1
		align center center
		sequence	2
		ScaleToClip
		enabled		"maxMagePage > 5"
		action		"setMageBookLevel(6)"
	}
	button
	{
		area		842 44 100 100
		bam		RGPBTSP
		frame lua "rgGetSpellButtHighlight(7)"
		text '7'
		text style "rg_trajan"
		text color '5'
		text point 24
		text shadow 1
		align center center
		sequence	2
		ScaleToClip
		enabled		"maxMagePage > 6"
		action		"setMageBookLevel(7)"
	}
	button
	{
		area		946 44 100 100
		bam		RGPBTSP
		frame lua "rgGetSpellButtHighlight(8)"
		text '8'
		text style "rg_trajan"
		text color '5'
		text point 24
		text shadow 1
		align center center
		sequence	2
		ScaleToClip
		enabled		"maxMagePage > 7"
		action		"setMageBookLevel(8)"
	}
	button
	{
		area		1050 44 100 100
		bam		RGPBTSP
		frame lua "rgGetSpellButtHighlight(9)"
		text '9'
		text style "rg_trajan"
		text color '5'
		text point 24
		text shadow 1
		align center center
		sequence	2
		ScaleToClip
		enabled		"maxMagePage > 8"
		action		"setMageBookLevel(9)"
	}
	button
	{
		enabled		"bookMode == 0"
		area		1154 30 122 122
		bam		RGPBTSP
		sequence	0
		ScaleToClip
		action		"rgIncrementMageBookLevel(currentSpellLevel)"
	}
	button
	{
		enabled		"bookMode == 0"
		area		92 30 122 122
		bam		RGPBTSP
		sequence	1
		ScaleToClip
		action		"rgDecrementMageBookLevel(currentSpellLevel)"
	}
	
	list
	{
		column  {  width 100 label { area	0 0 100 100 bam	 rgpspbck align	left top  ScaleToClip } }
		area 170 220 500 100
		rowwidth	100
		table		"rgKnownSpellsPlaceHolder1"
		enabled "bookMode == 0"
	}
	list
	{
		column  {  width 100 label { area	0 0 100 100 bam	 rgpspbck align	left top  ScaleToClip } }
		area 170 320 500 100
		rowwidth	100
		table		"rgKnownSpellsPlaceHolder2"
		enabled "bookMode == 0"
	}
	list
	{
		column  {  width 100 label { area	0 0 100 100 bam	 rgpspbck align	left top  ScaleToClip } }
		area 170 420 500 100
		rowwidth	100
		table		"rgKnownSpellsPlaceHolder3"
		enabled "bookMode == 0"
	}
	list
	{
		column  {  width 100 label { area	0 0 100 100 bam	 rgpspbck align	left top  ScaleToClip } }
		area 170 520 500 100
		rowwidth	100
		table		"rgKnownSpellsPlaceHolder4"
		enabled "bookMode == 0"
	}
	list
	{
		column  {  width 100 label { area	0 0 100 100 bam	 rgpspbck align	left top  ScaleToClip } }
		area 170 620 500 100
		rowwidth	100
		table		"rgKnownSpellsPlaceHolder5"
		enabled "bookMode == 0"
	}
	
	
	list
	{
		column  {  width 100 label { area	0 0 100 100 bam	 rgpspbck align	left top  ScaleToClip enabled "characters[id].hasSorcererBook == true and rowNumber <= #(characters[id].mageSpells[currentSpellLevel])"} 
							 label { area	18 18 64 64 icon	lua "bookSpells[rowNumber].icon" align	left top  ScaleToClip } }
		area 170 220 500 100
		name 		"bookListMage"
		rowwidth	100
		table		"bookSpells"
		var		currentBookSpell
		scrollbar	'rgpscrl'
		action	 "rgMemorizeMageSpell(0,'bookListMage')"
		actionAlt 	"rgSpellDescString = characters[id].mageSpells[currentSpellLevel][currentBookSpell].description rgSpellIndex = currentBookSpell"

	}
	list
	{
		column {  width 100 label { area	0 0 100 100 bam	 rgpspbck align	left top  ScaleToClip enabled "characters[id].hasSorcererBook == true and rowNumber+5 <= #(characters[id].mageSpells[currentSpellLevel])"} 
							 label { area	18 18 64 64 icon	lua "bookSpells[rowNumber+5].icon" align	left top  ScaleToClip } }
		area 170 320 500 100
		name 		"bookListMage1"
		rowwidth	100
		table		"bookSpells"
		var		currentBookSpell
		scrollbar	'rgpscrl'
		action	 "rgMemorizeMageSpell(5,'bookListMage1')"
		actionAlt 	"rgSpellDescString = characters[id].mageSpells[currentSpellLevel][currentBookSpell+5].description rgSpellIndex = currentBookSpell+5"
	}
	list
	{
		column  {  width 100 label { area	0 0 100 100 bam	 rgpspbck align	left top  ScaleToClip enabled "characters[id].hasSorcererBook == true and rowNumber+10 <= #(characters[id].mageSpells[currentSpellLevel])"} 
							 label { area	18 18 64 64 icon	lua "bookSpells[rowNumber+10].icon" align	left top  ScaleToClip } }
		area 170 420 500 100
		name 		"bookListMage2"
		rowwidth	100
		table		"bookSpells"
		var		currentBookSpell
		scrollbar	'rgpscrl'
		action	 "rgMemorizeMageSpell(10,'bookListMage2')"
		actionAlt 	"rgSpellDescString = characters[id].mageSpells[currentSpellLevel][currentBookSpell+10].description rgSpellIndex = currentBookSpell+10"
	}
	list
	{
		column  {  width 100 label { area	0 0 100 100 bam	 rgpspbck align	left top  ScaleToClip enabled "characters[id].hasSorcererBook == true and rowNumber+15 <= #(characters[id].mageSpells[currentSpellLevel])"} 
							 label { area	18 18 64 64 icon	lua "bookSpells[rowNumber+15].icon" align	left top  ScaleToClip } }
		area 170 520 500 100
		name 		"bookListMage3"
		rowwidth	100
		table		"bookSpells"
		var		currentBookSpell
		scrollbar	'rgpscrl'
		action	 "rgMemorizeMageSpell(15,'bookListMage3')"
		actionAlt 	"rgSpellDescString = characters[id].mageSpells[currentSpellLevel][currentBookSpell+15].description rgSpellIndex = currentBookSpell+15"
	}
	list
	{
		column  {  width 100 label { area	0 0 100 100 bam	 rgpspbck align	left top  ScaleToClip enabled "characters[id].hasSorcererBook == true and rowNumber+20 <= #(characters[id].mageSpells[currentSpellLevel])"} 
							 label { area	18 18 64 64 icon	lua "bookSpells[rowNumber+20].icon" align	left top  ScaleToClip } }
		area 170 620 500 100
		name 		"bookListMage4"
		rowwidth	100
		table		"bookSpells"
		var		currentBookSpell
		scrollbar	'rgpscrl'
		action	 "rgMemorizeMageSpell(20,'bookListMage4')"
		actionAlt 	"rgSpellDescString = characters[id].mageSpells[currentSpellLevel][currentBookSpell+20].description  rgSpellIndex = currentBookSpell+20"
	}
	--label
	--{
	--	area 146 178 268 132
	--	rectangle 1
	--	rectangle opacity 200 
	--	enabled "showContingency"
	--}
    
	label
	{
		area 120 430 262 34
		enabled "showContingency"
		text "CONDITION_NORMAL"
		text style "rg_trajan"
		align left center
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area		10 0 -1 -1
				text lua "Infinity_FetchString( contingencyConditions[rowNumber].strref)"
				text style "normal"
				text align left center
			}
		}
    
		area 120 464 262 298
		
		enabled 	"showContingency"
		rowheight	40
		table		"contingencyConditions"
		var		currentContingencyCondition
		scrollbar	'rgpscrl'
		action
		"
			contingencyDescription = contingencyConditions[currentContingencyCondition].desc
		"
    
	}
	--label
	--{
	--	area 452 176 254 134
	--	rectangle 1
	--	rectangle opacity 200 
	--	enabled "showContingency"
	--}
	label
	{
		area 382 430 248 34
		enabled "showContingency"
		text "TARGET_NORMAL"
		text style "rg_trajan"
		align left center
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area		10 0 -1 -1
				text lua "Infinity_FetchString( contingencyTargets[rowNumber].strref)"
				text style "normal"
				text align left center
			}
		}
    
		area 382 464 248 44
		
		enabled 	"showContingency"
		rowheight	40
		table		"contingencyTargets"
		var		currentContingencyTarget
		scrollbar	'rgpscrl'
		action
		"
			contingencyDescription = contingencyTargets[currentContingencyTarget].desc
		"
	}

	text
	{
		name		"bookDescription"
		area		701 166 557 508
		text lua 	"Infinity_FetchString(rgSpellDescString)"--"mageBookDescription()"
		text style	"normal"
		scrollbar	'rgpscrl'
	}
	button
	{
		area 981 678 277 84
		bam RGPBUT1
		text "DONE_BUTTON"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		enabled "rgSpellDescString ~= ''"
		action 
		"
			rgSpellDescString = ''
		"
	}
	button
	{
		area 701 678 277 84
		bam RGPBUT1
		text "REMOVE_BUTTON"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		clickable lua "characters[id].hasSorcererBook == false"
		enabled "rgSpellDescString ~= '' and bookMode == 0"
		action 
		"
			if cellNumber == 1 and bookMode == 0 and characters[id].hasSorcererBook == false then
				popup2Button(24485, 'REMOVE_BUTTON', function() mageScreen:EraseKnownSpell(bookSpells[rgSpellIndex].resref) end)
			end
			
			rgSpellDescString = ''
		"
	}
	list
	{
		column  {  width 100 label { area	0 0 -1 -1 bam	 rgpspbck align	left top  ScaleToClip } }
		area 701 220 500 125
		rowwidth	125
		table		"bottomSpellsPlaceHolder"
		enabled "rgSpellDescString == ''" --enabled "#bottomSpellsPlaceHolder ~= 0 or bookMode == 1"
	}
	list
	{
		column  {  width 100 label { area	0 0 -1 -1 bam	 rgpspbck align	left top  ScaleToClip } }
		area 701 345 500 125
		rowwidth	125
		table		"bottomSpellsPlaceHolder1"
		enabled "rgSpellDescString == ''" 
	}
	list
	{
		column  {  width 100 label { area	0 0 -1 -1 bam	 rgpspbck align	left top  ScaleToClip } }
		area 701 470 500 125
		rowwidth	125
		table		"bottomSpellsPlaceHolder2"
		enabled "rgSpellDescString == ''" 
	}
	list
	{
		column  {  width 100 label { area	0 0 -1 -1 bam	 rgpspbck align	left top  ScaleToClip } }
		area 701 595 500 125
		rowwidth	125
		table		"bottomSpellsPlaceHolder3"
		enabled "rgSpellDescString == ''"
	}
	
	list
	{
		column  {  width 100 label { area	24 24 77 77 icon	lua "bottomSpells[rowNumber].icon" align	left top  ScaleToClip greyscale lua "bottomSpells[rowNumber].castable == 0" } } --opacity lua "rgCastableOpacity(rowNumber)"
		area 701 220 500 125
		name 		"memorizedListMage"
		enabled 	"#bottomSpells ~= 0 and rgSpellDescString == ''"
		rowwidth	125
		table		"bottomSpells"
		var		currentBottomSpell
		action	"rgUnmemorizeMageSpell(0)"
	}
	list
	{
		column  {  width 100 label { area	24 24 77 77 icon	lua "bottomSpells[rowNumber+4].icon" align	left top  ScaleToClip greyscale lua "bottomSpells[rowNumber+4].castable == 0" } } 
		area 701 345 500 125
		name 		"memorizedListMage1"
		enabled 	"#bottomSpells ~= 0 and rgSpellDescString == ''"
		rowwidth	125
		table		"bottomSpells"
		var		currentBottomSpell
		action	"rgUnmemorizeMageSpell(4)"
	}
	list
	{
		column  {  width 100 label { area	24 24 77 77 icon	lua "bottomSpells[rowNumber+8].icon" align	left top  ScaleToClip greyscale lua "bottomSpells[rowNumber+8].castable == 0" } }
		area 701 470 500 125
		name 		"memorizedListMage2"
		enabled 	"#bottomSpells ~= 0 and rgSpellDescString == ''"
		rowwidth	125
		table		"bottomSpells"
		var		currentBottomSpell
		action	"rgUnmemorizeMageSpell(8)"
	}
	list
	{
		column  {  width 100 label { area	24 24 77 77 icon	lua "bottomSpells[rowNumber+12].icon" align	left top  ScaleToClip greyscale lua "bottomSpells[rowNumber+12].castable == 0" } }
		area 701 595 500 125
		name 		"memorizedListMage3"
		enabled 	"#bottomSpells ~= 0 and rgSpellDescString == ''"
		rowwidth	125
		table		"bottomSpells"
		var		currentBottomSpell
		action	"rgUnmemorizeMageSpell(12)"
	}


	label
	{
		enabled "rgSpellDescString == ''"
		area 701 166 500 36
		text lua "magePageInfo()"
		text style "rg_trajan"
		text align center center
	}
	
	--label
	--{
	--	area 701 166 500 36
	--	text lua "Infinity_FetchString(11944)"
	--	text style "rg_trajan"
--	--	text color '5'
	--	enabled "rgSpellDescString == '' and characters[id].hasSorcererBook == false"
	--	text align center center
	--}
	label
	{
		area 170 166 500 36
		text lua "Infinity_FetchString(11945)"
		text style "rg_trajan"
--		text color '5'
		text align center center
	}
	button
	{
		area 570 156 236 58
		enabled "bookMode == 0 and (#characters[id].contingencySpells > 0 or #characters[id].sequencerSpells > 0) and rgSpellDescString == ''"
		bam RGPBUT1
		text "CONTINGENCY_BUTTON"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		action "Infinity_PushMenu('MAGE_CONTINGENCY')"
		
	}
		
	button
	{
		area 404 678 557 84
		enabled "bookMode == 1"
		bam RGPBUT1
		text lua "contingencyDoneButtonText()"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		action 
		"
			if contingencyComplete() then
				mageScreen:DoneSequencingSpells()
			else
				mageScreen:CancelSequencingSpells()
			end
			e:SelectEngine(worldScreen)
		"
	}

	label
	{
		area 0 0 1365 768
		fill        0 0 0 176
		enabled "mageBookEnabled == false"
	}

}

`
function refreshMageContingency()
	preparedSpells = {}
	for k, v in pairs(characters[id].contingencySpells) do
		table.insert(preparedSpells, v)
	end
	for k, v in pairs(characters[id].sequencerSpells) do
		table.insert(preparedSpells, v)
	end

end
`

menu
{
	name 'MAGE_CONTINGENCY'

	align center center
	modal

	onopen "refreshMageContingency()"
	
	label
	{
		area	0 0 875 740
		bam "RGPIDET"
	}
	label --Title
	{
		area 40 104 790 106
		text "SPELLS_PREPARED_LABEL"
		text style "rg_trajan"
		text align center center
	}
	label
	{
		area 78 14 710 44
		text "CONTINGENCY_TITLE"
		text style "rg_trajan"
		text color '$'
		text align center center
	}
	label
	{
		area 238 266 190 28
		text "CONDITION_LABEL"
		text style "rg_trajan"
		text align left center
	}
	label
	{
		area 428 266 200 28
		text "TARGET_LABEL"
		text style "rg_trajan"
		text align left center
	}

	label
	{
		area 628 266 196 28
		text "SPELL_LABEL"
		text style "rg_trajan"
		text align left center
	}

	list
	{
		column
		{
			width 25
			label
			{
				area	0 0 -1 -1
				text lua "t(mageBookStrings[preparedSpells[rowNumber].resref].title)"
				text style "normal"
				align	left center
			}

		}
		column
		{
			width 25
			label
			{
				area	0 0 -1 -1
				text lua "Infinity_FetchString(preparedSpells[rowNumber].condition)"
				text style "normal"
				align	left center
			}

		}
		column
		{
			width 25
			label
			{
				area	0 0 -1 -1
				text lua "Infinity_FetchString(preparedSpells[rowNumber].target)"
				text style "normal"
				align	left center
			}

		}

		column 
		{ 
			width 5
			label
			{
				enabled "preparedSpells[rowNumber].spells[1] ~= nil"
				area	0 0 -1 -1
				icon	lua "preparedSpells[rowNumber].spells[1].icon"
				align	center center
			}
		}
		column 
		{ 
			width 5
			label
			{
				enabled "preparedSpells[rowNumber].spells[2] ~= nil"
				area	0 0 -1 -1
				icon	lua "preparedSpells[rowNumber].spells[2].icon"
				align	center center
			}
		}
		column 
		{ 
			width 5
			label
			{
				enabled "preparedSpells[rowNumber].spells[3] ~= nil"
				area	0 0 -1 -1
				icon	lua "preparedSpells[rowNumber].spells[3].icon"
				align	center center
			}
		}
		column 
		{ 
			width 5
			label
			{
				area	0 0 -1 -1
				bam	"GUISTMPC"
				sequence 2
				align	center center
				enabled "preparedSpells[rowNumber].dispellable"
			}
		}

		area 44 294 780 300
		
		rowheight	56
		table		"preparedSpells"
		var		"currentContingencySpell"
		action		"
			if (cellNumber == 7) and preparedSpells[currentContingencySpell].dispellable then
				popup2Button(24398, 'YES_BUTTON', function() mageScreen:OnDispellButtonClick(currentContingencySpell) end, 'NO_BUTTON')
			end
		"
	}
	
	button
	{
		area 159 640 557 84
		bam RGPBUT1
		text "DONE_BUTTON"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		action "Infinity_PopMenu('MAGE_CONTINGENCY')"
	}
}

menu
{
	name "POPUP_DETAILS"
	align center center
	modal

	label
	{
		area 0 0 864 710
		rectangle 4
		rectangle opacity 200
	}
	label
	{
		area 20 20 100 100
		bam RGPIICO
		ScaleToClip
	}
	--label
	--{
	--	area 82 10 700 44
	--	text lua "Infinity_FetchString(PopupDetails.title)"
	--	text style "rg_trajan"
	--	align center center
	--}
	label
	{
		area 140 20 600 100
		text lua "Infinity_FetchString(PopupDetails.name)"
		text style "rg_trajan"
		align left center
	}
	text
	{
		area 62 130 736 460
		text lua "Infinity_FetchString(PopupDetails.description)"
		text style "normal"
		scrollbar 'rgpscrl'
	}
	label
	{
		area 28 28 84 84
		bam lua "PopupDetails.icon"
		align center center
		sequence 0
	}
	button
	{
		on escape
		area 153 600 557 84
		bam RGPBUT1
		text "DONE_BUTTON"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		action "Infinity_PopMenu('POPUP_DETAILS')"
	}

}


`
function priestPageInfo()
	if characters[id].hasShamanBook then
		return t("SPELLS_CAN_CAST_LABEL") .. ": " .. characters[id].priestDetails[currentSpellLevel].slotsRemaining .. "/" .. characters[id].priestDetails[currentSpellLevel].maxMemorized
	else
		return t("MEMORIZED_LABEL") .. ": " .. #bottomSpells .. "/" .. characters[id].priestDetails[currentSpellLevel].maxMemorized
	end
end

function priestBookDescription()
	if priestBookEnabled == true then
		if characters[id].priestSpells[currentSpellLevel][currentBookSpell] then
			return Infinity_FetchString(characters[id].priestSpells[currentSpellLevel][currentBookSpell].description)
		else
			return t('SPELL_MEMORIZATION_HELP')
		end
	end
	return ""
end

function filterMemorizedPriestSpells()
	local out = {}
	currentSpellLevel = math.min(currentSpellLevel, 7)
	for k,v in pairs(characters[id].priestSpells[currentSpellLevel]) do
		for i=v.memorizedCount, 1, -1 do
			local spell = deepcopy(v)
			if(i <= v.castableCount) then
				spell.castable = 1
			else
				spell.castable = 0
			end
			table.insert(out, spell)
		end
	end
	return out
end


showPriestMemorizationFlash = false

function refreshPriestBook()
	if currentSpellLevel == nil then
		currentSpellLevel = 1
	end
	if characters[id].hasClericBook then
		newBottomSpells = filterMemorizedPriestSpells()

		if showPriestMemorizationFlash == true then
			createPriestMemorizationSparkle(0,0,0,0,"memorizedListPriest", findFirstDifferenceInSpellList(bottomSpells, newBottomSpells))
			showPriestMemorizationFlash = false
		end
		bottomSpells = newBottomSpells
		bottomSpellsPlaceHolder = makeBlankTable(characters[id].priestDetails[currentSpellLevel].maxMemorized) 
		if (characters[id].priestDetails[currentSpellLevel].maxMemorized) >= 4 then
			bottomSpellsPlaceHolder1 = makeBlankTable(characters[id].priestDetails[currentSpellLevel].maxMemorized-4)
		else
			bottomSpellsPlaceHolder1 = {}
		end
		if (characters[id].priestDetails[currentSpellLevel].maxMemorized) >= 8 then
			bottomSpellsPlaceHolder2 = makeBlankTable(characters[id].priestDetails[currentSpellLevel].maxMemorized-8)
		else
			bottomSpellsPlaceHolder2 = {}
		end
		if (characters[id].priestDetails[currentSpellLevel].maxMemorized) >= 12 then
			bottomSpellsPlaceHolder3 = makeBlankTable(characters[id].priestDetails[currentSpellLevel].maxMemorized-12)
		else
			bottomSpellsPlaceHolder3 = {}
		end
		
	else
		bottomSpells = {}
		bottomSpellsPlaceHolder = {}
		bottomSpellsPlaceHolder1 = {}
		bottomSpellsPlaceHolder2 = {}
		bottomSpellsPlaceHolder3 = {}
	end
end

function setPriestBookLevel(num)
	lastCurrentBookSpell = 0
	currentBookSpell = 0
	currentSpellLevel = num
	refreshPriestBook()
end

function createPriestMemorizationSparkle(x,y,w,h, fromList, listIndex)
	Infinity_InstanceAnimation("TEMPLATE_priestMemorizationSparkle","FLASHBR",x,y,w,h,fromList,listIndex)
	memorizationFlashes[currentAnimationID][1] = true
	memorizationFlashes[currentAnimationID][3] = false
	currentAnimationID = currentAnimationID + 1
	if currentAnimationID > #(memorizationFlashes) then
		currentAnimationID = 1
	end
end

function unmemorizingPriestSpell(resref)
	local index = 1
	local sparkle = -1
	for index = 1, #(bottomSpells), 1 do
		if bottomSpells[index].resref == resref then
			sparkle = index
			if bottomSpells[index].castable == 0 then
				break
			end
		end
	end

	createPriestMemorizationSparkle(0, 0, 0, 0, 'memorizedListPriest', sparkle)
end

function unmemorizePriestSpell(slot)
	showPriestMemorizationFlash = false
	priestScreen:UnmemorizeSpell( bottomSpells[slot].level, bottomSpells[slot].memorizedIndex )
	Infinity_PlaySound('GAM_44')
end

function rgIncrementPriestBookLevel(lvl)
	if lvl >= 1 and lvl <= 6 then
		setPriestBookLevel(lvl+1)
		currentBookSpell = 0
		currentSpellLevel = (lvl+1)
		PriestScreen:SetSpellLevel(lvl)
		refreshPriestBook()
	end
end
function rgDecrementPriestBookLevel(lvl)
	if lvl >= 2 and lvl <= 7 then
		setPriestBookLevel(lvl-1)
		currentBookSpell = 0
		currentSpellLevel = (lvl-1)
		PriestScreen:SetSpellLevel(lvl)
		refreshPriestBook()
	end
end
function rgGetSpellButtHighlight(num)
	if currentSpellLevel == num then
		return 2
	else 
		return 0
	end
end
function rgMemorizePriestSpell(num,txtList)
	if cellNumber == 1 then
		if #bottomSpells < #bottomSpellsPlaceHolder then
			createPriestMemorizationSparkle(2, 0, 100, 100, txtList, -1)
			Infinity_PlaySound('GAM_24')
			showPriestMemorizationFlash = true
		else
			rgSpellDescString = characters[id].priestSpells[currentSpellLevel][currentBookSpell+num].description
		end
		priestScreen:MemorizeSpell( characters[id].priestSpells[currentSpellLevel][currentBookSpell+num].level, characters[id].priestSpells[currentSpellLevel][currentBookSpell+num].index )
	end
	if lastCurrentBookSpell == (currentBookSpell+num) and cellNumber == 2 then
		currentBookSpell = 0
	else
		lastCurrentBookSpell = (currentBookSpell+num)
	end
end
function rgUnmemorizePriestSpell(num)
	if bottomSpells[currentBottomSpell+num] then
		if findMemorizedUncastable(bottomSpells[currentBottomSpell+num].resref) == -1 and Infinity_GetOption(41, 9) ~= 0 then
			popup2Button(11824, 'REMOVE_BUTTON', function() unmemorizePriestSpell(currentBottomSpell+num) end, 'CANCEL_BUTTON')
		else
			unmemorizePriestSpell(currentBottomSpell+num)
		end
	end
end

`
menu
{
	name 'PRIEST'
	align center center

	onopen 
	"
		Infinity_SetBackground('BACKGROUND')
		showPriestMemorizationFlash = false
		pushSidebars()
		prpage = nil
		setPriestBookLevel(1)
		currentAnimationID = 1
		updateCounterMemorizationSparkles = 1
		rgSpellDescString = ''
	"
	onclose 
	"
		popSidebars()
		rgSpellDescString = ''
	"

	button
	{
		on escape
		action
		"
			--Return to world screen on escape 
			e:SelectEngine(worldScreen)
		"
	}

	template
	{
		label
		{
			enabled "showMemorizationSparkle(instanceId)"
			ignoreEvents
			area 0 0 45 42
			bam "FLASHBR"
			usealpha lua "true"
			frame lua "memorizationFlashes[instanceId][2]"
			align center center
		}
		name "TEMPLATE_priestMemorizationSparkle"
	}


	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}
	--label
	--{
	--	area		82 10 700 44
	--	text		"PRIEST_SCROLL_TITLE" 
	--	text style	"title"
	--}
	label
	{
		area 		96 4 1178 35
		text lua	"priestName .. ', ' .. characters[id].class"
		text style "rg_trajan"
		text color '$'
		align center center
	}
	button
	{
		area		290 44 100 100
		bam		RGPBTSP
		--highlightgroup	prpage
		frame lua "rgGetSpellButtHighlight(1)"
		text '1'
		text style "rg_trajan"
		text color '5'
		text point 24
		text shadow 1
		align center center
		sequence	2
		ScaleToClip
		enabled		"maxPriestPage > 0"
		action		"setPriestBookLevel(1)"
	}
	button
	{
		area		404 44 100 100
		bam		RGPBTSP
		--highlightgroup	prpage
		frame lua "rgGetSpellButtHighlight(2)"
		text '2'
		text style "rg_trajan"
		text color '5'
		text point 24
		text shadow 1
		align center center
		sequence	2
		ScaleToClip
		enabled		"maxPriestPage > 1"
		action		"setPriestBookLevel(2)"
	}
	button
	{
		area		518 44 100 100
		bam		RGPBTSP
		--highlightgroup	prpage
		frame lua "rgGetSpellButtHighlight(3)"
		text '3'
		text style "rg_trajan"
		text color '5'
		text point 24
		text shadow 1
		align center center
		sequence	2
		ScaleToClip
		enabled		"maxPriestPage > 2"
		action		"setPriestBookLevel(3)"
	}
	button
	{
		area		634 44 100 100
		bam		RGPBTSP
		--highlightgroup	prpage
		frame lua "rgGetSpellButtHighlight(4)"
		text '4'
		text style "rg_trajan"
		text color '5'
		text point 24
		text shadow 1
		align center center
		sequence	2
		ScaleToClip
		enabled		"maxPriestPage > 3"
		action		"setPriestBookLevel(4)"
	}
	button
	{
		area		748 44 100 100
		bam		RGPBTSP
		--highlightgroup	prpage
		frame lua "rgGetSpellButtHighlight(5)"
		text '5'
		text style "rg_trajan"
		text color '5'
		text point 24
		text shadow 1
		align center center
		sequence	2
		ScaleToClip
		enabled		"maxPriestPage > 4"
		action		"setPriestBookLevel(5)"
	}
	button
	{
		area		862 44 100 100
		bam		RGPBTSP
		--highlightgroup	prpage
		frame lua "rgGetSpellButtHighlight(6)"
		text '6'
		text style "rg_trajan"
		text color '5'
		text point 24
		text shadow 1
		align center center
		sequence	2
		ScaleToClip
		enabled		"maxPriestPage > 5"
		action		"setPriestBookLevel(6)"
	}
	button
	{
		area		976 44 100 100
		bam		RGPBTSP
		--highlightgroup	prpage
		frame lua "rgGetSpellButtHighlight(7)"
		text '7'
		text style "rg_trajan"
		text color '5'
		text point 24
		text shadow 1
		align center center
		sequence	2
		ScaleToClip
		enabled		"maxPriestPage > 6"
		action		"setPriestBookLevel(7)"
	}
	button
	{
		area		1102 10 152 152
		bam		RGPBTSP
		sequence	0
		ScaleToClip
		action		"rgIncrementPriestBookLevel(currentSpellLevel)"
	}
	button
	{
		area		116 10 152 152
		bam		RGPBTSP
		sequence	1
		ScaleToClip
		action		"rgDecrementPriestBookLevel(currentSpellLevel)"
	}

	list
	{
		column  {  width 100 label { area	0 0 100 100 bam	 rgpspbck align	left top  enabled "rowNumber <= #(characters[id].priestSpells[currentSpellLevel])" ScaleToClip }
							 label { area	18 18 64 64 icon	lua "characters[id].priestSpells[currentSpellLevel][rowNumber].icon" align	left top  ScaleToClip } }
		area 170 220 500 100
		name "bookListPriest"
		rowwidth	100
		table		"characters[id].priestSpells[currentSpellLevel]"
		var		currentBookSpell
		scrollbar	'rgpscrl'
		action		"rgMemorizePriestSpell(0,'bookListPriest')"
		actionAlt 	"rgSpellDescString = characters[id].priestSpells[currentSpellLevel][currentBookSpell].description"

	}
	list
	{
		column  {  width 100 label { area	0 0 100 100 bam	 rgpspbck align	left top  enabled "rowNumber+5 <= #(characters[id].priestSpells[currentSpellLevel])" ScaleToClip }
							 label { area	18 18 64 64 icon	lua "characters[id].priestSpells[currentSpellLevel][rowNumber+5].icon" align	left top  ScaleToClip } }
		area 170 320 500 100
		name "bookListPriest1"
		rowwidth	100
		table		"characters[id].priestSpells[currentSpellLevel]"
		var		currentBookSpell
		scrollbar	'rgpscrl'
		action		"rgMemorizePriestSpell(5,'bookListPriest1')"
		actionAlt 	"rgSpellDescString = characters[id].priestSpells[currentSpellLevel][currentBookSpell+5].description"
	}
	list
	{
		column  {  width 100 label { area	0 0 100 100 bam	 rgpspbck align	left top  enabled "rowNumber+10 <= #(characters[id].priestSpells[currentSpellLevel])" ScaleToClip }
							 label { area	18 18 64 64 icon	lua "characters[id].priestSpells[currentSpellLevel][rowNumber+10].icon" align	left top  ScaleToClip } }
		area 170 420 500 100
		name "bookListPriest2"
		rowwidth	100
		table		"characters[id].priestSpells[currentSpellLevel]"
		var		currentBookSpell
		scrollbar	'rgpscrl'
		action		"rgMemorizePriestSpell(10,'bookListPriest2')"
		actionAlt 	"rgSpellDescString = characters[id].priestSpells[currentSpellLevel][currentBookSpell+10].description"
	}
	list
	{
		column  {  width 100 label { area	0 0 100 100 bam	 rgpspbck align	left top  enabled "rowNumber+15 <= #(characters[id].priestSpells[currentSpellLevel])" ScaleToClip }
							 label { area	18 18 64 64 icon	lua "characters[id].priestSpells[currentSpellLevel][rowNumber+15].icon" align	left top  ScaleToClip } }
		area 170 520 500 100
		name "bookListPriest3"
		rowwidth	100
		table		"characters[id].priestSpells[currentSpellLevel]"
		var		currentBookSpell
		scrollbar	'rgpscrl'
		action		"rgMemorizePriestSpell(15,'bookListPriest3')"
		actionAlt 	"rgSpellDescString = characters[id].priestSpells[currentSpellLevel][currentBookSpell+15].description"
	}
	list
	{
		column  {  width 100 label { area	0 0 100 100 bam	 rgpspbck align	left top  enabled "rowNumber+20 <= #(characters[id].priestSpells[currentSpellLevel])" ScaleToClip }
							 label { area	18 18 64 64 icon	lua "characters[id].priestSpells[currentSpellLevel][rowNumber+20].icon" align	left top  ScaleToClip } }
		area 170 620 500 100
		name "bookListPriest4"
		rowwidth	100
		table		"characters[id].priestSpells[currentSpellLevel]"
		var		currentBookSpell
		scrollbar	'rgpscrl'
		action		"rgMemorizePriestSpell(20,'bookListPriest4')"
		actionAlt 	"rgSpellDescString = characters[id].priestSpells[currentSpellLevel][currentBookSpell+20].description"
	}

	text
	{
		area		701 166 557 508
		text lua 	"Infinity_FetchString(rgSpellDescString)"--"priestBookDescription()"
		text style	"normal"
		scrollbar	'rgpscrl'
	}
	button
	{
		area 701 678 557 84
		bam RGPBUT1
		text "DONE_BUTTON"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		enabled "rgSpellDescString ~= ''"
		action 
		"
			rgSpellDescString = ''
		"
	}

	list
	{
		column  {  width 100 label { area	0 0 -1 -1 bam	 rgpspbck align	left top  ScaleToClip } }
		area 701 220 500 125
		rowwidth	125
		table		"bottomSpellsPlaceHolder"
		enabled "rgSpellDescString == ''"
	}
	list
	{
		column  {  width 100 label { area	0 0 -1 -1 bam	 rgpspbck align	left top  ScaleToClip } }
		area 701 345 500 125
		rowwidth	125
		table		"bottomSpellsPlaceHolder1"
		enabled "rgSpellDescString == ''"
	}
	list
	{
		column  {  width 100 label { area	0 0 -1 -1 bam	 rgpspbck align	left top  ScaleToClip } }
		area 701 470 500 125
		rowwidth	125
		table		"bottomSpellsPlaceHolder2"
		enabled "rgSpellDescString == ''"
	}
	list
	{
		column  {  width 100 label { area	0 0 -1 -1 bam	 rgpspbck align	left top  ScaleToClip } }
		area 701 595 500 125
		rowwidth	125
		table		"bottomSpellsPlaceHolder3"
		enabled "rgSpellDescString == ''"
	}
	list
	{
		column  {  width 100 label { area	24 24 77 77 icon	lua "bottomSpells[rowNumber].icon" align	left top  ScaleToClip greyscale lua "bottomSpells[rowNumber].castable == 0" } }
		area 701 220 500 125
		name "memorizedListPriest"
		enabled 	"#bottomSpells ~= 0 and rgSpellDescString == ''"
		rowwidth	125
		table		"bottomSpells"
		var		currentBottomSpell
		action	 "rgUnmemorizePriestSpell(0)"

	}
	list
	{
		column  {  width 100 label { area	24 24 77 77 icon	lua "bottomSpells[rowNumber+4].icon" align	left top  ScaleToClip greyscale lua "bottomSpells[rowNumber+4].castable == 0" } }
		area 701 345 500 125
		name "memorizedListPriest1"
		enabled 	"#bottomSpells ~= 0 and rgSpellDescString == ''"
		rowwidth	125
		table		"bottomSpells"
		var		currentBottomSpell
		action	 "rgUnmemorizePriestSpell(4)"

	}
	list
	{
		column  {  width 100 label { area	24 24 77 77 icon	lua "bottomSpells[rowNumber+8].icon" align	left top  ScaleToClip greyscale lua "bottomSpells[rowNumber+8].castable == 0" } }
		area 701 470 500 125
		name "memorizedListPriest2"
		enabled 	"#bottomSpells ~= 0 and rgSpellDescString == ''"
		rowwidth	125
		table		"bottomSpells"
		var		currentBottomSpell
		action	 "rgUnmemorizePriestSpell(8)"

	}
	list
	{
		column  {  width 100 label { area	24 24 77 77 icon	lua "bottomSpells[rowNumber+12].icon" align	left top  ScaleToClip greyscale lua "bottomSpells[rowNumber+12].castable == 0" } }
		area 701 595 500 125
		name "memorizedListPriest3"
		enabled 	"#bottomSpells ~= 0 and rgSpellDescString == ''"
		rowwidth	125
		table		"bottomSpells"
		var		currentBottomSpell
		action	 "rgUnmemorizePriestSpell(12)"

	}
	
	label
	{
		area 701 166 500 36
		text "MEMORIZED_LABEL"
		text style "rg_trajan"
--		text color '5'
		enabled "rgSpellDescString == ''"
		text align center center
	}
	label
	{
		area 170 166 500 36
		text lua "Infinity_FetchString(11945)"
		text style "rg_trajan"
--		text color '5'
		text align center center
	}
	--label
	--{
	--	area 312 588 246 48
	--	text lua "priestPageInfo()"
	--	text style "rg_trajan"
	--	text color '$'
	--	align left center
	--}

	--button
	--{
	--	area 45 588 236 56
	--	bam GUIOSTLL
	--	enabled "characters[id].hasClericBook"
	--	clickable lua "#bottomSpells < characters[id].priestDetails[currentSpellLevel].maxMemorized and currentBookSpell ~= 0"
	--	text "MEMORIZE_LABEL"
	--	text style "button"
	--	action 
	--	"
	--		createPriestMemorizationSparkle(2, 0, 40, 40, 'bookListPriest', -1)
	--		Infinity_PlaySound('GAM_24')
	--		showPriestMemorizationFlash = true
	--		priestScreen:MemorizeSpell( characters[id].priestSpells[currentSpellLevel][currentBookSpell].level, characters[id].priestSpells[currentSpellLevel][currentBookSpell].index )
    --
	--	"
	--	
	--}

	label
	{
		area 0 0 1365 768
		fill        0 0 0 176
		enabled "priestBookEnabled == false"
	}
}

menu
{
	name 'RG_JOURNAL_BUTTONS'
	align right top
	button --prev chapter
	{
		enabled "rgEscModeJournal == 1"
		area		0 3 86 124
		bam		RGPJBUT
		sequence	3
		ScaleToClip
		action
		"
			incrChapter(1);
		"	
	}
	button
	{
		enabled "rgEscModeJournal == 1"
		area		0 128 86 124
		bam		RGPJBUT
		sequence	4
		ScaleToClip
		action
		"
			incrChapter(-1);
		"	
	}
	button
	{
		enabled "rgEscModeJournal == 1"
		area		0 253 86 124
		bam		RGPJBUT
		sequence	0
		ScaleToClip
		glow lua "journalMode == const.JOURNAL_MODE_QUESTS and rgIsCurrentQuests == 1"
		action
		"
			journalMode = const.JOURNAL_MODE_QUESTS
			rgIsCurrentQuests = 1
		"	
	}
	button
	{
		enabled "rgEscModeJournal == 1"
		area		0 378 86 124
		bam		RGPJBUT
		sequence	1
		ScaleToClip
		glow lua "journalMode == const.JOURNAL_MODE_QUESTS and rgIsCurrentQuests == 0"
		action
		"
			journalMode = const.JOURNAL_MODE_QUESTS
			rgIsCurrentQuests = 0
		"	
	}
	button
	{
		enabled "rgEscModeJournal == 1"
		area		0 503 86 124
		bam		RGPJBUT
		sequence	2
		ScaleToClip
		glow lua "journalMode == const.JOURNAL_MODE_JOURNAL"
		action
		"
			journalMode = const.JOURNAL_MODE_JOURNAL
		"	
	}
}

`
	versionString = ""
	function canClickSaveLoad()
		return game:IsClient() == false
	end
	function rgCurrentFinishedQuests(row)
		if rgIsCurrentQuests == 1 then
			return (questDisplay[row].stateType ~= const.ENTRY_TYPE_COMPLETE)
		else
			return (questDisplay[row].stateType == const.ENTRY_TYPE_COMPLETE)
		end
	end
	function rgCurrentFinishedLabel()
		if journalMode == const.JOURNAL_MODE_QUESTS then
			if rgIsCurrentQuests == 1 then
				return t('QUESTS_LABEL') .. ': ' .. t('CURRENT_LABEL')
			else
				return t('QUESTS_LABEL') .. ': ' .. t("OBJECTIVE_FINISHED_NORMAL")
			end
		else
			return t('JOURNAL_LABEL')
		end
	end
	function rgSelectQuest(row)
	
		if getQuestText(row) == rgGetGameEngineString(31270, 31270, 74295, 37872) then
			if questDisplay[row].expanded == 1 then
				return true
			else
				return false
			end
		else
			if questEnabled(row) and rgCurrentFinishedQuests(row) and questDisplay[row].expanded == 1 then
				return true
			else
				return false
			end
		end
		
		
		if journalMode == const.JOURNAL_MODE_QUESTS then
			if rgIsCurrentQuests == 1 then
				return t('QUESTS_LABEL') .. ': ' .. t('CURRENT_LABEL')
			else
				return t('QUESTS_LABEL') .. ': ' .. t("OBJECTIVE_FINISHED_NORMAL")
			end
		else
			return t('JOURNAL_LABEL')
		end
	end
`
menu 
{
	name "ESC_MENU"
	ignoreesc
	align center center
	onOpen "
		if rgEscModeJournal == nil then
			rgEscModeJournal = 0
		end
		rgIsInEscMode = 1
		rgIsCurrentQuests = 1
		rgSearchButtEnabled = 0
		versionString = CBaldurChitin:GetVersionString()
		pushSidebars()
		reinitQuests()
		buildQuestDisplay()
		chapter = math.max(0,Infinity_GetMaxChapterPage());
		Infinity_PopMenu('RIGHT_SIDEBAR')
		Infinity_PushMenu('RIGHT_SIDEBAR_BOTTOM')
		if rgEscModeJournal == 0 then
			Infinity_PopMenu('RIGHT_SIDEBAR_BOTTOM')
			Infinity_PopMenu('RG_JOURNAL_BUTTONS')
		else
			Infinity_PushMenu('RIGHT_SIDEBAR_BOTTOM')
			Infinity_PushMenu('RG_JOURNAL_BUTTONS')
		end
	"
	onClose "
		rgIsInEscMode = 0
		popSidebars()
		Infinity_PopMenu('RG_JOURNAL_BUTTONS')
		"
	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}
	
	label
	{
		enabled "rgEscModeJournal == 1"
		area 102 22 574 62
		text lua "rgCurrentFinishedLabel()"
		text style "rg_trajan"
		text align left center
		text color '$'
	}
	label -- Chapter
	{
		enabled "rgEscModeJournal == 1"
		area 676 22 570 62
		text lua "chapterText()"
		text style "rg_trajan"
		text align right center
		text color '$'
	}
	
	list
	{
		column { 
			width 100
			label
			{	
				enabled "rgSelectQuest(rowNumber)"
				area 0 0 -1 70
				bam rgpslct
				ScaleToClip
			}
			label
			{	
				enabled "(questEnabled(rowNumber) and rgCurrentFinishedQuests(rowNumber)) or getQuestText(rowNumber) == rgGetGameEngineString(31270, 31270, 74295, 37872)" -- and questDisplay[rowNumber].stateType == const.ENTRY_TYPE_COMPLETE
				area 20 0 -1 70
				text lua "getQuestText(rowNumber)"
				text style "rg_trajan"
				text point 10
				--pad 0 0 0 15
				align left center
			}
		}
		enabled "journalMode == const.JOURNAL_MODE_QUESTS and rgEscModeJournal == 1"
		rowheight	dynamic
		hidehighlight
		seperator "showObjectiveSeperator(rowNumber)"
		table		"questDisplay"
		var			selectedQuest
		scrollbar	'rgpscrl'
		area		87 98 590 660
		action
		"
			CloseAll_Small()
			if(questDisplay[selectedQuest].expanded) then 
				questDisplay[selectedQuest].expanded = nil
			else
				questDisplay[selectedQuest].expanded = 1
			end
		"
	}
	list
	{
		column { 
			width 100 
			label
			{
				enabled "objectiveEnabled(rowNumber) and rgCurrentFinishedQuests(rowNumber)"
				area 16 0 -1 -1
				pad 0 10 0 10
				text lua "getObjectiveText(rowNumber)"
				text style "normal"
				text color 255 100 100 255
			}
			label
			{
				enabled "entryEnabled(rowNumber) and rgCurrentFinishedQuests(rowNumber)"
				area 16 0 -1 -1
				pad 0 10 0 10
				text lua "getEntryText(rowNumber)"
				text style "normal"
				--text color M
			}
		}
		enabled "journalMode == const.JOURNAL_MODE_QUESTS and rgEscModeJournal == 1"
		rowheight	dynamic
		hidehighlight
		seperator "showObjectiveSeperator(rowNumber)"
		table		"questDisplay"
		var			selectedQuest
		scrollbar	'rgpscrl'
		area		684 98 584 660
		
	}
	
	label
	{
		enabled "journalMode == const.JOURNAL_MODE_JOURNAL and rgEscModeJournal == 1 and rgSearchButtEnabled == 1"
		area 430 22 376 62
		fill 50 50 50 150
	}
	edit
	{
		enabled "journalMode == const.JOURNAL_MODE_JOURNAL and rgEscModeJournal == 1 and rgSearchButtEnabled == 1"
		area 434 34 366 40
		var journalSearchString
		--placeholder "ENTER_SEARCH_TERM_NORMAL"
		text style "edit"
		maxlines 1
	}
	
	list --journal
	{
		column
		{
			width 100
			--light
			label
			{
				enabled "getJournalTitleEnabled(rowNumber) and not getJournalDarken(rowNumber)"
				area 0 0 -1 -1
				pad 0 16 0 0
				text lua "getJournalTitleText(rowNumber)"
				text style "rg_trajan"
				text point 10
				text color 0 120 0 255
			}
			label
			{
				enabled "getJournalEntryEnabled(rowNumber) and not getJournalDarken(rowNumber)"
				area 0 0 -1 -1
				pad 8 16 0 16
				text lua "getJournalEntryText(rowNumber)"
				text style "normal"
			}
			
			--dark
			label
			{
				enabled "(getJournalTitleEnabled(rowNumber) or getJournalEntryEnabled(rowNumber)) and getJournalDarken(rowNumber)"
				area 0 0 -1 -1
				fill 0 0 0 150
			}
			label
			{
				enabled "getJournalTitleEnabled(rowNumber) and getJournalDarken(rowNumber)"
				area 0 0 -1 -1
				pad 0 16 0 0
				text lua "getJournalTitleText(rowNumber)"
				text style "rg_trajan"
				text point 10
				text color 255 100 100 255
			}
			label
			{
				enabled "getJournalEntryEnabled(rowNumber) and getJournalDarken(rowNumber)"
				area 0 0 -1 -1
				pad 8 16 0 16
				text lua "getJournalEntryText(rowNumber)"
				text style "normal"
			}
			
			
		}
		enabled "journalMode == const.JOURNAL_MODE_JOURNAL and rgEscModeJournal == 1"
		seperator "getJournalEntryEnabled(rowNumber)"
		rowheight	dynamic
		hidehighlight
		table		"journalDisplay"
		var			selectedJournal
		scrollbar	'rgpscrl'
		area		102 94 996 664
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_JOURNAL and rgEscModeJournal == 1"
		area 1112 178 150 150
		bam		RGPJEDIT
		sequence	1
		ScaleToClip
		action
		"
			 rgSearchButtEnabled = 1
		"
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_JOURNAL and rgEscModeJournal == 1"
		area 1112 340 150 150
		bam		RGPBTPL
		--text style "rg_trajan"
		--text point 8
		--align center center
		--sequence	2
		ScaleToClip
		--text "ADD_ENTRY_LABEL"
		action 
		"
			journalMode = const.JOURNAL_MODE_EDIT
			journalNoteEdit = ''
			journalNoteEditRef = nil
		"
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_JOURNAL and rgEscModeJournal == 1"
		clickable lua "journalEntryClickable(selectedJournal)"
		greyscale lua "not journalEntryClickable(selectedJournal)"
		area 1112 504 150 150
		bam		RGPJEDIT
		--text style "rg_trajan"
		--text point 8
		--align center center
		--sequence	2
		ScaleToClip
		--text "EDIT_ENTRY_LABEL"
		action
		"
			journalNoteEditRef = getJournalEntryRef(selectedJournal)
			journalNoteEdit = Infinity_FetchString(journalNoteEditRef)
			journalMode = const.JOURNAL_MODE_EDIT
		"
	}
	label
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT and rgEscModeJournal == 1"
		area 320 108 728 44
		text style "normal"
		text "WRITE_ENTRY_TEXT"
		
	}
	label
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT and rgEscModeJournal == 1"
		area 324 150 724 4
		fill 10 71 1 255
	}
	label
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT and rgEscModeJournal == 1"
		area 324 170 724 50
		text style "rg_trajan"
		text color 0 120 0 255
		text point 10
		text lua "Infinity_GetTimeString()"
	}
	edit
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT and rgEscModeJournal == 1"
		area		324 220 724 434
		text style	"edit"
		var			journalNoteEdit
		scrollbar	'GUISCRP'
		
	}
	
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT and rgEscModeJournal == 1"
		area 324 666 356 78
		bam		RGPBUT1
		text style "rg_trajan"
		text point 10
		align center center
		sequence	2
		ScaleToClip
		text "CANCEL_BUTTON"
		action 
		"
			journalMode = const.JOURNAL_MODE_JOURNAL
		"
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT and rgEscModeJournal == 1"
		area 690 666 356 78
		bam		RGPBUT1
		text style "rg_trajan"
		text point 10
		align center center
		sequence	2
		ScaleToClip
		text "DONE_BUTTON"
		action 
		"
			if(journalNoteEditRef == nil) then
				Infinity_OnAddUserEntry(journalNoteEdit)
			else
				Infinity_OnEditUserEntry(journalNoteEditRef, journalNoteEdit)
			end
			journalMode = const.JOURNAL_MODE_JOURNAL
		"
	}
	
	
	
	
	
	
	
	label
	{
		enabled "rgEscModeJournal == 0"
		area 128 132 548 548	
		bam 'RGPLOGO'
		ScaleToClip
		sequence lua "rgGameEngine"
		--align center center
		frame lua "currCampaign"
	}
	label
	{
		enabled "rgEscModeJournal == 0"
		area 128 46 548 62
		text "OPTIONS_TITLE"
		text style "rg_trajan"
		text align center center
		text color '$'
	}
	label
	{
		enabled "rgEscModeJournal == 0"
		area 212 678 378 50
		text lua "versionString"
		text style "normal"
		text align center center
	}
	button
	{
		enabled "rgEscModeJournal == 0"
		bam RGPBUT1
		area 690 346 572 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text 		"GAMEPLAY_BUTTON"
		
		action
		"
			Infinity_PushMenu( 'OPTIONS_GAMEPLAY' )

		"
	}
	button
	{
		enabled "rgEscModeJournal == 0"
		bam RGPBUT1
		area 690 446 572 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text 		"GRAPHICS_BUTTON"
		
		action
		"
			Infinity_PushMenu( 'OPTIONS_GRAPHICS' )

		"
	}
	button
	{
		enabled "rgEscModeJournal == 0"
		bam RGPBUT1
		area 690 546 572 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text 		"SOUND_BUTTON"
		
		action
		"
			Infinity_PushMenu( 'OPTIONS_SOUND' )

		"
	}
	button
	{
		enabled "rgEscModeJournal == 0"
		bam RGPBUT1
		area 690 646 572 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "RETURN_GAME_BUTTON"
		action
		"
			e:SelectEngine( worldScreen );
		"
	}
	button
	{
		enabled "rgEscModeJournal == 0"
		bam RGPBUT1
		area 690 46 572 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "LOAD_GAME_BUTTON"
		clickable lua "canClickSaveLoad()"
		action
		"
			popup2Button(19531, 'LOAD_BUTTON', function() optionsScreen:LoadGame() end)
		"
	}
	button
	{
		enabled "rgEscModeJournal == 0"
		bam RGPBUT1
		area 690 246 572 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "QUIT_GAME_BUTTON"
		action
		"
			if e:IsTouchUI() then
				popup3Button(16456, 
				'CANCEL_BUTTON', nil, 
				'MAIN_MENU_BUTTON', function() optionsScreen:QuitGame() end, 
				'SAVE_BUTTON', function() optionsScreen:SaveGame(0) end
				)
			else
				popup4Button(16456, 
				'CANCEL_BUTTON', nil, 
				'MAIN_MENU_BUTTON', function() optionsScreen:QuitGame() end, 
				'QUIT_BUTTON', function() Infinity_ShutdownGame() end, 
				'SAVE_BUTTON', function() optionsScreen:SaveGame(0) end
				)
			end
		"
	}
	button
	{
		enabled "rgEscModeJournal == 0"
		bam RGPBUT1
		area 690 146 572 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "SAVE_GAME_BUTTON"
		clickable lua "canClickSaveLoad()"
		action
		"
			optionsScreen:SaveGame(0)
		"
	}
}

`
OptionsButtons = 
{
	{text = "GAMEPLAY_BUTTON", menu = "OPTIONS_GAMEPLAY", sequence = 0}, 
	{text = "GRAPHICS_BUTTON", menu = "OPTIONS_GRAPHICS", sequence = 1}, 
	{text = "LANGUAGE_BUTTON", menu = "OPTIONS_LANGUAGE", sequence = 0}, 
	{text = "MOVIES_BUTTON", menu = "", sequence = 2}, 
	{text = "SOUND_BUTTON", menu = "OPTIONS_SOUND", sequence = 1}, 
}
`
menu
{
	name 'START_OPTIONS'
	align center center
	ignoreEsc
	onOpen "Infinity_PopMenu('RIGHT_SIDEBAR_BOTTOM')"

	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}

	label
	{
		area		72 54 548 116
		text "OPTIONS_BUTTON"
		text style	'rg_trajan'
		align center center
		text color '$'
		text point 40
	}
	label
	{
		area 72 188 548 548	
		bam 'RGPLOGO'
		ScaleToClip
		sequence lua "rgGameEngine"
		--align center center
		frame lua "currCampaign"
	}
	button
	{
		bam RGPBUT1
		area 700 60 640 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "SOUND_BUTTON"
		clickable lua "canContinue"
		action "Infinity_PushMenu( 'OPTIONS_SOUND' )"
	}
	button
	{
		bam RGPBUT1
		area 700 170 640 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "GRAPHICS_BUTTON"
		action "Infinity_PushMenu( 'OPTIONS_GRAPHICS' )"
	}
	button
	{
		bam RGPBUT1
		area 700 500 640 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "LANGUAGE_BUTTON"
		action "Infinity_PushMenu( 'OPTIONS_LANGUAGE' )"
	}
	button
	{
		bam RGPBUT1
		area 700 390 640 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "MOVIES_BUTTON"
		action "e:SelectEngine(moviesScreen)"
	}
	button
	{
		bam RGPBUT1
		area 700 280 640 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "GAMEPLAY_BUTTON"
		action "Infinity_PushMenu( 'OPTIONS_GAMEPLAY' )"
	}
	button
	{
		bam RGPBUT1
		area 700 610 640 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "BACK_BUTTON"
		action
		"
			Infinity_PopMenu()
			e:SelectEngine(startEngine)
		"
	}
}
`
mapnoteSettings = {}
showNotes = 1
function showNote(instanceId)
	if(mapScreen:IsNoteVisible(mapnoteSettings[instanceId].worldCoord.x, mapnoteSettings[instanceId].worldCoord.y)
	and mapnoteSettings[instanceId].screenCoord.x >= 0
	and mapnoteSettings[instanceId].screenCoord.y >= 0) then
		return showNotes
	else
		return false
	end
end
notesAlpha = 0
function getAndIncrementNotesAlpha()
	if(notesAlpha < .99) then
		notesAlpha = notesAlpha + 0.075
	end
	if(notesAlpha > 1) then
		notesAlpha = 1
	end
	return notesAlpha
end
`
menu
{
	name 'AREA_MAP_TITLE'
	align center top
	opacity lua "notesAlpha"
	ignoreEsc
	label
	{
		name "AREA_MAP_BACKGROUND"
		area 0 0 1165 60
		fill 1 1 1 180
	}
	label
	{
		area 16 12 212 36
		name "AREA_MAP_TITLE"
		text "AREA_MAP_TITLE"
		text style "rg_trajan"
		text color '$'
	}
	label
	{
		area 272 12 280 36
		action "mapScreen:ToggleDisplayExploredMap()"
		text "WORLDMAP_HIGHLIGHT_LABEL"
		text style "rg_trajan"
		text align left center
		text point 8

	}
	button
	{
		area 234 12 318 36
		bam "4CHECK"
		sequence lua "mapScreen:DisplayExploredMap() and 0 or 1"
		action "mapScreen:ToggleDisplayExploredMap()"
	}

	label
	{
		area 624 12 246 36
		toggle showNotes
		text "WORLD_MAP_NOTES_LABEL"
		text style "rg_trajan"
		text align left center
		text point 8

	}
	button
	{
		area 582 12 292 36
		bam "4CHECK"
		sequence lua "showNotes == 1 and 0 or 1"
		toggle showNotes
	}

	button
	{
		area 908 8 242 44
		bam RGPBUT1
		text style "rg_trajan"
		text align center center
		ScaleToClip
		pad 30 5 30 5
		text "WORLD_MAP_BUTTON"
		action
		"
			worldMapScreen:StartWorldMap(0)
			e:SelectEngine(worldMapScreen)
		"
	}

}
`
	areaMapHover = -1
	function showAreaMapNoteTooltip(id)
		if id == areaMapHover then
			return true
		else
			return false
		end
	end
`
menu
{
	name 'AREA_MAP'
	align left top
	ignoreesc
	onOpen "pushSidebars(); Infinity_PushMenu('AREA_MAP_TITLE'); notesAlpha = 0"
	onClose "popSidebars(); Infinity_PopMenu('AREA_MAP_TITLE');"
	opacity lua "getAndIncrementNotesAlpha()"
	template
	{
		button
		{
			enabled "showNote(instanceId)"
			area 0 0 45 42
			bam "FLAG1"
			sequence lua "mapnoteSettings[instanceId].sequence"
			tooltip force lua "showAreaMapNoteTooltip(instanceId)"
			tooltip force top
			tooltip lua "Infinity_FetchString(mapnoteSettings[instanceId].text)"
			tooltip position 3
			actionAlt
			"
				mapScreen:OnUserNoteClick(instanceId, mapnoteSettings[instanceId].worldCoord.x, mapnoteSettings[instanceId].worldCoord.y)
				Infinity_PushMenu('NOTE_ADD',0,0)
			"
			actionEnter
			"
				areaMapHover = instanceId
			"
			actionExit
			"
				areaMapHover = -1
			"
		}
		name "TEMPLATE_mapnote"
	}
}
`
	colorChoice = nil
`
menu
{
	name 'NOTE_ADD'
	align center center
	onOpen 
	"
		if colorChoice == nil then
			colorChoice = Infinity_FindUIItemByName('BUTTON_mapNoteColor_' .. mapScreen:GetColorChoice())
		end
	"
	onClose
	"
		colorChoice = nil
	"
	modal
	label
	{
		area 0 0 684 234
		mosaic GUIERR6
	}
	label
	{
		area	 40 16 596 68
		rectangle	0
	}
	edit
	{
		name 		"mapNoteEditArea"
		area		48 22 584 56
		var			mapNoteEdit
		scrollbar	'rgpscrl'
		text style	"edit"
		fill        112 111 111 64
	}
	button
	{
		area 458 170 200 44
		bam GUIOSTUM
		text style "button"
		text "DONE_BUTTON"
		action
		"
			mapScreen:OnUserNoteDoneButtonClick()
			Infinity_PopMenu('NOTE_ADD',0,0)
		"
	}
	button
	{
		area 242 170 200 44
		bam GUIOSTUM
		text style "button"
		text "CANCEL_BUTTON"
		action
		"
			Infinity_PopMenu('NOTE_ADD',0,0)
		"
	}
	button
	{
		area 22 170 200 44
		bam GUIOSTUM
		text style "button"
		text "DELETE_BUTTON"
		action
		"
			mapScreen:OnUserNoteDeleteButtonClick()
			Infinity_PopMenu('NOTE_ADD',0,0)
		"
	}
	
	button
	{
		name "BUTTON_mapNoteColor_0"
		area 39 90 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 0
		action
		"
			mapScreen:OnColorChoice(0)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_1"
		area 118 90 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 1
		action
		"
			mapScreen:OnColorChoice(1)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_2"
		area 197 90 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 2
		action
		"
			mapScreen:OnColorChoice(2)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_3"
		area 276 90 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 3
		action
		"
			mapScreen:OnColorChoice(3)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_4"
		area 355 90 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 4
		action
		"
			mapScreen:OnColorChoice(4)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_5"
		area 434 90 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 5
		action
		"
			mapScreen:OnColorChoice(5)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_6"
		area 513 90 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 6
		action
		"
			mapScreen:OnColorChoice(6)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_7"
		area 591 90 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 7
		action
		"
			mapScreen:OnColorChoice(7)
		"
	}
}



menu
{
	name "WORLD_MAP"
	align center center
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area 12 10 148 83
		text "WORLD_MAP_TITLE"
		text style "rg_trajan"
		text color '$'
	}
	label
	{
		area 164 6 1034 753
		rectangle 4
	}
	text
	{
		area 241 93 500 45
		enabled	"e:IsMultiplayer()"
		text lua "mpChatText"
		scrollbar func "chatboxScroll"
		scrollbar 'rgpscrl'
		text style	normal
	}
	button
	{
		area 1200 12 150 150
		--bam "MAPBUT"
		bam RGPBTDIA
		ScaleToClip
		action
		"
			worldMapScreen:OnCancelButtonClick()
		"
	}
	map
	{
		area 182 24 1000 717
		worldmap
		action
		"
			worldMapScreen:OnMapMouseDown(eventXCoord,eventYCoord)
		"
		actionDbl
		"
			worldMapScreen:TravelToSelected()
		"
		actionDrag
		"
			worldMapScreen:OnMapMouseMove(eventXCoord,eventYCoord)
		"
	}
	button
	{
		area 1200 606 150 150
		enabled "worldMapScreen:IsTravelButtonVisible()"
		bam RGPBTDIA
		Sequence 1
		ScaleToClip
		clickable lua "worldMapScreen:IsTravelButtonClickable()"
		action "
			worldMapScreen:TravelToSelected()
		"	
	}
}
`

chapterBackground = ""

text_CHAPTERSCROLL = ""
text_CHAPTERSCROLL_timeStart = 0
text_CHAPTERSCROLL_auto = 1
function UpdateChapterScroll(top, height, contentHeight)
	Infinity_PopMenu('RIGHT_SIDEBAR_BOTTOM')
	Infinity_PopMenu('LEFT_SIDEBAR')
	if(text_CHAPTERSCROLL_auto == 0) then
		--defer to default scrolling
		return nil
	end
	local dT = Infinity_GetClockTicks() - text_CHAPTERSCROLL_timeStart
	local newTop = (dT * -0.006) + height
	if(newTop + contentHeight + height < height) then
		return top
	end
	return newTop
end
function setChapterBackground(id)
	if chapterBackgrounds[id] == nil then
	chapterBackground = chapterBackgrounds[0]
	else
	chapterBackground = chapterBackgrounds[id]
	end
	--chapterBackground = chapterBackgrounds[id]
end
function rgGetBackgroundFrame()
	if rgGameEngine == 3 then --iwd
		return 1
	else
		return 0
	end
end

`
menu
{
	name 'CHAPTER'
	align center center
	ignoreEsc
	
	label
	{
		area 0 0 1365 768
		bam lua "chapterBackground"
		frame lua "rgGetBackgroundFrame()"
		ScaleToClip
	}
	label
	{
		area 834 96 502 578
		rectangle 4
		rectangle opacity 200
	}
	text
	{
		name "text_CHAPTERSCROLL_item"
		area 854 116 464 538
		text lua "text_CHAPTERSCROLL"
		text style normal
		scrollbar 'rgpscrl'
		scrollbar func 'UpdateChapterScroll'
		scrollbar hide lua 'text_CHAPTERSCROLL_auto == 1'
		action
		"
			text_CHAPTERSCROLL_auto = 0
		"
	}
	button
	{
		area 834 682 502 70
		bam			RGPBUT1
		text "DONE_BUTTON"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		clickable lua "chapterScreen:IsDoneButtonClickable()"
		action
		"
			chapterScreen:OnDoneButtonClick()
		"
	}
	button
	{
		area 834 18 502 70
		bam			RGPBUT1
		text "REPLAY_BUTTON"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		clickable lua "chapterScreen:IsReplayButtonClickable()"
		action
		"
			chapterScreen:OnReplayButtonClick()
		"
	}
}
`
epilogueImage = "GUIOSTUR"
`
menu
{
	name 'EPILOGUE'
	align center center
	ignoreEsc
	
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		176 164 262 408
		bam rgprecbc
		sequence 2
	}
	label
	{
		area 186 177 242 380
		bitmap lua "epilogueImage"
	}
	text
	{
		name "text_CHAPTERSCROLL_item"
		area 586 106 712 534
		text lua "text_CHAPTERSCROLL"
		text style normal
		scrollbar 'rgpscrl'
		scrollbar func 'UpdateChapterScroll'
		scrollbar hide lua 'text_CHAPTERSCROLL_auto == 1'
		action
		"
			text_CHAPTERSCROLL_auto = 0
		"
	}
	button
	{
		area 696 682 502 70
		bam			RGPBUT1
		text "DONE_BUTTON"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		clickable lua "chapterScreen:IsDoneButtonClickable()"
		action
		"
			chapterScreen:OnDoneButtonClick()
		"
	}
	button
	{
		area 166 682 502 70
		bam			RGPBUT1
		text "REPLAY_BUTTON"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		clickable lua "chapterScreen:IsReplayButtonClickable()"
		action
		"
			chapterScreen:OnReplayButtonClick()
		"
	}
}
menu
{
	name 'CHAPTER_WAITING_FOR_PROVIDER'
	modal
	align center center

	label
	{
		area 0 0 406 418
		mosaic GUIERR
	}
	label --Title
	{
		area 74 82 254 80
		text "WAITING_FOR_OTHER_PLAYERS"
		text style	"label"
	}
}
`
store = {}
storeGroupItemsVar = 0
storeItemsVar = 0
function getStoreSlotHighlight(highlight)
	if(highlight == 0) then 
		return 0
	else
		return 2 
	end
end
function storeSplitStack(count)
	storeScreen:SelectStoreItem(storeItemsVar-1, true);
	storeScreen:SetStoreItemCount(storeItemsVar-1, count);
end
function groupSplitStack(count)
	storeScreen:SelectGroupItem(storeGroupItemsVar-1, true);
	storeScreen:SetGroupItemCount(storeGroupItemsVar-1, count);
end
function checkContainerText(normalStr, containerStr)
	if(storeScreen:IsContainer()) then
		return t(containerStr)
	else
		return t(normalStr)
	end
end
function getStoreItemCount(row)
	local count = store.storeItems[rowNumber].item.count
	if(count ~= 0xFFFF)  then 
		return count
	else
		-- maxword, infinite count.
		return nil
	end
end
`
menu
{
	name 'STORE_BUYSELL'
	align center center
	onOpen "storeScreen:UpdateBuySellPanel()"
	ignoreEsc
	label
	{
		area 0 0 1165 768
	}
	
	--label
	--{
	--	area 508 6 152 44
	--	text lua "checkContainerText('BUY_SELL_TITLE','CONTAINER_TITLE')"
	--	text style "title"
	--}
	label
	{
		area 6 6 555 44
		text lua "checkContainerText('STORE_LABEL',Infinity_FetchString(storeScreen:GetStoreName()))"
		text style "rg_trajan"
	}
	--label
	--{
	--	area 280 6 239 40
	--	text lua "checkContainerText('STORE_LABEL',Infinity_FetchString(storeScreen:GetStoreName()))"
	--	text style "label"
	--	align left center
	--}
	label
	{
		area 1080 10 85 44
		enabled "not storeScreen:IsContainer()"
		text lua "game:GetPartyGold()"
		text style "rg_trajan"
		text color 	'$'
		text point 9
		align right center
	}
	--label
	--{
	--	area 467 666 146 37
	--	enabled "not storeScreen:IsContainer()"
	--	text "COST_LABEL"
	--	text style "label"
	--	align right center
	--}
	--label
	--{
	--	area 467 704 108 45
	--	enabled "not storeScreen:IsContainer()"
	--	text lua "storeScreen:GetStoreCost()"
	--	text style "normal"
	--	align right center
	--}
	--label
	--{
	--	area 628 660 79 55
	--	enabled "not storeScreen:IsContainer()"
	--	text "PRICE_LABEL"
	--	text style "label"
	--	align right center
	--}
	--label
	--{
	--	area 609 704 108 57
	--	enabled "not storeScreen:IsContainer()"
	--	text lua "storeScreen:GetGroupCost()"
	--	text style "normal"
	--	align right center
	--}
	
	
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 5 0 87 87
				bam STONSLOT
				frame lua "getStoreSlotHighlight(store.storeItems[rowNumber].highlight)"
				icon lua "store.storeItems[rowNumber].item.icon"
				tint lua "store.storeItems[rowNumber].item.tint"
				usages lua "store.storeItems[rowNumber].amountSelected" --how many selected
				count lua "store.storeItems[rowNumber].item.stackSize" --How many to a stack
				align center center
			}
			label
			{
				area 95 0 365 87
				text lua "store.storeItems[rowNumber].label"
				text style "normal"
				text align left center
			}
			label
			{
				area 460 0 120 87
				enabled "not storeScreen:IsContainer()"
				text lua "store.storeItems[rowNumber].value"
				text style "rg_trajan"
				text color 	'$'
				text point 12
				align left center
			}
			label
			{
				enabled "store.storeItems[rowNumber].valid == 0 and store.storeItems[rowNumber].highlight == 0"
				area 0 0 580 87
				fill 1 1 1 150
			}
		}
		area 0 58 580 596
		hidehighlight
		rowheight	87
		table		"store.storeItems"
		var			"storeItemsVar"
		scrollbar 'rgpscrl'
		action
		"
			if not storeScreen:IsContainer() then
				if not storeScreen:IsCloseBagButtonClickable() or store.storeItems[storeItemsVar].valid == 1 then
					local highlight = true
					if(store.storeItems[storeItemsVar].highlight == 1) then highlight = false end
					storeScreen:SelectStoreItem(storeItemsVar - 1,  highlight)
				end
			elseif (store.storeItems[storeItemsVar].highlight == 1) then
				storeScreen:SelectStoreItem(storeItemsVar - 1,  false)
			else
				storeScreen:SelectStoreItem(storeItemsVar - 1,  true)
				local count = store.storeItems[storeItemsVar].item.count
				local stock = store.storeItems[storeItemsVar].numInStock
				if (count > 1) then
					storeScreen:SetStoreItemCount(storeItemsVar - 1, count)
				elseif (stock > 1) then
					storeScreen:SetStoreItemCount(storeItemsVar - 1, stock)
				end	
			end
		"
		actionalt
		"
			showItemDescription(store.storeItems[storeItemsVar].item, 1, 1)
		"
		actionDbl
		"
			if store.storeItems[storeItemsVar].clickable == 1 then
				if not storeScreen:IsCloseBagButtonClickable() or store.storeItems[storeItemsVar].valid == 1 then
					local maxCount = store.storeItems[storeItemsVar].maxCount
					if(maxCount > 1) then
						popupRequester(maxCount, storeSplitStack, false, store.storeItems[storeItemsVar].item.icon)
					end
				end
			end
		"
	}
	
	label
	{
		area 578 6 234 44
		text  lua "Infinity_GetSelectedCharacterName()"
		text style "rg_trajan"
		align left center
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 5 0 87 87
				bam STONSLOT
				frame lua "getStoreSlotHighlight(store.groupItems[rowNumber].highlight)"
				tint lua "store.groupItems[rowNumber].item.tint"
				icon lua "store.groupItems[rowNumber].item.icon"
				count lua "store.groupItems[rowNumber].count"
				usages lua "store.groupItems[rowNumber].item.usages"
				align center center
			}
			label
			{
				area 95 0 365 87
				text lua "store.groupItems[rowNumber].label"
				text style "normal"
				text align left center
			}
			label
			{
				area 460 0 120 87
				enabled "not storeScreen:IsContainer()"
				text lua "store.groupItems[rowNumber].value"
				text style "rg_trajan"
				text color 	'$'
				text point 12
				align left center
			}
			label
			{
				enabled "store.groupItems[rowNumber].valid == 0 and store.groupItems[rowNumber].item.isBag ~= 1"
				area 0 0 580 87
				fill 1 1 1 150
			}
		}
		area 585 58 580 596
		enabled "not storeScreen:IsCloseBagButtonClickable()"
		hidehighlight
		rowheight	87
		table		"store.groupItems"
		var			"storeGroupItemsVar"
		scrollbar 'rgpscrl'
		action
		"
			if store.groupItems[storeGroupItemsVar].valid ~= 0 then
				if (store.groupItems[storeGroupItemsVar].highlight == 1) then
					storeScreen:SelectGroupItem(storeGroupItemsVar - 1,  false)
				else
					storeScreen:SelectGroupItem(storeGroupItemsVar - 1,  true)
					local count = store.groupItems[storeGroupItemsVar].item.count
					local stock = store.groupItems[storeGroupItemsVar].numInStock
					if (count > 1) then
						storeScreen:SetGroupItemCount(storeGroupItemsVar - 1, count)
					elseif (stock > 1) then
						storeScreen:SetGroupItemCount(storeGroupItemsVar - 1, stock)
					end
				end
			end
		"
		actionalt
		"
			showItemDescription(store.groupItems[storeGroupItemsVar].item, 1)
		"
		actionDbl
		"
			if(store.groupItems[storeGroupItemsVar].item.isBag == 1) then
				showItemDescription(store.groupItems[storeGroupItemsVar].item, 1)
				itemDescLeftButtonAction()
			elseif store.groupItems[storeGroupItemsVar].valid ~= 0 then
				local count = store.groupItems[storeGroupItemsVar].item.count
				local stock = store.groupItems[storeGroupItemsVar].numInStock
				if(count > 1) then
					popupRequester(count, groupSplitStack, true)
				elseif stock > 1 then
					popupRequester(stock, groupSplitStack, true)
				end	
			end
		"
	}

	list
	{
		column 
		{ 
			width 100
			label
			{
				area 5 0 87 87
				bam STONSLOT
				frame lua "getStoreSlotHighlight(store.groupItems[rowNumber].highlight)"
				tint lua "store.groupItems[rowNumber].item.tint"
				icon lua "store.groupItems[rowNumber].item.icon"
				count lua "store.groupItems[rowNumber].item.count"
				usages lua "store.groupItems[rowNumber].count"
				align center center
			}
			label
			{
				area 95 0 365 87
				text lua "store.groupItems[rowNumber].label"
				text style "normal"
				text align left center
			}
			label
			{
				area 460 0 120 87
				enabled "not storeScreen:IsContainer()"
				text lua "store.groupItems[rowNumber].value"
				text style "rg_trajan"
				text color 	'$'
				text point 12
				align left center
			}
			label
			{
				--#21242 We don't grey out bags, even though they're not selectable, because we can open them.
				enabled "store.groupItems[rowNumber].valid == 0  and store.groupItems[rowNumber].item.isBag ~= 1"
				area 0 0 580 87
				fill 1 1 1 150
			}
		}
		area 585 58 580 511
		enabled "storeScreen:IsCloseBagButtonClickable()"
		hidehighlight
		rowheight	87
		table		"store.groupItems"
		var			"storeGroupItemsVar"
		scrollbar 'rgpscrl'
		action
		"
			if store.groupItems[storeGroupItemsVar].valid ~= 0 then
				if (store.groupItems[storeGroupItemsVar].highlight == 1) then
					storeScreen:SelectGroupItem(storeGroupItemsVar - 1,  false)
				else
					storeScreen:SelectGroupItem(storeGroupItemsVar - 1,  true)
					local count = store.groupItems[storeGroupItemsVar].item.count
					local stock = store.groupItems[storeGroupItemsVar].numInStock
					if (count > 1) then
						storeScreen:SetGroupItemCount(storeGroupItemsVar - 1, count)
					elseif (stock > 1) then
						storeScreen:SetGroupItemCount(storeGroupItemsVar - 1, stock)
					end
				end
			end
		"
		actionalt
		"
			showItemDescription(store.groupItems[storeGroupItemsVar].item, 1)
		"
		actionDbl
		"
		if(store.groupItems[storeGroupItemsVar].item.isBag == 1) then
			showItemDescription(store.groupItems[storeGroupItemsVar].item, 1)
			itemDescLeftButtonAction()
		else
			if store.groupItems[storeGroupItemsVar].valid ~= 0 then
				local count = store.groupItems[storeGroupItemsVar].item.count
				local stock = store.groupItems[storeGroupItemsVar].numInStock
				if(count > 1) then
					popupRequester(count, groupSplitStack, true)
				elseif stock > 1 then
					popupRequester(stock, groupSplitStack, true)
				end	
			end
		end
		"
	}
	
	label
	{
		area 1022 0 58 58
		bam rgpcont
		sequence 1
		ScaleToClip
	}
	label
	{
		area 880 0 58 58
		bam rgpcont
		sequence 2
		ScaleToClip
	}

	button
	{
		area 0 666 580 82
		bam RGPBUT1
		text lua "checkContainerText('BUY_BUTTON', 'TO_BACKPACK_BUTTON') .. ' (' .. storeScreen:GetStoreCost() .. ')'"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		clickable lua "storeScreen:IsBuyItemButtonClickable()"
		ScaleToClip
		action
		"
			storeScreen:OnBuyItemButtonClick()
		"
	}
	button
	{
		area 585 666 580 82
		bam RGPBUT1
		text lua "checkContainerText('SELL_BUTTON','TO_CONTAINER_BUTTON') .. ' (' .. storeScreen:GetGroupCost() .. ')'"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		clickable lua "storeScreen:IsSellItemButtonClickable()"
		ScaleToClip
		action
		"
			storeScreen:OnSellItemButtonClick()
		"
	}
	button
	{
		--area 540 666 87 87
		--enabled "(not storeScreen:IsContainer()) and storeScreen:IsStealEnabled()"
		--bam GUIBTACT
		--frame 26
		--clickable lua "storeScreen:IsStealItemButtonClickable()"
		--action
		--"
		--	storeScreen:OnStealItemButtonClick()
		--"
		area 232 0 333 58
		enabled "(not storeScreen:IsContainer()) and storeScreen:IsStealEnabled()"
		bam RGPBUT1
		text "STEAL_BUTTON"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		clickable lua "storeScreen:IsStealItemButtonClickable()"
		action
		"
			storeScreen:OnStealItemButtonClick()
		"
	}
	button
	{
		--area 1100 0 58 58
		--enabled "storeScreen:IsCloseBagButtonClickable()"
		--bam RGPBTDIA
		--ScaleToClip
		--action
		--"
		--	storeScreen:OnCloseBagButtonClick()
		--"
		area 585 581 580 82
		enabled "storeScreen:IsCloseBagButtonClickable()"
		bam RGPBUT1
		text "CLOSE_CONTAINER_BUTTON"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		action
		"
			storeScreen:OnCloseBagButtonClick()
		"
	}
	button
	{
		area 824 14 204 36
		encumbrance
	}

	label
	{
		area 20 150 434 340
		enabled "storeScreen:IsSpriteOrderable() == false"
		rectangle 0
		rectangle opacity 200
		ignoreEvents
	}
 
	label
	{
		area 462 150 378 340
		enabled "storeScreen:IsSpriteOrderable() == false"
		rectangle 0
		rectangle opacity 200
		ignoreEvents
	}

}
`
	identifyItemsVar = 0
`
menu
{
	name 'STORE_IDENTIFY'
	align center center
	onOpen
	"
		storeScreen:UpdateIdentifyPanel()
		store.identifyText = ''
		
	"
	ignoreEsc
	
	label
	{
		area 0 0 1165 768
	}
	label
	{
		area 0 6 854 52
		text lua "Infinity_FetchString(storeScreen:GetStoreName()) .. ': ' .. t('IDENTIFY_TITLE')"
		text style "rg_trajan"
		text color 	'$'
		align left center
	}
	label
	{
		area 624 660 96 96
		bam rgpcont
		sequence 1
		ScaleToClip
	}
	label
	{
		area 724 682 426 54
		text lua "game:GetPartyGold()"
		text style "rg_trajan"
		text color 	'$'
		--text point 9
		align left center
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 5 0 87 87
				bam STONSLOT
				frame lua "getStoreSlotHighlight(store.identifyItems[rowNumber].highlight)"
				icon lua "store.identifyItems[rowNumber].item.icon"
				tint lua "store.identifyItems[rowNumber].item.tint"
				align center center
			}
			label
			{
				area 95 0 485 87
				text lua "store.identifyItems[rowNumber].label"
				text style "normal"
				text align left center
			}
			label
			{
				enabled "store.identifyItems[rowNumber].valid == 0"
				area 0 0 580 87
				fill 1 1 1 150
			}
		}
		area 14 74 580 576
		hidehighlight
		rowheight	87
		table		"store.identifyItems"
		var			"identifyItemsVar"
		scrollbar 'rgpscrl'
		action
		"
			local highlight = true
			if(store.identifyItems[identifyItemsVar].highlight == 1) then highlight = false end
			if(highlight == true and store.identifyItems[identifyItemsVar].valid == 0) then return end
			storeScreen:SelectIdentifyItem( identifyItemsVar - 1,  highlight)
		"
	}
	
	button
	{
		area 0 664 600 86	
		bam RGPBUT1
		text lua "t('IDENTIFY_BUTTON') .. ' (' .. storeScreen:GetIdentifyCost() .. ' gp)'"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		clickable lua "storeScreen:IsIdentifyItemButtonClickable()"
		action
		"
			storeScreen:OnIdentifyItemButtonClick()
		"
	}
	text
	{
		area 624 74 526 576
		text lua "store.identifyText"
		text style "normal"
		scrollbar 'rgpscrl'
	}
}
`
function getDonationFrame()
	if(store.hasDonated ~= nil and store.hasDonated == 1) then
		return 1
	else
		return 0
	end
end
storeDonateAmountEdit = 0 --no longer used in ui, but the engine needs it.
function changeDonationAmount(amount)
	if (amt == nil) then
		amt = 0
	end
	amt = amt + amount

	if (amt > 0) then
		storeDonateAmountEdit = tostring(amt)
	else
		storeDonateAmountEdit = '0'
	end
end	
`
menu
{
	name 'STORE_DONATE'
	align center center
	ignoreEsc
	onOpen 
	"
		storeScreen:UpdateDonatePanel()
		store.donateText = ''
	"

	label
	{
		area 0 0 1165 768
	}
	label
	{
		area 0 6 854 52
		text lua "Infinity_FetchString(storeScreen:GetStoreName()) .. ': ' .. t('DONATE_TITLE')"
		text style "rg_trajan"
		text color 	'$'
		align left center
	}
	
	label
	{
		area 136 88 342 267
		bam "RGPDONAT"
		frame lua "getDonationFrame()"
		ScaleToClip
	}
	label
	{
		area 82 355 448 55
		text "ENTER_DONATION_LABEL"
		text style "rg_trajan"
		align center center
	}
	edit
	{
		name		"storeDonateAmountEditArea"
		area		196 462 210 106
		var			storeDonateAmountEdit
		text style	"rg_trajan"
		text align center center
		maxlines	1
		action
		"
			-- only permit numbers as letters.
			if(tonumber(letter_pressed) ~= nil or not letter_pressed) then
				return 1
			else
				return 0
			end
		"
	}
	button
	{
		bam rgpbtpl
		area 48 446 140 140
		sequence 0
		ScaleToClip
		action
		"
			changeDonationAmount(1)
		"
		actionHold
		"
			changeDonationAmount(1)
		"
	}
	button
	{
		bam rgpbtpl
		area 414 446 140 140
		sequence 1
		ScaleToClip
		clickable lua "tonumber(storeDonateAmountEdit) > 0"
		action
		"
				changeDonationAmount(-1)
		"
		actionHold
		"
				changeDonationAmount(-1)
		"
	}
	
	button
	{
		area 48 630 506 106
		bam RGPBUT1
		text "DONATE_BUTTON"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		clickable lua "storeScreen:IsDonateButtonClickable()"
		action
		"
			storeScreen:OnDonateButtonClick()
		"
	}
	label
	{
		area 618 636 96 96
		bam rgpcont
		sequence 1
		ScaleToClip
	}
	label
	{
		area 720 658 266 54
		text lua "game:GetPartyGold()"
		text style "rg_trajan"
		text color 	'$'
		--text point 9
		align left center
	}
	text
	{
		area 618 88 532 512
		text lua "store.donateText"
		text style "normal"
		scrollbar 'rgpscrl'
	}
}
`
	function storeRest()
		storeScreen:RestParty()
	end
`
menu
{
	name 'STORE_ROOMS'
	align center center
	onOpen 
	"
		storeScreen:SetRoomType(0)
		storeScreen:UpdateRentRoomPanel()
	"
	ignoreEsc
	
	label
	{
		area 0 0 1165 768
	}
	--label
	--{
	--	area 48 6 768 44
	--	text "ROOMS_TITLE"
	--	text style "title"
	--}
	
	label
	{
		area 0 6 854 52
		text lua "Infinity_FetchString(storeScreen:GetStoreName()) .. ': ' .. t('ROOMS_TITLE')"
		text style "rg_trajan"
		text color 	'$'
		align left center
	}
	label
	{
		area 862 660 96 96
		bam rgpcont
		sequence 1
		ScaleToClip
	}
	label
	{
		area 962 682 188 54
		text lua "game:GetPartyGold()"
		text style "rg_trajan"
		text color 	'$'
		--text point 9
		align left center
	}
	
	button
	{
		area 68 72 290 186
		bam "INNROOMS"
		sequence 0
		clickable lua "storeScreen:IsRoomTypeClickable(1)"
		ScaleToClip
		action
		"
			storeScreen:SetRoomType(1)
			selectedRoom = Infinity_FindUIItemByName('BUTTON_room_peasant')
		"
	}
	button
	{
		name "BUTTON_room_peasant"
		area 0 258 425 82
		bam RGPBUT1
		text "PEASANT_BUTTON"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		glow lua "storeScreen:GetRoomType() == 1"
		clickable lua "storeScreen:IsRoomTypeClickable(1)"
		action
		"
			storeScreen:SetRoomType(1)
		"
	}
	
	button
	{
		area 494 72 290 186
		bam "INNROOMS"
		sequence 1
		clickable lua "storeScreen:IsRoomTypeClickable(2)"
		ScaleToClip
		action
		"
			storeScreen:SetRoomType(2)
			selectedRoom = Infinity_FindUIItemByName('BUTTON_room_merchant')
		"
	}
	button
	{
		name "BUTTON_room_merchant"
		area 424 258 425 82
		bam RGPBUT1
		text "MERCHANT_BUTTON"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		glow lua "storeScreen:GetRoomType() == 2"
		clickable lua "storeScreen:IsRoomTypeClickable(2)"
		action
		"
			storeScreen:SetRoomType(2)
		"
	}
	
	button
	{
		area 68 354 290 200
		bam "INNROOMS"
		sequence 2
		clickable lua "storeScreen:IsRoomTypeClickable(3)"
		ScaleToClip
		frame 0
		action
		"
			storeScreen:SetRoomType(3)
			selectedRoom = Infinity_FindUIItemByName('BUTTON_room_noble')
		"
	}
	button
	{
		name "BUTTON_room_noble"
		area 0 554 425 82
		bam RGPBUT1
		text "NOBLE_BUTTON"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		glow lua "storeScreen:GetRoomType() == 3"
		clickable lua "storeScreen:IsRoomTypeClickable(3)"
		action
		"
			storeScreen:SetRoomType(3)
		"
	}
	
	button
	{
		area 494 354 290 200
		bam "INNROOMS"
		sequence 3
		clickable lua "storeScreen:IsRoomTypeClickable(4)"
		ScaleToClip
		action
		"
			storeScreen:SetRoomType(4)
			selectedRoom = Infinity_FindUIItemByName('BUTTON_room_royal')
		"
	}
	button
	{
		name "BUTTON_room_royal"
		area 424 554 425 82
		bam RGPBUT1
		text "ROYAL_BUTTON"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		glow lua "storeScreen:GetRoomType() == 4"
		clickable lua "storeScreen:IsRoomTypeClickable(4)"
		action
		"
			storeScreen:SetRoomType(4)
		"
	}
	--label
	--{
	--	area 1022 648 70 40
	--	text "COST_LABEL"
	--	text style "label"
	--}
	text
	{
		area 862 72 292 568
		text lua "store.roomText"
		text style "normal"
	}
	--label
	--{
	--	area 998 696 120 40
	--	text lua "storeScreen:GetRoomCost()"
	--	text style "gold"
	--}
	button
	{
		area 0 660 849 96
		bam RGPBUT1
		text lua "t('RENT_BUTTON') .. ' (' .. storeScreen:GetRoomCost() .. ' gp)'"
		--text lua "t('RENT_BUTTON') .. ' (' .. t('COST_LABEL') .. ': ' .. storeScreen:GetRoomCost() .. ')'"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		action
		"
			storeScreen:OnRentRoomButtonClick()
		"
	}
}
menu
{
	name 'STORE_HEALING'
	align center center
	onOpen "storeScreen:UpdateBuySpellPanel()"
	ignoreEsc
	label
	{
		area 0 0 1165 768
	}
	label
	{
		area 0 6 854 52
		text lua "Infinity_FetchString(storeScreen:GetStoreName()) .. ': ' .. t('HEALING_TITLE')"
		text style "rg_trajan"
		text color 	'$'
		align left center
	}
	label
	{
		area 624 660 96 96
		bam rgpcont
		sequence 1
		ScaleToClip
	}
	label
	{
		area 724 682 426 54
		text lua "game:GetPartyGold()"
		text style "rg_trajan"
		text color 	'$'
		--text point 9
		align left center
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 5 0 87 87
				bam STONSLOT
				frame lua "getStoreSlotHighlight(store.healingSpells[rowNumber].highlight)"
				icon lua "store.healingSpells[rowNumber].icon"
				tint lua "store.healingSpells[rowNumber].tint"
				align center center
			}
			label
			{
				area 95 0 365 87
				text lua "Infinity_FetchString(store.healingSpells[rowNumber].name)"
				text style "normal"
				text align left center
			}
			label
			{
				area 460 0 120 87
				text style "rg_trajan"
				text color 	'$'
				text point 12
				text align center center
				text lua "store.healingSpells[rowNumber].value"
			}
			label
			{
				enabled "store.healingSpells[rowNumber].valid == 0"
				area 0 0 580 87
				fill 1 1 1 150
			}
		}
		area 14 74 580 576
		hidehighlight
		rowheight	87
		table		"store.healingSpells"
		var			"healingSpellsVar"
		scrollbar 'rgpscrl'
		action
		"
			local highlight = true
			if(store.healingSpells[healingSpellsVar].highlight == 1) then highlight = false end
			if(highlight == true and store.healingSpells[healingSpellsVar].valid == 0) then return end
			storeScreen:SelectSpellItem( healingSpellsVar - 1,  highlight)
		"
		actionAlt
		"
			local spell = store.healingSpells[healingSpellsVar]
			popupDetails(16189, spell.name, spell.description,spell.icon)
		"
	}
	button
	{
		area 0 664 600 86	
		bam RGPBUT1
		text lua "t('BUY_BUTTON') .. ' (' .. storeScreen:GetSpellCost() .. ' gp)'"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		action
		"
			storeScreen:OnBuySpellButtonClick()
		"
	}
	text
	{
		area 624 74 526 576
		text lua "store.spellText"
		text style "normal"
		scrollbar 'rgpscrl'
	}
}

menu
{
	name 'STORE_DRINKS'
	align center center
	ignoreEsc
	onOpen 
	"
		storeScreen:UpdateBuyDrinksPanel()
		store.drinkText = ''
	"
	
	label
	{
		area 0 0 1165 768
	}
	--label
	--{
	--	area 48 6 768 44
	--	text "DRINKS_TITLE"
	--	text style "title"
	--}
	label
	{
		area 0 6 854 52
		text lua "Infinity_FetchString(storeScreen:GetStoreName()) .. ': ' .. t('DRINKS_TITLE')"
		text style "rg_trajan"
		text color 	'$'
		align left center
	}
	label
	{
		area 618 660 96 96
		bam rgpcont
		sequence 1
		ScaleToClip
	}
	label
	{
		area 718 682 432 54
		text lua "game:GetPartyGold()"
		text style "rg_trajan"
		text color 	'$'
		--text point 9
		align left center
	}
	label
	{
		area 10 80 202 47
		text "DRINK_LABEL"
		text style "rg_trajan"
		text align left center
	}
	label
	{
		area 440 80 111 47
		text "COST_LABEL"
		text style "rg_trajan"
		text align left center
	}
	--label
	--{
	--	area 10 131 556 513
	--	rectangle 1
	--}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 5 0 421 87
				text lua "store.drinks[rowNumber].name"
				text style "normal"
				text align left center
			}
			label
			{
				area 426 0 120 87
				text lua "store.drinks[rowNumber].value"
				text style "rg_trajan"
				text color 	'$'
				text point 12
				text align center center
			}
			label
			{
				enabled "store.drinks[rowNumber].valid == 0"
				area 0 0 556 87
				fill 1 1 1 150
			}
		}
		area 10 131 570 523
		rowheight	87
		table		"store.drinks"
		var			"storeDrinksVar"
		scrollbar 'rgpscrl'
	}
	button
	{
		area 10 660 570 96
		bam RGPBUT1
		text "BUY_BUTTON"
		text style "rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		clickable lua "storeDrinksVar ~= nil and storeDrinksVar ~= 0"
		action
		"
			storeScreen:OnBuyDrinkButtonClick(storeDrinksVar - 1)
		"
	}
	label
	{
		area 1015 45 127 86
		bam lua "store.qualityIcon"
	}
	label
	{
		area 618 80 355 47
		text "RUMORS_LABEL"
		text style "rg_trajan"
		text align left center
	}
	text
	{
		area 618 131 524 515
		text lua "store.drinkText"
		text style "normal"
		scrollbar 'rgpscrl'
	}
}
`
	storePanelButtonHighlightGroup = nil
	function setStoreMainPanel(buttonId)
		local oldMenu  = storeScreen:GetMenuName(storeCurMenuId)
		Infinity_PopMenu(oldMenu)
		storeCurMenuId = storeScreen:GetPanelButtonPanelId(buttonId)
		Infinity_PushMenu(storeScreen:GetMenuName(storeCurMenuId))
	end
	function getBuySellTooltip()
		if(storeScreen:IsContainer()) then
			return t('TRANSFER_ITEMS_TOOLTIP')
		else
			return Infinity_FetchString(storeScreen:GetPanelButtonToolTip(0))
		end
	end
`
menu
{
	name 'STORE_CHOOSER'
	align center center
	onOpen
	"
		Infinity_SetBackground('BACKGROUND')
		local menuName = storeScreen:GetMenuName(storeCurMenuId)
		Infinity_PushMenu(menuName)
		pushSidebars()
		local buttonId = storeScreen:GetPanelButtonId(storeCurMenuId)
		storePanelButtonHighlightGroup = Infinity_FindUIItemByName('BUTTON_storechooser_' .. buttonId)
		Infinity_PopMenu('LEFT_SIDEBAR')
		Infinity_PopMenu('RIGHT_SIDEBAR_BOTTOM')
	"
	onClose 
	"
		local menuName = storeScreen:GetMenuName(storeCurMenuId)
		Infinity_PopMenu(menuName)
		popSidebars()
		Infinity_PushMenu('LEFT_SIDEBAR')
		Infinity_PushMenu('RIGHT_SIDEBAR_BOTTOM')
	"
	ignoreEsc
	
	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}
	label
	{
		area 5 3 80 77
		bam lua "store.icon"
	}
	button
	{
		area 1279 627 86 137
		bam RGPBTCLS
		sequence 0
		action
		"
			storeScreen:OnMainDoneButtonClick()
		"
	}
	button
	{
		name 'BUTTON_storechooser_0'
		area 5 90 80 100
		enabled "storeScreen:GetPanelButtonEnabled(0)"
		bam rgpstob1
		ScaleToClip
		highlightgroup storePanelButtonHighlightGroup
		sequence lua "storeScreen:GetPanelButtonSequence(0)"
		tooltip lua "getBuySellTooltip()"
		action
		"
			setStoreMainPanel(0)
		"
	}
	button
	{
		name 'BUTTON_storechooser_1'
		area 5 200 80 100
		enabled "storeScreen:GetPanelButtonEnabled(1)"
		bam rgpstob1
		ScaleToClip
		highlightgroup storePanelButtonHighlightGroup
		sequence lua "storeScreen:GetPanelButtonSequence(1)"
		tooltip lua "Infinity_FetchString(storeScreen:GetPanelButtonToolTip(1))"
		action
		"
			setStoreMainPanel(1)
		"
	}
	button
	{
		name 'BUTTON_storechooser_2'
		area 5 310 80 100
		enabled "storeScreen:GetPanelButtonEnabled(2)"
		bam rgpstob1
		ScaleToClip
		highlightgroup storePanelButtonHighlightGroup
		sequence lua "storeScreen:GetPanelButtonSequence(2)"
		tooltip lua "Infinity_FetchString(storeScreen:GetPanelButtonToolTip(2))"
		action
		"
			setStoreMainPanel(2)
		"
	}
	button
	{
		name 'BUTTON_storechooser_3'
		area 5 420 80 100
		enabled "storeScreen:GetPanelButtonEnabled(3)"
		bam rgpstob1
		ScaleToClip
		highlightgroup storePanelButtonHighlightGroup
		sequence lua "storeScreen:GetPanelButtonSequence(3)"
		tooltip lua "Infinity_FetchString(storeScreen:GetPanelButtonToolTip(3))"
		action
		"
			setStoreMainPanel(3)
		"
	}
}
`
	function worldDeathLoadClickable()
		if(e:IsMultiplayer() and not e:IsHosting()) then
			return false
		end
		return not worldScreen:GetHardPaused()
	end
	function worldDeathQuitClickable()
		return not worldScreen:GetHardPaused()
	end
	function worldDeathText()
		if(e:IsMultiplayer()) then
			if(e:IsHosting()) then
				return Infinity_FetchString(19377)
			else
				return Infinity_FetchString(11331)
			end
		else
			if(worldDeathStr == nil) then
				return Infinity_FetchString(16498)
			else
				return Infinity_FetchString(worldDeathStr)
			end
		end
	end
	function worldDeathQuitText()
		if(e:IsMultiplayer()) then
			return t('LOGOUT_BUTTON')
		else
			return t('QUIT_BUTTON')
		end
	end
	groundItemsButtonToggle = 0
	highlightButtonToggle = 0
	worldChatEdit = ""
`
menu
{
	name "WORLD_DEATH"
	align center center
	ignoreEsc
	modal
	label
	{
		area 0 0 682 240
		mosaic GUIERR6
	}
	label
	{
		area 40 21 598 113
		text lua "worldDeathText()"
		text style	"label"
		text align center center
	}
	button
	{
		area 28 170 304 44
		bam GUIOSTCL
		text "LOAD_BUTTON"
		text style	"button"
		clickable lua "worldDeathLoadClickable()"
		action 
		"
			Infinity_PopMenu()
			worldScreen:OnDeathLoad()
		"
	}
	button
	{
		area 358 170 302 44
		bam GUIOSTCL
		text style	"button"
		text lua "worldDeathQuitText()"
		clickable lua "worldDeathQuitClickable()"
		action 
		"
			Infinity_PopMenu()
			worldScreen:OnDeathQuit()
		"
	}
}
`
	actionBarTooltip = {}
	function rgIsMultiSelection()
		if (buttonArray:GetButtonEnabled(4) == false and buttonArray:GetButtonEnabled(11) == true) then
			return true
		else 
			return false
		end
	end	
	function rgIsNoSpellcaster()
		if (buttonArray:GetButtonEnabled(5) == true and buttonArray:GetButtonEnabled(6) == false and buttonArray:GetButtonEnabled(7) == true) then
			return true
		else 
			return false
		end
	end	
`
menu
{
	name "WORLD_ACTIONBAR"
	align right bottom
	onOpen 
	"
		toolbarTop = 60
		Infinity_PushMenu('WORLD_MESSAGES')
		if(groundItemsButtonToggle == 1) then
			worldScreen:StartGroundItems()
		end
		worldScreen:SetHighlightEnabled(highlightButtonToggle == 1)
		rgToggleButtons = 0
	"
	onClose 
	"
		Infinity_PopMenu('WORLD_QUICKLOOT');
		Infinity_PopMenu('WORLD_MESSAGES');
	"
	ignoreEsc
	label
	{
		area 0 90 1365 1
		mosaic BLANK
	}
	--button
	--
	--	area 21 12 32 32
	--	bam ROUNDBUT
	--	tooltip lua "Infinity_FetchString(32217)"
	--	toggle groundItemsButtonToggle
	--	action
	--	"
	--		if(groundItemsButtonToggle == 1) then
	--			worldScreen:StartGroundItems()
	--		else
	--			worldScreen:StopGroundItems()
	--		end
	--	"
	--	actionAlt
	--	"
	--		if(groundItemsButtonToggle == 1) then
	--			worldScreen:StartGroundItems()
	--		else
	--			worldScreen:StopGroundItems()
	--		end
	--	"
	--
	label { area   3 0 87 91 bam STONSLOT }
	label { area  90 0 87 87 bam STONSLOT }
	label { area 177 0 87 87 bam STONSLOT }
	label { area 264 0 87 87 bam STONSLOT }
	label { area 351 0 87 87 bam STONSLOT }
	label { area 438 0 87 87 bam STONSLOT }
	label { area 525 0 87 87 bam STONSLOT }
	label { area 612 0 87 87 bam STONSLOT }
	label { area 699 0 87 87 bam STONSLOT }
	label { area 786 0 87 87 bam STONSLOT }
	label { area 873 0 87 87 bam STONSLOT }
	label { area 960 0 87 87 bam STONSLOT }
	button
	{
		area 3 0 87 87
		actionBar 0
		enabled "buttonArray:GetButtonEnabled(0)"
		tooltip lua "actionBarTooltip[0]"
		action "buttonArray:OnLButtonPressed(0)"
		actionAlt "buttonArray:OnRButtonPressed(0)"
	}
	button
	{
		area 90 0 87 87
		actionBar 1
		enabled "buttonArray:GetButtonEnabled(1)"
		tooltip lua "actionBarTooltip[1]"
		action "buttonArray:OnLButtonPressed(1)"
		actionAlt "buttonArray:OnRButtonPressed(1)"
	}
	button
	{
		area 177 0 87 87
		actionBar 2
		enabled "buttonArray:GetButtonEnabled(2)"
		tooltip lua "actionBarTooltip[2]"
		action "buttonArray:OnLButtonPressed(2)"
		actionAlt "buttonArray:OnRButtonPressed(2)"
	}
	button
	{
		area 264 0 87 87
		actionBar 3
		enabled "buttonArray:GetButtonEnabled(3)"
		tooltip lua "actionBarTooltip[3]"
		action "buttonArray:OnLButtonPressed(3)"
		actionAlt "buttonArray:OnRButtonPressed(3)"
	}
	button
	{
		area 351 0 87 87
		actionBar 4
		enabled "buttonArray:GetButtonEnabled(4)"
		tooltip lua "actionBarTooltip[4]"
		action "buttonArray:OnLButtonPressed(4)"
		actionAlt "buttonArray:OnRButtonPressed(4)"
	}
	button
	{
		area 438 0 87 87
		actionBar 5
		enabled "buttonArray:GetButtonEnabled(5)"
		tooltip lua "actionBarTooltip[5]"
		action "buttonArray:OnLButtonPressed(5)"
		actionAlt "buttonArray:OnRButtonPressed(5)"
	}
	button
	{
		area 525 0 87 87
		actionBar 6
		enabled "buttonArray:GetButtonEnabled(6)"
		tooltip lua "actionBarTooltip[6]"
		action "buttonArray:OnLButtonPressed(6)"
		actionAlt "buttonArray:OnRButtonPressed(6)"
	}
	button
	{
		area 612 0 87 87
		actionBar 7
		enabled "buttonArray:GetButtonEnabled(7)"
		tooltip lua "actionBarTooltip[7]"
		action "buttonArray:OnLButtonPressed(7)"
		actionAlt "buttonArray:OnRButtonPressed(7)"
	}
	
	button
	{
		area 699 0 87 87
		actionBar 8
		enabled "buttonArray:GetButtonEnabled(8)"
		tooltip lua "actionBarTooltip[8]"
		action "buttonArray:OnLButtonPressed(8)"
		actionAlt "buttonArray:OnRButtonPressed(8)"
	}
	button
	{
		area 786 0 87 87
		actionBar 9
		enabled "buttonArray:GetButtonEnabled(9)"
		tooltip lua "actionBarTooltip[9]"
		action "buttonArray:OnLButtonPressed(9)"
		actionAlt "buttonArray:OnRButtonPressed(9)"
	}
	button
	{
		area 873 0 87 87
		actionBar 10
		enabled "buttonArray:GetButtonEnabled(10)"
		tooltip lua "actionBarTooltip[10]"
		action "buttonArray:OnLButtonPressed(10)"
		actionAlt "buttonArray:OnRButtonPressed(10)"
	}
	button
	{
		area 960 0 87 87
		actionBar 11
		enabled "buttonArray:GetButtonEnabled(11)"
		tooltip lua "actionBarTooltip[11]"
		action "buttonArray:OnLButtonPressed(11)"
		actionAlt "buttonArray:OnRButtonPressed(11)"
	}
	button
	{
		area 1047 0 87 87
		bam rgpguils
		sequence 16
		action
		"
			if rgToggleButtons == 0 then
				rgToggleButtons = 1
			else
				rgToggleButtons = 0
			end
		"
		actionAlt
		"
			Infinity_PushMenu('cheatConsole')
			Infinity_PushMenu('luaHistoryMenu')
			Infinity_PushMenu('cheatMenu')
			Infinity_PopMenu('WORLD_MESSAGES')
			Infinity_PopMenu('WORLD_QUICKLOOT')
			
		"
	}
	button
	{
		area 1134 0 87 87
		bam rgpguils
		sequence 13
		action
		"
			game:SelectAll()
		"
		actionDbl
		"
			game:CenterOnGroupLeader()
		"
	}
	button
	{
		enabled "rgToggleButtons == 1"
		area 3 0 87 87
		bam rgpguils
		sequence 4
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(5)
		"
	}
	button
	{
		enabled "rgToggleButtons == 1"
		area 90 0 87 87
		bam rgpguils
		sequence 5
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(6)
		"
	}
	button
	{
		enabled "rgToggleButtons == 1"
		area 177 0 87 87
		bam rgpguils
		sequence 3
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(4)
		"
	}
	button
	{
		enabled "rgIsMultiSelection() or rgToggleButtons == 1"
		area 264 0 87 87
		bam rgpguils
		sequence 0
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(1)
		"
	}
	button
	{
		enabled "rgIsMultiSelection() or rgToggleButtons == 1"
		area 351 0 87 87
		bam rgpguils
		sequence 1
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			rgEscModeJournal = 1
			if rgIsInEscMode == 0 then
				e:GetActiveEngine():OnLeftPanelButtonClick(7)
			end
		"
	}
	button
	{
		enabled "rgIsMultiSelection() or rgToggleButtons == 1"
		area 438 0 87 87
		bam rgpguils
		sequence 6
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			rgEscModeJournal = 0
			if rgIsInEscMode == 0 then
				e:GetActiveEngine():OnLeftPanelButtonClick(7)
			end
		"
	}
	button
	{
		area 612 0 87 87
		enabled "rgToggleButtons == 1"
		bam rgpguils
		sequence 7
		tooltip lua "getTooltipWithHotkey(8,24363)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(multiplayerScreen)"
		clickable lua "sidebarsGreyed ~= 1 and e:IsMultiplayer()"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(8)
		"
	}
	button
	{
		enabled "rgIsMultiSelection() or rgToggleButtons == 1 or rgIsNoSpellcaster()"
		area 525 0 87 87
		bam rgpguils
		sequence 2
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(3)
		"
	}
	
	button
	{
		enabled "rgIsMultiSelection() or rgToggleButtons == 1"
		area 699 0 87 87
		toggle aiButtonToggle
		bam rgpguils
		sequence 12
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			game:ToggleAI()
		"
	}
	button
	{
		enabled "rgIsMultiSelection() or rgToggleButtons == 1"
		area 786 0 87 87
		bam rgpguils
		sequence 10
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnRestButtonClick()
		"
	}
	--button
	--{
	--	enabled "rgIsMultiSelection() or rgToggleButtons == 1"
	--	area 786 0 87 87
	--	toggle highlightButtonToggle
	--	bam rgpguils
	--	sequence 11
	--	clickable lua "sidebarsGreyed ~= 1"
	--	action
	--	"
	--		worldScreen:SetHighlightEnabled(highlightButtonToggle == 1)
	--	"
	--}
	button
	{
		enabled "rgIsMultiSelection() or rgToggleButtons == 1"
		area 873 0 87 87
		bam rgpguils
		sequence 8
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			worldScreen:OnQuickSaveButtonClick(false)
		"
		actionAlt
		"
			worldScreen:OnQuickSaveButtonClick(true)
		"
	}
	button
	{
		enabled "rgIsMultiSelection() or rgToggleButtons == 1"
		area 960 0 87 87
		toggle selectionButtonToggle
		bam rgpguils
		sequence 9
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			worldScreen:OnSelectionButtonClick()
		"
	}
	--Buttons form a menu aligned bottom right, with height = 197, y is offset from top of that menu.
	--button
	--{
	--	area 6 0 71 48
	--	enabled "e:IsTouchUI() and worldScreen == e:GetActiveEngine()"
	--	toggle selectionButtonToggle
	--	bam GUILS10
	--	sequence 14
	--	clickable lua "sidebarsGreyed ~= 1"
	--	action
	--	"
	--		worldScreen:OnSelectionButtonClick()
	--	"
	--}
	--button
	--{
	--	area 6 49 71 48
	--	enabled "worldScreen == e:GetActiveEngine()"
	--	tooltip lua "Infinity_FetchString(32729)"
	--	toggle highlightButtonToggle
	--	bam GUILS10
	--	sequence 11
	--	clickable lua "sidebarsGreyed ~= 1"
	--	action
	--	"
	--		worldScreen:SetHighlightEnabled(highlightButtonToggle == 1)
	--	"
	--}
	--button
	--{
	--	area 6 99 71 48
	--	enabled "worldScreen == e:GetActiveEngine()"
	--	tooltip lua "getPartyAITooltip()"
	--	toggle aiButtonToggle
	--	bam GUILS10
	--	sequence 10
	--	clickable lua "sidebarsGreyed ~= 1"
	--	action
	--	"
	--		game:ToggleAI()
	--	"
	--}
	--button
	--{
	--	area 6 149 71 48
	--	enabled "worldScreen == e:GetActiveEngine()"
	--	tooltip lua "Infinity_FetchString(10485)"
	--	bam GUILS10
	--	sequence 13
	--	clickable lua "sidebarsGreyed ~= 1"
	--	action
	--	"
	--		game:SelectAll()
	--	"
	--	actionDbl
	--	"
	--		game:CenterOnGroupLeader()
	--	"
	--}
}
`
	loot = 
	{
		containerItems = {},
		groupItems = {},
		groundItems = {}
	}
	function getContainerItemProperty(index, property)
		local idxScrolled = index + worldScreen:GetTopContainerItem()
		if(loot.containerItems[idxScrolled] == nil or loot.containerItems[idxScrolled].item == nil) then
			return nil
		end
		return loot.containerItems[idxScrolled].item[property]
	end
	function getGroupItemProperty(index, property)
		local idxScrolled = index + worldScreen:GetTopGroupItem()
		if(loot.groupItems[idxScrolled] == nil or loot.groupItems[idxScrolled].item == nil) then
			return nil
		end
		return loot.groupItems[idxScrolled].item[property]
	end
	function scrollContainerItems()
		if scrollDirection > 0 then
			if worldScreen:ContainerScrollEnabled(-1) then
				worldScreen:OnContainerScroll(-1)
			end
		elseif scrollDirection < 0 then
			if worldScreen:ContainerScrollEnabled(1) then
				worldScreen:OnContainerScroll(1)
			end
		end
	end
	function scrollGroupItems()
		if scrollDirection > 0 then
			if worldScreen:GroupScrollEnabled(-1) then
				worldScreen:OnGroupScroll(-1)
			end
		elseif scrollDirection < 0 then
			if worldScreen:GroupScrollEnabled(1) then
				worldScreen:OnGroupScroll(1)
			end
		end
	end
	function showContainerItemDescription(index)
		local idxScrolled = index + worldScreen:GetTopContainerItem()
		if(loot.containerItems[idxScrolled] == nil or loot.containerItems[idxScrolled].item == nil) then
			return nil
		end
		Infinity_GetContainerItemDescription(idxScrolled)
		showItemDescription(loot.containerItems[idxScrolled].item, 2)
	end
	function showGroupItemDescription(index)
		local idxScrolled = index + worldScreen:GetTopGroupItem()
		if(loot.groupItems[idxScrolled] == nil or loot.groupItems[idxScrolled].item == nil) then
			return nil
		end
		Infinity_GetGroupItemDescription(idxScrolled)
		showItemDescription(loot.groupItems[idxScrolled].item, 2)
	end
`
menu
{
	name "WORLD_CONTAINER"
	align center bottom
	offset -24 0
	ignoreesc
	label
	{
		area 0 0 1000 220
		bam rgpcont
	}
	label
	{
		area 40 28 87 82
		bam lua "loot.containerIcon"
	}
	button
	{
		area 140 16 272 188
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 145 23 87 87
		bam STONSLOT
		tooltip lua	"getContainerItemProperty(0,'name')"
		tint lua	"getContainerItemProperty(0,'tint')"
		icon lua	"getContainerItemProperty(0,'icon')"
		count lua	"getContainerItemProperty(0,'count')"
		usages lua	"getContainerItemProperty(0,'usages')"
		action		"worldScreen:OnContainerButtonClick(0)"
		actionAlt	"showContainerItemDescription(0)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 232 23 87 87
		bam STONSLOT
		tooltip lua	"getContainerItemProperty(1,'name')"
		tint lua	"getContainerItemProperty(1,'tint')"
		icon lua	"getContainerItemProperty(1,'icon')"
		count lua	"getContainerItemProperty(1,'count')"
		usages lua	"getContainerItemProperty(1,'usages')"
		action		"worldScreen:OnContainerButtonClick(1)"
		actionAlt	"showContainerItemDescription(1)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 319 23 87 87
		bam STONSLOT
		tooltip lua	"getContainerItemProperty(2,'name')"
		tint lua	"getContainerItemProperty(2,'tint')"
		icon lua	"getContainerItemProperty(2,'icon')"
		count lua	"getContainerItemProperty(2,'count')"
		usages lua	"getContainerItemProperty(2,'usages')"
		action		"worldScreen:OnContainerButtonClick(2)"
		actionAlt	"showContainerItemDescription(2)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 145 110 87 87
		bam STONSLOT
		tooltip lua	"getContainerItemProperty(3,'name')"
		tint lua	"getContainerItemProperty(3,'tint')"
		icon lua	"getContainerItemProperty(3,'icon')"
		count lua	"getContainerItemProperty(3,'count')"
		usages lua	"getContainerItemProperty(3,'usages')"
		action		"worldScreen:OnContainerButtonClick(3)"
		actionAlt	"showContainerItemDescription(3)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 232 110 87 87
		bam STONSLOT
		tooltip lua	"getContainerItemProperty(4,'name')"
		tint lua	"getContainerItemProperty(4,'tint')"
		icon lua	"getContainerItemProperty(4,'icon')"
		count lua	"getContainerItemProperty(4,'count')"
		usages lua	"getContainerItemProperty(4,'usages')"
		action		"worldScreen:OnContainerButtonClick(4)"
		actionAlt	"showContainerItemDescription(4)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 319 110 87 87
		bam STONSLOT
		tooltip lua	"getContainerItemProperty(5,'name')"
		tint lua	"getContainerItemProperty(5,'tint')"
		icon lua	"getContainerItemProperty(5,'icon')"
		count lua	"getContainerItemProperty(5,'count')"
		usages lua	"getContainerItemProperty(5,'usages')"
		action		"worldScreen:OnContainerButtonClick(5)"
		actionAlt	"showContainerItemDescription(5)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 412 20 88 90
		enabled "worldScreen:ContainerScrollEnabled(-1)"
		--bam guisv10
		bam		RGPJBUT
		sequence	3
		ScaleToClip
		action
		"
			worldScreen:OnContainerScroll(-1)
		"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 412 110 88 87
		enabled "worldScreen:ContainerScrollEnabled(1)"
		--bam guisv10
		bam		RGPJBUT
		sequence	4
		ScaleToClip
		action
		"
			worldScreen:OnContainerScroll(1)
		"
		actionScroll "scrollContainerItems()"
	}
	label
	{
		area 524 62 88 88
		bam rgpcont
		sequence 2
	}
	label
	{
		area 524 20 96 177
		encumbrance
	}
	button
	{
		area 620 16 184 188
		actionScroll "scrollGroupItems()"
	}
	button
	{
		area 626 23 87 87
		bam STONSLOT
		tooltip lua	"getGroupItemProperty(0,'name')"
		tint lua	"getGroupItemProperty(0,'tint')"
		icon lua	"getGroupItemProperty(0,'icon')"
		count lua	"getGroupItemProperty(0,'count')"
		usages lua	"getGroupItemProperty(0,'usages')"
		action		"worldScreen:OnContainerButtonClick(10)"
		actionAlt	"showGroupItemDescription(0)"
		actionScroll "scrollGroupItems()"
	}
	button
	{
		area 713 23 87 87
		bam STONSLOT
		tooltip lua	"getGroupItemProperty(1,'name')"
		tint lua	"getGroupItemProperty(1,'tint')"
		icon lua	"getGroupItemProperty(1,'icon')"
		count lua	"getGroupItemProperty(1,'count')"
		usages lua	"getGroupItemProperty(1,'usages')"
		action		"worldScreen:OnContainerButtonClick(11)"
		actionAlt	"showGroupItemDescription(1)"
		actionScroll "scrollGroupItems()"
	}
	button
	{
		area 626 110 87 87
		bam STONSLOT
		tooltip lua	"getGroupItemProperty(2,'name')"
		tint lua	"getGroupItemProperty(2,'tint')"
		icon lua	"getGroupItemProperty(2,'icon')"
		count lua	"getGroupItemProperty(2,'count')"
		usages lua	"getGroupItemProperty(2,'usages')"
		action		"worldScreen:OnContainerButtonClick(12)"
		actionAlt	"showGroupItemDescription(2)"
		actionScroll "scrollGroupItems()"
	}
	button
	{
		area 713 110 87 87
		bam STONSLOT
		tooltip lua	"getGroupItemProperty(3,'name')"
		tint lua	"getGroupItemProperty(3,'tint')"
		icon lua	"getGroupItemProperty(3,'icon')"
		count lua	"getGroupItemProperty(3,'count')"
		usages lua	"getGroupItemProperty(3,'usages')"
		action		"worldScreen:OnContainerButtonClick(13)"
		actionAlt	"showGroupItemDescription(3)"
		actionScroll "scrollGroupItems()"
	}
	button
	{
		area 804 20 84 90
		enabled "worldScreen:GroupScrollEnabled(-1)"
		bam		RGPJBUT
		sequence	3
		ScaleToClip
		action
		"
			worldScreen:OnGroupScroll(-1)
		"
		actionScroll "scrollGroupItems()"
	}
	button
	{
		area 804 110 84 87
		enabled "worldScreen:GroupScrollEnabled(1)"
		bam		RGPJBUT
		sequence	4
		ScaleToClip
		action
		"
			worldScreen:OnGroupScroll(1)
		"
		actionScroll "scrollGroupItems()"
	}
	label
	{
		area 896 62 88 88
		bam rgpcont
		sequence 1
	}
	label
	{
		area 896 150 94 54
		text lua "game:GetPartyGold()"
		text style "rg_trajan"
		text color 	'$'
		text point 9
		align center center
	}
	button
	{
		area 40 110 87 87
		bam rgpguils
		sequence 14
		action
		"
			worldScreen:TakeAllFromContainer()
		"
	}
}
`
	function getSlotContainerId(index)
		local idxScrolled = index + worldScreen:GetTopGroundItem()
		if(loot.groundItems[idxScrolled] == nil) then
			return nil
		end
		return loot.groundItems[idxScrolled].containerId
	end
	function getGroundItemProperty(index, property)
		local idxScrolled = index + worldScreen:GetTopGroundItem()
		if(loot.groundItems[idxScrolled] == nil or loot.groundItems[idxScrolled].item == nil) then
			return nil
		end
		return loot.groundItems[idxScrolled].item[property]
	end
	
	function groundItemClick(slotId)
		local slot = loot.groundItems[slotId + worldScreen:GetTopGroundItem()]
			if(slot and slot.item) then
				worldScreen:OnGroundButtonClick(slot.slotId, slot.containerId, slot.item.res)
		end
	end
	
	function showGroundItemDescription(slotId)
		local slot = loot.groundItems[slotId + worldScreen:GetTopGroundItem()]
			if(slot and slot.item) then
				Infinity_GetGroundItemDescription(slotId + worldScreen:GetTopGroundItem(), slot.slotId, slot.containerId)
				showItemDescription(slot.item, 2)
		end
	end
`
menu
{
	name 'WORLD_QUICKLOOT'
	align left top
	ignoreEsc
	onOpen
	"
		local w, h = Infinity_GetScreenSize()
		if (rgIsUltraWide() == false) then
			Infinity_SetOffset('WORLD_QUICKLOOT',185, 0)
		else
			Infinity_SetOffset('WORLD_QUICKLOOT',0, 0)
		end
	"
	
	
	button
	{
		area 928 7 74 74
		bam rgpswtch
		ScaleToClip
		sequence 0
		enabled "worldScreen:GroundScrollEnabled(-1) or worldScreen:GroundScrollEnabled(1)"
		action
		"
			worldScreen:OnGroundScroll(-1)
		"
	}
	button
	{
		area 1003 7 74 74
		bam rgpswtch
		ScaleToClip
		sequence 1
		enabled "worldScreen:GroundScrollEnabled(-1) or worldScreen:GroundScrollEnabled(1)"
		action
		"
			worldScreen:OnGroundScroll(1)
		"
	}
	button
	{
		area 178 7 74 74
		bam stonslot
		ScaleToClip
		enabled "getSlotContainerId(0)"
		tooltip lua	"getGroundItemProperty(0,'name')"
		tint lua	"getGroundItemProperty(0,'tint')"
		icon lua	"getGroundItemProperty(0,'icon')"
		count lua	"getGroundItemProperty(0,'count')"
		usages lua	"getGroundItemProperty(0,'usages')"
		action "groundItemClick(0)"
		actionAlt "showGroundItemDescription(0)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(0,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 253 7 74 74
		bam stonslot
		ScaleToClip
		enabled "getSlotContainerId(1)"
		tooltip lua	"getGroundItemProperty(1,'name')"
		tint lua	"getGroundItemProperty(1,'tint')"
		icon lua	"getGroundItemProperty(1,'icon')"
		count lua	"getGroundItemProperty(1,'count')"
		usages lua	"getGroundItemProperty(1,'usages')"
		action "groundItemClick(1)"
		actionAlt "showGroundItemDescription(1)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(1,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 328 7 74 74
		bam stonslot
		ScaleToClip
		enabled "getSlotContainerId(2)"
		tooltip lua	"getGroundItemProperty(2,'name')"
		tint lua	"getGroundItemProperty(2,'tint')"
		icon lua	"getGroundItemProperty(2,'icon')"
		count lua	"getGroundItemProperty(2,'count')"
		usages lua	"getGroundItemProperty(2,'usages')"
		action "groundItemClick(2)"
		actionAlt "showGroundItemDescription(2)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(2,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 403 7 74 74
		bam stonslot
		ScaleToClip
		enabled "getSlotContainerId(3)"
		tooltip lua	"getGroundItemProperty(3,'name')"
		tint lua	"getGroundItemProperty(3,'tint')"
		icon lua	"getGroundItemProperty(3,'icon')"
		count lua	"getGroundItemProperty(3,'count')"
		usages lua	"getGroundItemProperty(3,'usages')"
		action "groundItemClick(3)"
		actionAlt "showGroundItemDescription(3)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(3,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 478 7 74 74
		bam stonslot
		ScaleToClip
		enabled "getSlotContainerId(4)"
		tooltip lua	"getGroundItemProperty(4,'name')"
		tint lua	"getGroundItemProperty(4,'tint')"
		icon lua	"getGroundItemProperty(4,'icon')"
		count lua	"getGroundItemProperty(4,'count')"
		usages lua	"getGroundItemProperty(4,'usages')"
		action "groundItemClick(4)"
		actionAlt "showGroundItemDescription(4)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(4,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 553 7 74 74
		bam stonslot
		ScaleToClip
		enabled "getSlotContainerId(5)"
		tooltip lua	"getGroundItemProperty(5,'name')"
		tint lua	"getGroundItemProperty(5,'tint')"
		icon lua	"getGroundItemProperty(5,'icon')"
		count lua	"getGroundItemProperty(5,'count')"
		usages lua	"getGroundItemProperty(5,'usages')"
		action "groundItemClick(5)"
		actionAlt "showGroundItemDescription(5)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(5,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 628 7 74 74
		bam stonslot
		ScaleToClip
		enabled "getSlotContainerId(6)"
		tooltip lua	"getGroundItemProperty(6,'name')"
		tint lua	"getGroundItemProperty(6,'tint')"
		icon lua	"getGroundItemProperty(6,'icon')"
		count lua	"getGroundItemProperty(6,'count')"
		usages lua	"getGroundItemProperty(6,'usages')"
		action "groundItemClick(6)"
		actionAlt "showGroundItemDescription(6)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(6,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 703 7 74 74
		bam stonslot
		ScaleToClip
		enabled "getSlotContainerId(7)"
		tooltip lua	"getGroundItemProperty(7,'name')"
		tint lua	"getGroundItemProperty(7,'tint')"
		icon lua	"getGroundItemProperty(7,'icon')"
		count lua	"getGroundItemProperty(7,'count')"
		usages lua	"getGroundItemProperty(7,'usages')"
		action "groundItemClick(7)"
		actionAlt "showGroundItemDescription(7)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(7,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 778 7 74 74
		bam stonslot
		ScaleToClip
		enabled "getSlotContainerId(8)"
		tooltip lua	"getGroundItemProperty(8,'name')"
		tint lua	"getGroundItemProperty(8,'tint')"
		icon lua	"getGroundItemProperty(8,'icon')"
		count lua	"getGroundItemProperty(8,'count')"
		usages lua	"getGroundItemProperty(8,'usages')"
		action "groundItemClick(8)"
		actionAlt "showGroundItemDescription(8)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(8,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 853 7 74 74
		bam stonslot
		ScaleToClip
		enabled "getSlotContainerId(9)"
		tooltip lua	"getGroundItemProperty(9,'name')"
		tint lua	"getGroundItemProperty(9,'tint')"
		icon lua	"getGroundItemProperty(9,'icon')"
		count lua	"getGroundItemProperty(9,'count')"
		usages lua	"getGroundItemProperty(9,'usages')"
		action "groundItemClick(9)"
		actionAlt "showGroundItemDescription(9)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(9,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}	
	
}
menu
{
	name 'WORLD_PICKPARTY'
	modal
	align center bottom
	ignoreEsc
	label
	{
		area 0 0 1000 200
		bam rgpcont
		ScaleToClip
	}
	label
	{
		area 15 14 496 44
		text "REMOVE_MEMBERS_LABEL"
		text style "rg_trajan"
		align left center
	}
	button
	{
		area 28 72 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(0)"
		glow lua "worldScreen:GetPickPartyCharacterId(0) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(0)
		"
	}
	button
	{
		area 100 72 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(1)"
		glow lua "worldScreen:GetPickPartyCharacterId(1) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(1)
		"
	}
	button
	{
		area 170 72 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(2)"
		glow lua "worldScreen:GetPickPartyCharacterId(2) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(2)
		"
	}
	button
	{
		area 240 72 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(3)"
		glow lua "worldScreen:GetPickPartyCharacterId(3) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(3)
		"
	}
	button
	{
		area 310 72 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(4)"
		glow lua "worldScreen:GetPickPartyCharacterId(4) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(4)
		"
	}
	button
	{
		area 380 72 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(5)"
		glow lua "worldScreen:GetPickPartyCharacterId(5) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(5)
		"
	}
	button
	{
		area 450 72 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(6)"
		glow lua "worldScreen:GetPickPartyCharacterId(6) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(6)
		"
	}
	label
	{
		area 524 14 108 48
		text lua "game:GetCharacterOverflowCount()"
		text style "normal"
		align center center
	}
	button
	{
		area 638 22 342 70
		bam RGPBUT1
		ScaleToClip
		text "REMOVE_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		clickable lua "worldScreen:IsPickPartyRemoveButtonClickable()"
		action
		"
			popup2Button(17518, 'REMOVE_BUTTON', function() worldScreen:RemoveCharacterFromParty() end)
		"
	}
	button
	{
		area 638 108 342 70
		bam RGPBUT1
		ScaleToClip
		text "DONE_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		clickable lua "worldScreen:IsPickPartyDoneButtonClickable()"
		on esc
		action
		"
			worldScreen:OnPickPartyDoneButtonClick()
		"
	}
}
`
currentSave = 0
function saveHighlightEnabled(slot)
	return gameSaves.files[slot].hasScreenShot and slot == currentSave
end
`

menu
{
	name 'LOAD'
	align center center
	ignoreEsc

	button
	{
		area	0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
		action 
		"
			currentSave = nil
		"
	}
	label
	{
		area 1136 12 224 56
		text "LOAD_TITLE"
		text style "rg_trajan"
		text align center center
		text color '$'
	}
	
	list
	{
		column 
		{ 
			width	100
			--label
			--{
			--	enabled		"saveHighlightEnabled(rowNumber)"
			--	area 		17,0,928,-1
			--	mosaic 		'GUISAVEC'
			--	respectClipping 
			--	glow lua 	"rowNumber == currentSave"
			--	align		center center
			--}
			label
			{
				area 		0 0 152 120
				bam rgplbcg
				Frame 0
				glow lua 	"rowNumber == currentSave"
			}
			label
			{
				area 		151 0 934 120
				bam rgplbcg
				Frame 1
				glow lua 	"rowNumber == currentSave"
			}
			button
			{
				enabled		"gameSaves.files[rowNumber].hasScreenShot"
				area		5 7 142 106
				bitmap res 	"gameSaves.files[rowNumber].screenshot"
				bitmap area	0 0 142 106
				align		center center
			}

			label
			{
				area	480 20 580 40
				text	lua "gameSaves.files[rowNumber].slotName"
				text style "rg_trajan"
				align	left center
				text color '$'
			}
	
			label
			{
				area	480 65 580 30
				text	lua "gameSaves.files[rowNumber].chapter .. ' ' .. gameSaves.files[rowNumber].time"
				text style "rg_trajan"
				align	left center
				--pad		0 0 -200 0				
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait0"
				area	159 28 43 66 
				bitmap res "gameSaves.files[rowNumber].portrait0"
				bitmap area	0 0 43 66 
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait1"
				area	207 28 43 66 
				bitmap res "gameSaves.files[rowNumber].portrait1"
				bitmap area	0 0 43 66  
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait2"
				area	255 28 43 66 
				bitmap res "gameSaves.files[rowNumber].portrait2"
				bitmap area	0 0 43 66  
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait3"
				area	303 28 43 66 
				bitmap res "gameSaves.files[rowNumber].portrait3"
				bitmap area	0 0 43 66  
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait4"
				area	351 28 43 66 
				bitmap res "gameSaves.files[rowNumber].portrait4"
				bitmap area	0 0 43 66 
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait5"
				area	399 28 43 66 
				bitmap res "gameSaves.files[rowNumber].portrait5"
				bitmap area	0 0 43 66  
				align	center center
			}
			label
			{
				area	158 5 400 20
				text	lua "gameSaves.files[rowNumber].sName "
				text style "rg_trajan"
				text shadow 1
				align	left center
				text color '$'
				--rowbackground 'GUISAVEB'
			}
		}

		actionDbl
		"
			Infinity_PlaySound('GAM_09')
			loadScreen:LoadGame(gameSaves.files[currentSave].fileName)
		"
		
		area 12 10 1115 750
		rowheight	125
		hidehighlight
		table		"gameSaves.files"
		var		currentSave
		scrollbar	'rgpscrl'
		--rowbackground 'GUISAVEB'
	}

	button
	{
		area		1152 110 190 190
		bam 		RGPBTDIA
		clickable	lua	"currentSave"		
		--text		"LOAD_BUTTON"
		--text style "rg_trajan"
		--text align center center
		sequence 1
		ScaleToClip
		action
		"
			loadScreen:LoadGame(gameSaves.files[currentSave].fileName)
		"
	}
	button
	{
		area		1152 308 190 190
		bam			rgpbtdel
		clickable	lua	"currentSave"
		--text		"DELETE_BUTTON"
		--text style "rg_trajan"
		--text align center center
		ScaleToClip
		action
		"
			popup2Button(15305, 'DELETE_BUTTON',
			 function() loadScreen:DeleteGame(gameSaves.files[currentSave].slotIndex) end)
		"
	}
	button
	{
		area		1152 506 190 190
		bam			RGPBTDIA
		--text		"BACK_BUTTON"
		--text style "rg_trajan"
		--text align center center
		on escape
		ScaleToClip
		action
		"
			loadScreen:OnMainCancelButtonClick()
		"
	}
}
`
	function compareSaves(s1,s2)
		--return true if s1 comes before s2
		--show the most recent saves first
		return s1.fileTime > s2.fileTime
	end
	function sortSaves()
		table.sort(gameSaves.files,compareSaves)
	end
`
menu
{
	name 'SAVE'
	align center center
	ignoreEsc
	onOpen "Infinity_SetBackground('BACKGROUND')"
	label
	{
		area	0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
		action 
		"
			currentSave = nil
		"
	}
	label
	{
		area 1136 12 224 56
		text "SAVE_TITLE"
		text style "rg_trajan"
		text align center center
		text color '$'
	}

	list
	{
		column 
		{ 
			width	100
			label
			{
				--enabled		"saveHighlightEnabled(rowNumber)"
				area 		0 0 152 120
				bam rgplbcg
				Frame 0
				glow lua 	"rowNumber == currentSave"
			}
			label
			{
				--enabled		"saveHighlightEnabled(rowNumber)"
				area 		151 0 934 120
				bam rgplbcg
				Frame 1
				glow lua 	"rowNumber == currentSave"
			}
			button
			{
				enabled		"gameSaves.files[rowNumber].hasScreenShot"
				area		5 7 142 106
				bitmap res 	"gameSaves.files[rowNumber].screenshot"
				bitmap area	0 0 142 106
				align		center center
			}

			label
			{
				area	480 20 580 40
				text	lua "gameSaves.files[rowNumber].slotName"
				text style "rg_trajan"
				align	left center
				text color '$'
			}
	
			label
			{
				area	480 65 580 30
				text	lua "gameSaves.files[rowNumber].chapter .. ' ' .. gameSaves.files[rowNumber].time"
				text style "rg_trajan"
				align	left center
				--pad		0 0 -200 0				
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait0"
				area	159 28 43 66 
				bitmap res "gameSaves.files[rowNumber].portrait0"
				bitmap area	0 0 43 66 
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait1"
				area	207 28 43 66 
				bitmap res "gameSaves.files[rowNumber].portrait1"
				bitmap area	0 0 43 66  
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait2"
				area	255 28 43 66 
				bitmap res "gameSaves.files[rowNumber].portrait2"
				bitmap area	0 0 43 66  
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait3"
				area	303 28 43 66 
				bitmap res "gameSaves.files[rowNumber].portrait3"
				bitmap area	0 0 43 66  
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait4"
				area	351 28 43 66 
				bitmap res "gameSaves.files[rowNumber].portrait4"
				bitmap area	0 0 43 66 
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait5"
				area	399 28 43 66 
				bitmap res "gameSaves.files[rowNumber].portrait5"
				bitmap area	0 0 43 66  
				align	center center
			}
			label
			{
				area	158 5 400 20
				text	lua "gameSaves.files[rowNumber].sName "
				text style "rg_trajan"
				text shadow 1
				align	left center
				text color '$'
				--rowbackground 'GUISAVEB'
			}
			--button
			--{
			--	area		35 88 237 50
			--	bam 		GUIOSTLR
			--	frame lua 	"currentCellCheck(2)"
			--	glow lua 	"rowNumber == currentSave"
			--	sequence 	0
			--	text		"SAVE_BUTTON"
			--	text style	"button"
			--}
		}
		--column 
		--{ 
		--	width	30
		--	label
		--	{
		--		enabled		"saveHighlightEnabled(rowNumber)"
		--		area 		-663,0,928,-1
		--		mosaic 		'GUISAVEC'
		--		respectClipping 
		--		glow lua 	"rowNumber == currentSave"
		--		align		center center
		--	}
		--	label
		--	{
		--		area	33 8 237 100
		--		text	lua "gameSaves.files[rowNumber].sName "
		--		text style "label"
		--		align	center center
		--	}
		--	label
		--	{
		--		area		35 88 237 50
		--		bam 		GUIOSTLR
		--		frame lua 	"currentCellCheck(2)"
		--		glow lua 	"rowNumber == currentSave"
		--		sequence 	0
		--		text		"SAVE_BUTTON"
		--		text style	"button"
		--	}
		--}

		action 
		"
			if cellNumber == 1 then
				cellNumber = nil
			elseif cellNumber == 2 then
				cellNumber = nil
				Infinity_PlaySound('GAM_09')
				Infinity_PushMenu( 'SAVE_NEWSAVE' );
			end
		"

		actionDbl
		"
			Infinity_PlaySound('GAM_09')
			Infinity_PushMenu( 'SAVE_NEWSAVE' );
		"
		
		area 12 146 1115 614
		rowheight	125
		table		"gameSaves.files"
		hidehighlight
		var		currentSave
		scrollbar	'rgpscrl'
		--rowbackground 	'GUISAVEB'
	}
	--button 
	--{
	--	area	47 126 948 148
	--	mosaic		GUISAVEB
	--}
	
	text
	{
		area 		12 8 152 120
		bam rgplbcg
		Frame 0
		glow lua 	"rowNumber == currentSave"
	}
	text
	{
		area 		163 8 934 120
		bam rgplbcg
		Frame 1
		glow lua 	"rowNumber == currentSave"
	}
	label
	{
		area	490 20 448 40
		text	'NEW_SAVE_LABEL'
		text style "rg_trajan"
		align	left center
		text color '$'
	}
	button
	{
		area	490 64 448 50
		bam		RGPBUT1
		text		"SAVE_BUTTON"
		text style	"rg_trajan"
		pad 30 5 30 5
		align	center center
		ScaleToClip
		action
		"
			--saveScreen:SaveGame(#saveFiles, 'Test Save ' .. #saveFiles)
			currentSave = 0
			Infinity_PushMenu( 'SAVE_NEWSAVE' );
		"
	}

	button
	{
		area	1152 110 190 190
		bam			RGPBTDIA
		sequence 1
		ScaleToClip
		action
		"
			Infinity_PlaySound('GAM_09')
			Infinity_PushMenu( 'SAVE_NEWSAVE' );
		"
	}
	button
	{
		area		1152 308 190 190
		bam			rgpbtdel
		clickable	lua	"currentSave"
		--text		"DELETE_BUTTON"
		--text style "rg_trajan"
		--text align center center
		ScaleToClip
		action
		"
			popup2Button(15305, 'DELETE_BUTTON',
			 function() saveScreen:DeleteGame(gameSaves.files[currentSave].slotIndex) end)
		"
	}
	button
	{
		area		1152 506 190 190
		bam			RGPBTDIA
		--text		"BACK_BUTTON"
		--text style "rg_trajan"
		--text align center center
		on escape
		ScaleToClip
		action
		"
			loadScreen:OnMainCancelButtonClick()
		"
	}
}
`
	newSaveName = ''
	function completeSave()
		Infinity_Log('not overwrite')
		Infinity_PopMenu('SAVE_NEWSAVE')
		saveScreen:SaveGame(#gameSaves.files, newSaveName)
	end
	function completeOverwrite()
		Infinity_Log('overwrite')
		Infinity_PopMenu('SAVE_NEWSAVE')
		saveScreen:SaveGame(gameSaves.files[currentSave].slotIndex,newSaveName)
	end

`
menu
{
	name 'SAVE_NEWSAVE'
	align center top
	offset 0 50
	modal
	onOpen
	"
		bitmapbools = 
		{
			hasScreenShot = 0,
			hasPortrait0 = 0,
			hasPortrait1 = 0,
			hasPortrait2 = 0,
			hasPortrait3 = 0,
			hasPortrait4 = 0,
			hasPortrait5 = 0,
		}
		newSaveName = ''
		if currentSave ~= 0 then
			newSaveName = gameSaves.files[currentSave].slotName
			bitmapbools = 
			{
			hasScreenShot = gameSaves.files[currentSave].hasScreenShot,
			hasPortrait0 = gameSaves.files[currentSave].hasPortrait0,
			hasPortrait1 = gameSaves.files[currentSave].hasPortrait1,
			hasPortrait2 = gameSaves.files[currentSave].hasPortrait2,
			hasPortrait3 = gameSaves.files[currentSave].hasPortrait3,
			hasPortrait4 = gameSaves.files[currentSave].hasPortrait4,
			hasPortrait5 = gameSaves.files[currentSave].hasPortrait5,
			}
		end
		Infinity_FocusTextEdit('newSaveNameArea')

	"
	label
	{
		area	0 0 1000 280
		bam rgpcont
		ScaleToClip
	}
	label
	{
		name        "newSaveNameArea"
		area		204 14 472 34
		text		"ENTER_SAVE_LABEL"
		text style 	"rg_trajan"
		text align 	left center
	}
	edit
	{
		name 		"newSaveNameArea"
		area		204 56 472 38
		var			newSaveName	
		text style	"edit"
		maxlines	1
		fill        112 111 111 64
		action
		"
			--On return pressed
			if (key_pressed == 13) then
				Infinity_FocusTextEdit('')
				if(currentSave ~= 0) then
					completeOverwrite()
				else
					completeSave()
				end
				return -1
			end
			return 1
		"
	}
	label
	{
		area 		20 24 174 146
		bam rgplbcg
		ScaleToClip
	}
	label
	{
		area	204 204 472 34
		text	lua "gameSaves.currentGameInfo.chapter .. ' ' .. gameSaves.currentGameInfo.time"
		text style "rg_trajan"
		text align left center
	}
	button
	{
		enabled		 "bitmapbools.hasScreenShot"
		area	26 32 162 130
		bitmap res "gameSaves.files[currentSave].screenshot"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait0"
		area	204 100 60 94
		bitmap res "gameSaves.files[currentSave].portrait0"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait1"
		area	272 100 60 94
		bitmap res "gameSaves.files[currentSave].portrait1"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait2"
		area	340 100 60 94
		bitmap res "gameSaves.files[currentSave].portrait2"	
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait3"
		area	408 100 60 94
		bitmap res "gameSaves.files[currentSave].portrait3"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait4"
		area	476 100 60 94
		bitmap res "gameSaves.files[currentSave].portrait4"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait5"
		area	544 100 60 94
		bitmap res "gameSaves.files[currentSave].portrait5"
		align	center center
	}
	button
	{
		enabled 	"currentSave == 0"
		area	684 48 302 86
		bam		RGPBUT1
		text	"SAVE_BUTTON"
		text style	"rg_trajan"
		pad 30 5 30 5
		text point 10
		align	center center
		ScaleToClip
		action
		"
			completeSave()
		"
	}
	button
	{
		enabled	currentSave
		area	684 48 302 86
		bam		RGPBUT1
		text	"OVERWRITE_BUTTON"
		text style	"rg_trajan"
		pad 30 5 30 5
		text point 10
		align	center center
		ScaleToClip
		action
		"
			completeOverwrite()
		"
	}
	button
	{
		area	684 152 302 86
		bam		RGPBUT1
		text	"CANCEL_BUTTON"
		text style	"rg_trajan"
		pad 30 5 30 5
		text point 10
		align	center center
		ScaleToClip
		action
		"
			Infinity_PopMenu('SAVE_NEWSAVE')			
		"
	}
}
`
 worldMessageBoxText = ""
 worldMessageBoxLines = 0
 worldMessageBoxClickedOnce = 0
 function dragMessagesY(newY)
	setMessagesY(newY)
	worldMessageBoxClickedOnce = 1
 end
function clampMessageBoxHeight(hNew, hOld)
		if(hNew <= 64) then
			--lower bound on height, sliced rects can't get too small and we don't want to make the message box invisible.
			return hOld - 64
		end
		if(hNew >= 500) then
			--also don't go too high because it looks bad.
			return hOld - 500
		end
		return hOld - hNew
end
 function setMessagesY(newY)
		local x,y,w,hOld = Infinity_GetArea('messagesRect')
		h = hOld - newY
		newY = clampMessageBoxHeight(h,hOld)
		
		adjustItemGroup({"messagesHandleY"},0,newY,0,0)
		adjustItemGroup({"messagesRect","worldMessageBox"},0,newY,0,-newY)
		
		toolbarTop = toolbarTop - newY
		Infinity_SetOffset('WORLD_QUICKLOOT',0, -toolbarTop)
		
		chatboxScrollToBottom = 1
		worldMessageBoxTop = y + newY
 end
function getLastMessageBoxWidth()
		local x,y,w,h = Infinity_GetArea('worldLastMessageBox')
		--local tableEntry = combatLog[rowNumber]
		--local delta = Infinity_GetContentHeight(styles.normal.font, w, tableEntry.text, styles.normal.point, 1, styles.normal.useFontZoom) --1 for indent.
		
		local textOutput = combatLog[rowNumber]
		local test = string.len(textOutput)
		if test >= 80 then
			test = 80
		end

		if string.find(textOutput, rgGetGameEngineString(24354,24354,16322,16322)) then
			textOutput = '^R' .. rgGetGameEngineString(24354,24354,16322,16322)
			test = 30
		elseif string.find(textOutput, rgGetGameEngineString(24355,24355,16321,16321)) then
			textOutput = '^R' .. rgGetGameEngineString(24355,24355,16321,16321)
			test = 25
		end
		
		if string.find(textOutput, rgGetGameEngineString(17574,17574,17574,17574)) then --party gained experience exception
			test = 70
		end
		
		--test = 60
		
		local delta = Infinity_GetContentHeight(styles.normal.font, 300, textOutput, styles.normal.point, 1, styles.normal.useFontZoom)
		local screenWidth, screenHeight = Infinity_GetScreenSize()
		if delta > 19 then
			Infinity_SetArea('worldLastMessageBox',nil,screenHeight-178,test*10,80)
		else
			Infinity_SetArea('worldLastMessageBox',nil,screenHeight-138,test*10,40)
		end
		
		return textOutput
end
function getMessageBoxTextWithoutPauseInfo()
		
		local textOutput = combatLog[rowNumber]
		
		if string.find(textOutput, rgGetGameEngineString(24354,24354,16322,16322)) then
			textOutput = '^R' .. rgGetGameEngineString(24354,24354,16322,16322)
		elseif string.find(textOutput, rgGetGameEngineString(24355,24355,16321,16321)) then
			textOutput = '^R' .. rgGetGameEngineString(24355,24355,16321,16321)
		end
		
		return textOutput
end
function getMessageBoxArea()
	local x,y,w,h = Infinity_GetArea('messagesRect')
	local screenWidth, screenHeight = Infinity_GetScreenSize()
	local rgofset = 99
	if rgIsUltraWide() == false then
		rgofset = 10
	end
	
	if (x == screenWidth+5 or x == 2000) then
		Infinity_SetArea('messagesRect',5,rgofset-7,351,583+(99-rgofset))
		Infinity_SetArea('worldMessageBox',16,rgofset,334,569+(99-rgofset))
		Infinity_SetArea('worldLastMessageBox',screenWidth+5,nil,nil,nil)
	else
		Infinity_SetArea('messagesRect',screenWidth+5,rgofset-7,351,583+(99-rgofset))
		Infinity_SetArea('worldMessageBox',screenWidth+5,rgofset,334,569+(99-rgofset))
		Infinity_SetArea('worldLastMessageBox',5,screenHeight-138,nil,nil)
	end
end

 
`
menu
{
	name 'WORLD_MESSAGES'
	align left top
	ignoreEsc
	onOpen
	"
		--Infinity_SetOffset('WORLD_MESSAGES', 0, -toolbarTop)
		--local x,y,w,h = Infinity_GetArea('messagesRect')
		--toolbarTop = toolbarTop + h
		--setMessagesY(worldMessageBoxTop - y)	
		local w, h = Infinity_GetScreenSize()
		Infinity_SetArea('rgOpenMessagesWide',nil,h - 91,nil,nil)
		Infinity_SetArea('rgGroundItemsWide',nil,h-91,nil,nil)
	"
	onClose
	"
		--local x,y,w,h = Infinity_GetArea('messagesRect')
		--toolbarTop = toolbarTop - h
	"
	label
	{
		name 'messagesRect'
		area 2000 92 351 583
		bam rgpmess
		ScaleToClip
	}
	--button
	--{
	--	area 28 152 816 80
	--	on pageup
	--	action
	--	"
	--		dragMessagesY(-20)
	--	"
	--}
	--button
	--{
	-- 	area 28 152 816 80
	--	on pagedown
	--	action
	--	"
	--		dragMessagesY(20)
	--	"
	--}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 334 -1
					text lua "getMessageBoxTextWithoutPauseInfo()"
					text style "gamelog"
			}
		}
		name "worldMessageBox"
		area 2000 99 334 569
		rowheight dynamic
		table "combatLog"
		hideHighlight
		scrollbar	'rgpscrl'
		scrollbar func "chatboxScroll"
		scrollbar skipReset
	}
	--handle
	--{
	--	name 'messagesHandleY'
	--	area 0 0 863 22
	--	pulse lua "worldMessageBoxClickedOnce == 0"
	--	actionDrag
	--	"
	--		dragMessagesY(motionY)
	--	"
	--}
	text
	{
		name 'worldLastMessageBox'
		area 5 630 410 40
		text lua "getLastMessageBoxWidth()"
		text style "normal"
		text point 12
		text shadow 1
		scrollbar	'rgpempty'
		--scrollbar hide lua "1"
		bam rgpwmes
		ScaleToClip
	}
	button
	{
		name "rgOpenMessages"
	 	area 3 3 87 87
		bam rgpguils
		enabled "rgIsUltraWide()"
		sequence 15
		action
		"
			--Infinity_SetArea('messagesRect',5,nil,nil,nil)
			--Infinity_SetArea('worldMessageBox',16,nil,nil,nil)
			getMessageBoxArea()
		"
	}
	
	button
	{
	 	area 90 3 87 87
		bam rgpguils
		enabled "rgIsUltraWide()"
		sequence 14
		toggle groundItemsButtonToggle
		action
		"
			if(groundItemsButtonToggle == 1) then
				worldScreen:StartGroundItems()
			else
				worldScreen:StopGroundItems()
			end
		"
		actionAlt
		"
			if(groundItemsButtonToggle == 1) then
				worldScreen:StartGroundItems()
			else
				worldScreen:StopGroundItems()
			end
		"
	}
	
	button
	{
		name "rgOpenMessagesWide"
	 	area 3 677 87 87
		bam rgpguils
		enabled "rgIsUltraWide() == false"
		sequence 15
		action
		"
			getMessageBoxArea()
		"
	}
	
	button
	{
		name "rgGroundItemsWide"
	 	area 90 677 87 87
		bam rgpguils
		enabled "rgIsUltraWide() == false"
		sequence 14
		toggle groundItemsButtonToggle
		action
		"
			if(groundItemsButtonToggle == 1) then
				worldScreen:StartGroundItems()
			else
				worldScreen:StopGroundItems()
			end
		"
		actionAlt
		"
			if(groundItemsButtonToggle == 1) then
				worldScreen:StartGroundItems()
			else
				worldScreen:StopGroundItems()
			end
		"
	}
}
`
	worldNPCDialogText = ""
	worldPlayerDialogChoices = {}
	glowTest = nil
	startingDialogHeight = 0

	function dialogEntryGreyed()
		return not worldScreen:GetInControlOfDialog()
	end

	function getDesiredDialogHeight()
		--get npc area
		local npcX,npcY,npcW,npcH = Infinity_GetArea('worldNPCDialog')
		
		--get dialog choices height
		local choicesHeight = Infinity_GetListHeight('worldPlayerDialogChoicesList')

		return (20 + choicesHeight + npcH + 20)
	end

	function getCurrentDialogHeight()
		local x,y,w,contentHeight = Infinity_GetArea('worldDialogBackground')
		
		if(showWorldMessages == 1) then
			--Don't include the height of the message log (and its offset) if its active
			local xM,yM,wM,hM = Infinity_GetArea('worldDialogMessageBox')
			contentHeight = contentHeight - y
		end

		return contentHeight
	end

	function resizeDialog()
		buildResponsesList()
		--fit the npc text area to the text height.
		Infinity_ScaleToText("worldNPCDialog")
		
		--get npc area
		local npcX,npcY,npcW,npcH = Infinity_GetArea('worldNPCDialog')
		
		--if(npcH > 250) then
		--	--limit the npc text height to 250
		--	npcH = 250
		--	Infinity_SetArea('worldNPCDialog',nil,nil,nil,npcH)
		--end	
		
		--Get available height to work in
		local contentHeight = getCurrentDialogHeight()

		local desiredHeight = getDesiredDialogHeight()
		
		--make enough room for the choices and dialog
		if(contentHeight < desiredHeight) then
			resizeDialogContent(contentHeight - desiredHeight)
		else

			--resize the choices list based on the dialog height
			 cH = contentHeight - npcH - npcY - 32
			 cY = npcY + npcH + 16
			
			if cH > 50 then
				--set the new list area.
				Infinity_SetArea('worldPlayerDialogChoicesList',nil,cY,nil,cH)
			else
				local heightDifference = 50 - cH
				cY = cY - heightDifference
				cH = cH + heightDifference
				Infinity_SetArea('worldPlayerDialogChoicesList',nil,cY,nil,cH)

				npcH = npcH - heightDifference
				Infinity_SetArea('worldNPCDialog',nil,nil,nil,npcH)
			end
		end
		
	end
	function resizeDialogContent(newY)
		local x,y,w,hOld = Infinity_GetArea('worldDialogBackground')
		local h = hOld - newY
		
		local contentHeight = getCurrentDialogHeight() - newY
		
		if(contentHeight <= 150) then
			--lower bound on height, should leave plenty of room for portrait.
			-- also don't push our toolbar top out of view.
			return
		end
		if(contentHeight >= 740) then
			-- upper bound as well because too high looks bad.
			return
		end
		
		y = y + newY
		Infinity_SetArea('worldDialogBackground',x,y,w,h)
		
		adjustItemGroup({'dialogHandleY', 'worldNPCDialog', 'worldDialogShowMessagesButton', 'worldDialogPortraitArea','worldDialogMessageBox','worldDialogMessageDivider'},0,newY,0,0)
		
		toolbarTop = toolbarTop - newY
		
		resizeDialog()
	end
	function dragDialogMessagesY(newY)
		local x,y,w,hOld = Infinity_GetArea('worldDialogMessageBox')
		local h = hOld - newY
		newY = clampMessageBoxHeight(h,hOld)
		
		--different behavior if the message log is visible.
		adjustItemGroup({'dialogHandleY','worldDialogShowMessagesButton'},0,newY,0,0)
		adjustItemGroup({'worldDialogBackground','worldDialogMessageBox'},0,newY,0,-newY)
		toolbarTop = toolbarTop - newY
		return
	end
	function showMessagesButtonFrame()
		if(showWorldMessages == 1) then return 1 else return 0 end
	end
	function toggleDialogShowMessages()
		if(showWorldMessages == 1) then 
			showWorldMessages = 0 
		else showWorldMessages = 1 
		end
	end
	
	function getDialogEntryText(row)
		local text = worldPlayerDialogChoices[row].text
		if (row == worldPlayerDialogSelection) then
			--Color the text white when selected
			text = string.gsub(text, "%^0xff212eff", "^0xFFFFFFFF")
		end
		return text
	end
`
menu
{
	name 'WORLD_DIALOG'
	--offset 0 -57
	align center center
	ignoreEsc
	onOpen
	"	
		showWorldMessages = 0
		local x,y,w,h = Infinity_GetArea('worldDialogBackground')
		toolbarTop = toolbarTop + h
		
		Infinity_PushMenu('WORLD_DIALOG_CONFIRM')
		Infinity_PopMenu('RIGHT_SIDEBAR')
		--if(isTouchActionbar() and not dialogViewMode) then
		--	Infinity_PushMenu('WORLD_DIALOG_LEFT')
		--	Infinity_PushMenu('WORLD_DIALOG_RIGHT')
		--end
		greySidebars()
	"
	onClose
	"
		dialogButtonText = ''
		worldNPCDialogPortrait='NONE'
		if groundItemsButtonToggle == 1 then
			Infinity_PushMenu('WORLD_QUICKLOOT')
		end
		
		local x,y,w,h = Infinity_GetArea('worldDialogBackground')
		toolbarTop = toolbarTop - h
		resizeDialogContent(h)
		
		Infinity_PopMenu('WORLD_DIALOG_CONFIRM')
		Infinity_PushMenu('RIGHT_SIDEBAR')
		--Infinity_PopMenu('WORLD_DIALOG_LEFT')
		--Infinity_PopMenu('WORLD_DIALOG_RIGHT')
		ungreySidebars()
	"
	label
	{
		name "worldDialogBackground"
		area 0 0 1337 740
		mosaic RGPDIAL1
	}
	label
	{
		enabled "worldNPCDialogPortrait~='NONE' and worldNPCDialogPortrait~=''"
		area 1117 330 220 12
		bam rgpdipo1
	}
	label
	{
		enabled "worldNPCDialogPortrait~='NONE' and worldNPCDialogPortrait~=''"
		name "worldDialogPortraitAreaBottom"
		area 1126 13 201 316
		bitmap lua "worldNPCDialogPortrait"
	}
	text
	{
		enabled "showWorldMessages == 0"
		name "worldNPCDialog"
		area 24 22 1079 73
		text lua "worldNPCDialogText"
		text style "gamelog"
		scrollbar	'rgpempty'
	}
	text
	{
		name "worldDialogMessageBox"
		enabled "showWorldMessages"
		area 24 22 1079 694
		text lua "worldMessageBoxText"
		text style "gamelog"
		scrollbar	'rgpscrl'
		scrollbar func "chatboxScroll"
	}
	button
	{
		name "worldDialogShowMessagesButton"
		area 1135 348 180 180
		tooltip lua "t('LOG_HISTORY_TOOLTIP')"
		bam rgpdbtms
		--sequence 15
		glow lua "showMessagesButtonFrame()"
		ScaleToClip
		action 
		"
			toggleDialogShowMessages()
		"
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				enabled "dialogEntryGreyed()"
				fill 1 1 1 150
			}
			text
			{
				area 0 0 -1 -1
				text lua "getDialogEntryText(rowNumber)"
				text style "gamelog"
			}
		}
		enabled "showWorldMessages == 0"
		name "worldPlayerDialogChoicesList"
		area 24 111 1079 613
		rowheight dynamic
		hideHighlight
		table "worldPlayerDialogChoices"
		var "worldPlayerDialogSelection"
		scrollbar	'rgpscrl'
		actionEnter
		"
			if(gameOptions.m_bConfirmDialog == true) then return end
			glowTest = mouseoverRow
			worldPlayerDialogSelection = mouseoverRow
		"
		actionExit
		"
			if(gameOptions.m_bConfirmDialog == true) then return end
			glowTest = nil
			worldPlayerDialogSelection = 0
		"
		action
		"
			--In confirm mode, just highlight the choice.
			if(gameOptions.m_bConfirmDialog == true) then return end
			worldScreen:OnDialogReplyClick(worldPlayerDialogChoices[worldPlayerDialogSelection].marker)
			worldPlayerDialogSelection = 0
		"
	}
}
	--label
	--{
	--	area 0 0 1337 740
	--	mosaic RGPDIAL
	--}
	--label
	--{
	--	enabled "worldNPCDialogPortrait~='NONE' and worldNPCDialogPortrait~=''"
	--	area 1092 370 245 12
	--	bam rgpdipor
	--}
	--label
	--{
	--	enabled "worldNPCDialogPortrait~='NONE' and worldNPCDialogPortrait~=''"
	--	name "worldDialogPortraitAreaBottom"
	--	area 1101 13 226 356
	--	bitmap lua "worldNPCDialogPortrait"
	--}
	----button
	----{
	----	area 1151 380 120 120
	----	bam RGPBTDIA
	----	ScaleToClip
	----	sequence 1
	----	action 
	----	"
	----		scrolled = true
	----		scrollToBottom = true
	----	"
	----}
	--
	--list
	--{
	--	column
	--	{
	--		width 100
	--		label
	--		{
	--			area 0 0 -1 1
	--			enabled "rowNumber == 1 and not scrolled"
	--		}
	--		text
	--		{
	--			area 0 0 -1 -1
	--			pad 0 0 0 12
	--			enabled "rowNumber == 2 and scrolled"
	--			text lua "worldMessageBoxText"
	--			text style "gamelog"
	--		}
	--		text
	--		{
	--			area 0 0 -1 -1
	--			pad 0 0 0 12
	--			enabled "rowNumber == 2 and not scrolled"
	--			text lua "worldNPCDialogText:gsub('\n', ': ', 1)"
	--			text style "gamelog"
	--		}
	--		label
	--		{
	--			area 0 0 -1 -1
	--			pad 12 0 0 0
	--			enabled "rowNumber > 2 and dialogEntryGreyed()"
	--			rectangle 1
	--			rectangle opacity 100
	--		}
	--		text
	--		{
	--			area 0 0 -1 -1
	--			pad 12 0 0 0
	--			enabled "rowNumber > 2"
	--			text lua "getDialogEntryText(rowNumber)"
	--			text style "gamelog"
	--		}
	--	}
	--	name "worldPlayerDialogChoicesListBottom"
	--	area 18 22 1064 696
	--	rowheight dynamic
	--	hideHighlight
	--	table "mergeDialog(worldPlayerDialogChoices)"
	--	var "worldPlayerDialogSelection"
	--	scrollbar 'rgpscrl'
	--	scrollbar func "dialogScroll"
	--	actionEnter
	--	"
	--		if(gameOptions.m_bConfirmDialog == true) then return end
	--		glowTest = mouseoverRow
	--		worldPlayerDialogSelection = mouseoverRow
	--	"
	--	actionExit
	--	"
	--		if(gameOptions.m_bConfirmDialog == true) then return end
	--		glowTest = nil
	--		worldPlayerDialogSelection = 0
	--	"
	--	action
	--	"
	--		if (worldPlayerDialogChoices[worldPlayerDialogSelection - 2] == nil) then return end
	--		--In confirm mode, just highlight the choice.
	--		if(gameOptions.m_bConfirmDialog == true) then return end
	--		worldScreen:OnDialogReplyClick(worldPlayerDialogChoices[worldPlayerDialogSelection - 2].marker)
	--		worldPlayerDialogSelection = 0
	--	"
	--	actionAlt
	--	"
	--		scrolled = true
	--		scrollToBottom = true
	--	"
	--	actionDbl
	--	"
	--		scrolled = true
	--		scrollToBottom = true
	--	"
	--}
	

`
function getDialogButtonEnabled()
	if(gameOptions.m_bConfirmDialog == true) then
		return true
	else
		return (#worldPlayerDialogChoices == 0)
	end
end

function rgGetDialogButtonSequence()
	local rgDialogSeq
	if dialogButtonText == rgGetGameEngineString(24148,24148,9371,9371) then
		rgDialogSeq = 0
	else 
		rgDialogSeq = 1
	end
	if dialogButtonText == '' then
		rgDialogSeq = 2
	end
	return rgDialogSeq
end

`
menu
{
	name 'WORLD_DIALOG_CONFIRM'
	offset 558 256
	align center center
	ignoreEsc
	button
	{
		area 0 0 180 180
		bam RGPBTDIA
		sequence lua "rgGetDialogButtonSequence()"
		--text lua "dialogButtonText"
		enabled "getDialogButtonEnabled()"
		--text style "button"
		ScaleToClip
		action 
		"
			if(gameOptions.m_bConfirmDialog == true and (#worldPlayerDialogChoices > 0)) then
				-- if confirm dialog and choices available.
				worldScreen:OnDialogReplyClick(worldPlayerDialogChoices[worldPlayerDialogSelection].marker)
				worldPlayerDialogSelection = 0
			else
				-- no choices, just step.
				worldScreen:StepDialog()
			end
		"
	}
}
	
menu
{
	name 'CHARACTER_SELECT'
	align center center
	onopen "selectedCharacter = 0"
	ignoreesc
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text "IMPORT_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	list
	{
		column
		{
			width 8
			label
			{
				area 0 0 0 100 --hack to force a minimum row height of 100
			}
			label
			{
				area 10 8 54 84
				bitmap lua "character_select[rowNumber].portrait"
			}
		}
		column
		{
			width 92
			label
			{
				area 20 4 -1 -1
				text lua "character_select[rowNumber].name .. '\n' .. character_select[rowNumber].desc" 
				text style "normal"
				text align left top
			}
		}

		area 16 78 1334 582
		rowheight dynamic
		table "character_select"
		var selectedCharacter
		scrollbar GUISCRC
	}
	button
	{
		on escape
		area 18 680 444 82
		bam RGPBUT1
		text "BACK_BUTTON"
		text style "rg_trajan"
		text align center center
		ScaleToClip
		pad 30 5 30 5
		action 
		"
			createCharScreen:OnCancelButtonClick()
			Infinity_PopMenu('CHARACTER_SELECT')
		"
	}
	button
	{
		area 462 680 444 82
		bam RGPBUT1
		text "ACCEPT_BUTTON"
		text style "rg_trajan"
		text align center center
		ScaleToClip
		pad 30 5 30 5
		clickable 0
	}	
	button
	{
		area 906 680 444 82
		text "DONE_BUTTON" 
		text style "rg_trajan"
		text align center center
		ScaleToClip
		pad 30 5 30 5
		bam RGPBUT1
		clickable lua "selectedCharacter ~= 0"
		action 
		"
			Infinity_OnCharacterImportItemSelect(selectedCharacter - 1)
			createCharScreen:OnDoneButtonClick() 
			Infinity_PopMenu('CHARACTER_SELECT')
		"
	}

}

`
chargen = {

	races = {},
	kits = {},

}
function chargenAcceptOrExport()
	if createCharScreen:GetEngineState() == 4 then
		return t("EXPORT_BUTTON")
	else
		return t("ACCEPT_BUTTON")

	end
end


`
menu
{
	name 'CHARGEN'
	align center center
	ignoreesc
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text		"CHARGEN_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	text
	{
		area 610 94 392 648
		text lua "chargen.information"
		scrollbar 'rgpscrl'
		text style "normal"
	}
	label
	{
		area		1040 40 262 406
		bam rgprecbc
		sequence 2
	}
	label
	{
		area 1050 54 242 380
		bitmap lua "chargen.portrait"
	}

	button
	{
		area 22 96 566 66
		bam RGPBUT1
		clickable lua "createCharScreen:GetCurrentStep() == 0"
		glow lua "createCharScreen:GetCurrentStep() == 0"
		text "GENDER_BUTTON"
		text style "rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 22 162 566 66
		bam RGPBUT1
		clickable lua "createCharScreen:GetCurrentStep() == 3"
		glow lua "createCharScreen:GetCurrentStep() == 3"
		text "RACE_BUTTON"
		text style "rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 22 228 566 66
		bam RGPBUT1
		clickable lua "createCharScreen:GetCurrentStep() == 4"
		glow lua "createCharScreen:GetCurrentStep() == 4"
		text "CLASS_BUTTON"
		text style "rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 22 294 566 66
		bam RGPBUT1
		clickable lua "createCharScreen:GetCurrentStep() == 7"
		glow lua "createCharScreen:GetCurrentStep() == 7"
		text "ALIGNMENT_BUTTON"
		text style "rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		action "createCharScreen:OnMenuButtonClick()"
	}

	button
	{
		area 22 360 566 66
		bam RGPBUT1
		clickable lua "createCharScreen:GetCurrentStep() == 8"
		glow lua "createCharScreen:GetCurrentStep() == 8"
		text "ABILITIES_BUTTON"
		text style "rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 22 426 566 66
		bam RGPBUT1
		clickable lua "createCharScreen:GetCurrentStep() == 9"
		glow lua "createCharScreen:GetCurrentStep() == 9"
		text "SKILLS_BUTTON"
		text style "rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 22 492 566 66
		bam RGPBUT1
		clickable lua "createCharScreen:GetCurrentStep() == 15"
		glow lua "createCharScreen:GetCurrentStep() == 15"
		text "APPEARANCE_BUTTON"
		text style "rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 22 558 566 66
		bam RGPBUT1
		clickable lua "createCharScreen:GetCurrentStep() == 17"
		glow lua "createCharScreen:GetCurrentStep() == 17"
		text "NAME_BUTTON"
		text style "rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		action "createCharScreen:OnMenuButtonClick()"
	}

	button
	{
		area 1022 454 298 66
		text "IMPORT_BUTTON"
		bam RGPBUT1
		clickable lua "not Infinity_IsMenuOnStack('CHARGEN_GENDER') and not Infinity_IsMenuOnStack('CHARACTER_COLOR')" --this button can be seen from these menus, make it clear its not clickable
		text style "rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		text point 10
		action "createCharScreen:OnImportCharacterButtonClick()"
	}
	button
	{
		area 1022 528 298 66
		text "BIOGRAPHY_BUTTON"
		bam RGPBUT1
		text style "rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		text point 10
		clickable lua "createCharScreen:GetCurrentStep() >= 17"
		action "createCharScreen:OnBiographyButtonClick()"
	}
	button
	{
		on escape
		area 22 676 566 66
		bam RGPBUT1
		text "BACK_BUTTON"
		text style "rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		clickable lua "createCharScreen:IsMainBackButtonClickable()"
		action "createCharScreen:OnMainBackButtonClick()"
	}
	button
	{
		on escape
		area 22 676 566 66
		bam RGPBUT1
		text "CANCEL_BUTTON"
		text style "rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		enabled "createCharScreen:GetCurrentStep() == 0"
		action "createCharScreen:OnMainCancelButtonClick()"
	}
	button
	{
		area 1022 676 298 66
		text lua "chargenAcceptOrExport()"
		bam RGPBUT1
		text style "rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		text point 10
		clickable lua "createCharScreen:IsChargenComplete()"
		action "createCharScreen:AcceptCharacter(-1)"
	}
	button
	{
		area 1022 602 298 66
		text "CREATE_PARTY_BUTTON"
		bam RGPBUT1
		text style "rg_trajan"
		align center center
		ScaleToClip
		pad 30 5 30 5
		text point 10
		clickable lua "createCharScreen:IsAdvancedButtonClickable() == true"
		action "createCharScreen:OnAdvancedButtonClick()"
	}
}

`
createCharGenderHelp = 24313 --17236
`
menu
{
	name 'CHARGEN_GENDER'
	align center center
	ignoreesc
	onOpen "toggleMale = 0; toggleFemale = 0"
	
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text		"GENDER_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	label
	{
		area 208 444 940 172
		text lua "rgGetGameEngineString(24313,24313,24313,17236)" 
		text style "normal"
	}
	button
	{
		area 306 150 260 230
		bam RGPGEND
		sequence 0
		ScaleToClip
		toggle toggleMale
		action "toggleFemale = 0; createCharScreen:OnGenderSelectButtonClick(1)"
	}
	button
	{
		area 796 150 260 230
		bam RGPGEND
		sequence 1
		ScaleToClip
		toggle toggleFemale
		action "toggleMale = 0; createCharScreen:OnGenderSelectButtonClick(2)"
	}

	button
    {
        on escape
        area 208 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "BACK_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
        action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
    }
    button
    {
        on return
        area 706 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "DONE_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
        clickable lua "createCharScreen:IsDoneButtonClickable()"
        action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
    }
}
`

portraitArray = {}

function ZeroToggleArray()
    togglePort1 = 0
    togglePort2 = 0
    togglePort3 = 0
    togglePort4 = 0
    togglePort5 = 0
    togglePort6 = 0
    togglePort7 = 0
    togglePort8 = 0
    togglePort9 = 0
    togglePort10 = 0  
end

function togglePortrait1()
    tempTog = togglePort1
    ZeroToggleArray()
    togglePort1 = tempTog
end

function togglePortrait2()  
    tempTog = togglePort2
    ZeroToggleArray()
    togglePort2 = tempTog
end

function togglePortrait3()
    tempTog = togglePort3
    ZeroToggleArray()
    togglePort3 = tempTog
end

function togglePortrait4()
    tempTog = togglePort4
    ZeroToggleArray()
    togglePort4 = tempTog
end

function togglePortrait5()
    tempTog = togglePort5
    ZeroToggleArray()
    togglePort5 = tempTog
end

function togglePortrait6()
    tempTog = togglePort6
    ZeroToggleArray()
    togglePort6 = tempTog
end

function togglePortrait7()
    tempTog = togglePort7
    ZeroToggleArray()
    togglePort7 = tempTog
end

function togglePortrait8()
    tempTog = togglePort8
    ZeroToggleArray()
    togglePort8 = tempTog
end

function togglePortrait9()
    tempTog = togglePort9
    ZeroToggleArray()
    togglePort9 = tempTog
end

function togglePortrait10()
    tempTog = togglePort10
    ZeroToggleArray()
    togglePort10 = tempTog
end


function OnPortraitArrayClick(thisOne)
    if portraitChoice == thisOne then
        portraitChoice = -1
    else
        portraitChoice = thisOne
    end
end

function IncPortraitArray()
    for index = 1, 10, 1 do
        portraitArray[index] = createCharScreen:GetCurrentPortrait()
        createCharScreen:IncCurrentPortrait()
    end
    ZeroToggleArray()
    portraitChoice = -1
end

function DecPortraitArray()
    for index = 1, 20, 1 do
        createCharScreen:DecCurrentPortrait()
    end
    IncPortraitArray()
    ZeroToggleArray()
    portraitChoice = -1
end

function GetPortrait(portraitIndex)
    return portraitArray[portraitIndex]
end

function ChoosePortrait()
    if portraitChoice == -1 then
        Infinity_PopMenu()
        createCharScreen:OnCancelButtonClick()
    else
        for index = 11, portraitChoice+1, -1 do
            createCharScreen:DecCurrentPortrait()
        end
    end
end

function IsPortraitChosen()
    if portraitChoice == -1 then
        return 0
    else
        return 1
    end
end

function RgSelectedSPortSequence(num)
    if rgGlow == num then
        return 1
    else
        return 0
    end
end

`

menu
{
	name 'CHARGEN_PORTRAIT'
	align center center
	ignoreesc
	onopen "
	IncPortraitArray()
	rgGlow = 0
	"
	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}
	label
	{
		area 18 12 700 56
		text "APPEARANCE_TITLE"
		text style "rg_trajan"
		text color '$'
	}
	button
    {
        area 18 326 172 172
        bam		RGPBTSP
		sequence	1
		ScaleToClip
        action "DecPortraitArray(); rgGlow = 0"
    }
    button
    {
        area 1174 326 172 172
        bam		RGPBTSP
		sequence	0
		ScaleToClip
        action "IncPortraitArray(); rgGlow = 0"
    }
	
	label { area 201 76 186 292  bam rgpchpor ScaleToClip sequence lua "RgSelectedSPortSequence(1)"  }
    label { area 395 76 186 292  bam rgpchpor ScaleToClip sequence lua "RgSelectedSPortSequence(2)"  }
    label { area 589 76 186 292  bam rgpchpor ScaleToClip sequence lua "RgSelectedSPortSequence(3)"  }
    label { area 783 76 186 292  bam rgpchpor ScaleToClip sequence lua "RgSelectedSPortSequence(4)"  }
    label { area 977 76 186 292  bam rgpchpor ScaleToClip sequence lua "RgSelectedSPortSequence(5)"  }
    label { area 201 375 186 292 bam rgpchpor ScaleToClip sequence lua "RgSelectedSPortSequence(6)"  }
    label { area 395 375 186 292 bam rgpchpor ScaleToClip sequence lua "RgSelectedSPortSequence(7)"  }
    label { area 589 375 186 292 bam rgpchpor ScaleToClip sequence lua "RgSelectedSPortSequence(8)"  }
    label { area 783 375 186 292 bam rgpchpor ScaleToClip sequence lua "RgSelectedSPortSequence(9)"  }
    label { area 977 375 186 292 bam rgpchpor ScaleToClip  sequence lua "RgSelectedSPortSequence(10)" }
	
	button { area 208 86 173 272  bitmap lua "GetPortrait(1)"   toggle togglePort1 action  "togglePortrait1();  OnPortraitArrayClick(1); rgGlow = 1"  }
    button { area 402 86 173 272  bitmap lua "GetPortrait(2)"   toggle togglePort2 action  "togglePortrait2();  OnPortraitArrayClick(2); rgGlow = 2"  }
    button { area 596 86 173 272  bitmap lua "GetPortrait(3)"   toggle togglePort3 action  "togglePortrait3();  OnPortraitArrayClick(3); rgGlow = 3"  }
    button { area 790 86 173 272  bitmap lua "GetPortrait(4)"   toggle togglePort4 action  "togglePortrait4();  OnPortraitArrayClick(4); rgGlow = 4"  }
    button { area 984 86 173 272  bitmap lua "GetPortrait(5)"   toggle togglePort5 action  "togglePortrait5();  OnPortraitArrayClick(5); rgGlow = 5"  }
    button { area 208 385 173 272 bitmap lua "GetPortrait(6)"   toggle togglePort6 action  "togglePortrait6();  OnPortraitArrayClick(6); rgGlow = 6"  }
    button { area 402 385 173 272 bitmap lua "GetPortrait(7)"   toggle togglePort7 action  "togglePortrait7();  OnPortraitArrayClick(7); rgGlow = 7"  }
    button { area 596 385 173 272 bitmap lua "GetPortrait(8)"   toggle togglePort8 action  "togglePortrait8();  OnPortraitArrayClick(8); rgGlow = 8"  }
    button { area 790 385 173 272 bitmap lua "GetPortrait(9)"   toggle togglePort9 action  "togglePortrait9();  OnPortraitArrayClick(9); rgGlow = 9"  }
    button { area 984 385 173 272 bitmap lua "GetPortrait(10)"  toggle togglePort10 action "togglePortrait10(); OnPortraitArrayClick(10) rgGlow = 10"  }
	
	
	--label
    --{
    --    enabled "IsPortraitChosen()"
    --    area 1142 248 210 330
    --    bitmap lua "GetPortrait(portraitChoice)"
    --}
    label
    {
		enabled "IsPortraitChosen()"
        area 730 12 616 56
        text lua "GetPortrait(portraitChoice)"
        text style "rg_trajan"
		text align right center
    }
    button
    {
        on escape
        area 208 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "BACK_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
        action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
    }
    button
    {
        on return
        area 706 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "DONE_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
        clickable lua "IsPortraitChosen()"
        action "ChoosePortrait(); Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
    }
	--button
	--{
	--	area 280 302 52 132
	--	bam GUIPRC
	--	sequence 0
	--	action "createCharScreen:DecCurrentPortrait()"
	--}
	--button
	--{
	--	area 692 302 52 132
	--	bam GUIPRC
	--	sequence 1
	--	action "createCharScreen:IncCurrentPortrait()"
	--}
    --
	--label
	--{
	--	area 406 206 212 330
	--	bitmap lua "createCharScreen:GetCurrentPortrait()"
	--}
    --
	--button
	--{
	--	area 360 648 300 44
	--	bam GUIOSTCL
	--	text "CUSTOM_BUTTON"
	--	text style "button"
	--	enabled "not e:IsTouchUI()"
	--	action "
	--		TEXT_popup_big = 17188
	--		Infinity_PushMenu('POPUP_BIG')
	--		"
	--}
    --
	--button
	--{
	--	on escape
	--	area 194 718 232 44
	--	text "BACK_BUTTON"
	--	text style "button"
	--	bam GUIOSTUL
	--	action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	--}
	--button
	--{
	--	on return
	--	area 438 718 206 44
	--	bam GUIOSTUM
	--	text "DONE_BUTTON"
	--	text style "button"
	--	clickable lua "createCharScreen:IsDoneButtonClickable()"
	--	action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	--}

}

`
function raceOrGeneralHelp()
	race = chargen.races[currentChargenRace]
	if race then
		return Infinity_FetchString(race.desc)
	else
		return Infinity_FetchString(17237)
	end
end
`
menu
{
	name 'CHARGEN_RACE'
	align center center
	ignoreesc
	onopen "currentChargenRace = nil"
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text		"RACE_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				bam rgpslct
				sequence lua "rgGetChargenRowBackground(rowNumber, currentChargenRace)"
				ScaleToClip
				
			}
			label
			{
				area 0 0 -1 -1
				text lua "Infinity_FetchString(chargen.races[rowNumber].name)"
				text style "rg_trajan"
				pad 8 0 0 0
				text lower
				
			}
		}
		action "
			if chargen.races[currentChargenRace] then
				createCharScreen:OnRaceSelectButtonClick(chargen.races[currentChargenRace].id)
			end
			"
		rowheight 60
		hidehighlight
		area 16 90 634 564
		table "chargen.races"
		var currentChargenRace
		scrollbar	'rgpscrl'
	}
	text
	{
		area 706 90 582 564
		text lua "raceOrGeneralHelp()"
		text style "normal"
		scrollbar	'rgpscrl'
	}
	button
    {
        on escape
        area 208 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "BACK_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
        action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
    }
    button
    {
        on return
        area 706 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "DONE_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}

}
`
function classOrGeneralHelp()
	class = chargen.class[currentChargenClass]
	if class then
		return Infinity_FetchString(class.desc)
	else
		--only bit that may need to change for dual class! :)
		return Infinity_FetchString(17242)
	end
end
`
menu
{
	name 'CHARGEN_CLASS'
	align center center
	ignoreesc
	onopen "currentChargenClass = nil"
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text		"CLASS_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				bam rgpslct
				sequence lua "rgGetChargenRowBackground(rowNumber, currentChargenClass)"
				ScaleToClip
				
			}
			label
			{
				area 0 0 -1 -1
				text lua "Infinity_FetchString(chargen.class[rowNumber].name)"
				text style "rg_trajan"
				pad 8 0 0 0
				text lower
				
			}
		}
		action "
			if chargen.class[currentChargenClass] then
				createCharScreen:OnClassSelectButtonClick(chargen.class[currentChargenClass].id)
			end
			"
		rowheight 60
		hidehighlight
		area 16 88 634 564
		table "chargen.class"
		var currentChargenClass
		scrollbar 'rgpscrl'
	}
	text
	{
		area 706 88 632 564
		text lua "classOrGeneralHelp()"
		text style "normal"
		scrollbar	'rgpscrl'
	}
	button
    {
        on escape
        area 208 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "BACK_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
        action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
    }
    button
    {
        on return
        area 706 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "DONE_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick(); Infinity_PopMenu('CHARGEN_CLASS'); "
	}

}
`
function kitOrGeneralHelp()
	kit = chargen.kit[currentChargenKit]
	if kit then
		return Infinity_FetchString(kit.desc)
	else
		return Infinity_FetchString(17242)
	end
end
`
menu
{
	name 'CHARGEN_KIT'
	align center center
	ignoreesc
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text		"CLASS_KIT_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				bam rgpslct
				sequence lua "rgGetChargenRowBackground(rowNumber, currentChargenKit)"
				ScaleToClip
				
			}
			label
			{
				area 0 0 -1 -1
				text lua "Infinity_FetchString(chargen.kit[rowNumber].name)"
				text style "rg_trajan"
				pad 8 0 0 0
				text lower
				
			}
		}
		action "
			if chargen.kit[currentChargenKit] then
				createCharScreen:OnKitSelectButtonClick(chargen.kit[currentChargenKit].id)
			end
			"
			
		rowheight 60
		hideHighlight
		area 16 88 634 566
		table "chargen.kit"
		var currentChargenKit
		scrollbar	'rgpscrl'
	}
	text
	{
		area 706 88 632 566
		text lua "kitOrGeneralHelp()"
		text style "normal"
		scrollbar	'rgpscrl'
	}
	button
    {
        on escape
        area 208 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "BACK_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
        action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
    }
    button
    {
        on return
        area 706 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "DONE_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}

}
`
function alignmentOrGeneralHelp()
	alignment = chargen.alignment[currentChargenAlignment]
	if alignment then
		return Infinity_FetchString(alignment.desc)
	else
		return Infinity_FetchString(9602)
	end
end
function rgGetChargenRowBackground(row, var)
	if(row == var) then
		return 0
	else
		return 1
	end
end
`
menu
{
	name 'CHARGEN_ALIGNMENT'
	align center center
	ignoreesc
	onopen "currentChargenAlignment = nil"
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text		"ALIGNMENT_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				bam rgpslct
				sequence lua "rgGetChargenRowBackground(rowNumber, currentChargenAlignment)"
				ScaleToClip
				
			}
			label
			{
				area 0 0 -1 -1
				text lua "Infinity_FetchString(chargen.alignment[rowNumber].name)"
				text style "rg_trajan"
				pad 8 0 0 0
				text lower
				
			}
		}
		action "
			if chargen.alignment[currentChargenAlignment] then
				createCharScreen:OnAlignmentSelectButtonClick(chargen.alignment[currentChargenAlignment].id)
			end
			"
		rowheight 60
		hidehighlight
		area 16 92 634 564
		table "chargen.alignment"
		var currentChargenAlignment
		scrollbar	'rgpscrl'
	}
	text
	{
		area 706 92 634 564
		text lua "alignmentOrGeneralHelp()"
		text style "normal"
		scrollbar	'rgpscrl'
	}
	button
    {
        on escape
        area 208 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "BACK_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
        action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
    }
    button
    {
        on return
        area 706 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "DONE_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}

}
`
chargen.ability = {
	{name = 'STRENGTH_LABEL', desc = 9582},
	{name = 'DEXTERITY_LABEL', desc = 9584},
	{name = 'CONSTITUTION_LABEL', desc = 9583},
	{name = 'INTELLIGENCE_LABEL', desc = 9585},
	{name = 'WISDOM_LABEL', desc = 9586},
	{name = 'CHARISMA_LABEL', desc = 9587},
}

function abilityOrGeneralHelp()
	ability = chargen.ability[currentChargenAbility]
	if ability and ability.desc ~= -1 then
		createCharScreen:SetAbilityHelpInfo(currentChargenAbility)
		return Infinity_FetchString(ability.desc)
	else
		return Infinity_FetchString(17247)
	end
end

`

menu
{
	name 'CHARGEN_ABILITIES'
	align center center
	ignoreesc
	onopen "ticksPassed = 0; ticksStarting = 0"
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text		"ABILITIES_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	list
	{
		column
		{
			width 50
			label
			{
				area 0 0 -1 -1
				text lua "t(chargen.ability[rowNumber].name)"
				text style "normal"
				align right center
				
			}
		}
		column
		{
			width 22
			label
			{
				area 10 0 -1 -1
				text lua "chargen.ability[rowNumber].roll"
				text style "normal"
				align center center
			}
		}
		column
		{
			width 14
			label
			{
				area 0 6 70 70
				bam rgpbtpl
				ScaleToClip
				frame lua "currentCellCheck(3)"
				sequence 0
			}
		}
		column
		{
			width 14
			label
			{
				area 0 6 70 70
				bam rgpbtpl
				ScaleToClip
				frame lua "currentCellCheck(4)"
				sequence 1

			}
		}
		action 
		"
			if ticksStarting < 10 then
				if cellNumber == 3 then
					createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, true)
				elseif cellNumber == 4 then
					createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, false)
				end
			end
			cellNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate "
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 7 then
					if cellNumber == 3 then
						createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, true)
					elseif cellNumber == 4 then
						createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, false)
					end
					ticksPassed = 0
				end
			end
		"

		rowheight 80
		hidehighlight
		area 16 84 582 486
		table "chargen.ability"
		var currentChargenAbility
	}
	label
	{
		area 102 594 204 48
		text "TOTAL_ROLL_NORMAL"
		text style "normal"
		text align right center
	}
	label
	{
		area 348 594 56 48
		text lua "chargen.totalRoll"
		text style "normal"
		text align center center
	}
	label
	{
		area 440 594 140 48
		text lua "chargen.extraAbilityPoints"
		text style "normal"
		text align center center
	}


	text
	{
		area 842 84 490 566
		text lua "abilityOrGeneralHelp()"
		text style "normal"
		scrollbar	'rgpscrl'
	}

	button
	{
		area 626 406 178 106
		bam RGPBUT1
		text "REROLL_BUTTON"
		text style "rg_trajan"
		text align center center
		ScaleToClip
		text point 10
		action "createCharScreen:OnAbilityReRollButtonClick()"
	}
	button
	{
		area 626 142 178 106
		bam RGPBUT1
		text "STORE_BUTTON"
		text style "rg_trajan"
		text align center center
		ScaleToClip
		text point 10
		action "createCharScreen:OnAbilityStoreButtonClick()"
	}
	button
	{
		area 626 274 178 106
		bam RGPBUT1
		text "RECALL_BUTTON"
		text style "rg_trajan"
		text align center center
		ScaleToClip
		text point 10
		clickable lua "createCharScreen:IsAbilityRecallButtonClickable()"
		action "createCharScreen:OnAbilityRecallButtonClick()"
	}

	button
	{
		on '8'
		action "createCharScreen:OnCheatyMcCheaterson()"
		
		
	}

	button
    {
        on escape
        area 208 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "BACK_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
        action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
    }
    button
    {
        on return
        area 706 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "DONE_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}

}

`
function proficiencyOrGeneralHelp()
	local prof = chargen.proficiency[currentChargenProficiency]
	local skill = chargen.thief_skill[currentChargenThiefSkill]
	if prof and prof.desc ~= -1 then
		return Infinity_FetchString(prof.desc)
	elseif skill and skill.desc ~= -1 then
		return Infinity_FetchString(skill.description)
	else
		if(chargen.levelingUp) then
			if(levelUpInfoToggle == 1) then
				return chargen.charInfo
			else
				return chargen.levelInfo
			end
		else
		return Infinity_FetchString(24315)
	end
	end
end
function proficiencyOrGeneralHelp(fallback)
	local prof = chargen.proficiency[currentChargenProficiency]
	local skill = chargen.thief_skill[currentChargenThiefSkill]
	if prof and prof.desc ~= -1 then
		return Infinity_FetchString(prof.desc)
	elseif skill and skill.desc ~= -1 then
		return Infinity_FetchString(skill.description)
	else
		if(chargen.levelingUp) then
			if(levelUpInfoToggle == 1) then
				return chargen.charInfo
			else
				return chargen.levelInfo
			end
		else
		return Infinity_FetchString(fallback)
	end
	end
end

function getProficienciesTitle()
	if(chargen.levelingUp) then
		return t("LEVEL_UP_TITLE")
	else
		return t("CHARGEN_TITLE")
	end
end

function isChargenProficienciesBackButtonClickable()
	return ((not chargen.levelingUp) and createCharScreen:GetCurrentStep() ~= const.STEP_DUALCLASS_PROFICIENCIES)
end
`

menu
{
	name 'CHARGEN_PROFICIENCIES'
	modal
	align center center
	ignoreesc
	onopen "currentChargenProficiency = nil; currentChargenThiefSkill = nil; ticksPassed = 0; ticksStarting = 0"
	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}
	label
	{
		area 18 12 700 56
		text lua "getProficienciesTitle()"
		text style "rg_trajan"
		text color '$'
	}
	label
	{
		area 18 80 426 40
		text "PROF_SLOTS_LABEL"
		text style "rg_trajan"
		text align left center
	}
	label
	{
		area 444 76 50 44
		text lua "chargen.extraProficiencySlots"
		text style "rg_trajan"
		text align center center
	}
	label
	{
		area 556 80 326 40
		text "SKILLS_LABEL"
		text style "rg_trajan"
		text align left center
	}
	label
	{
		area 884 76 50 44
		text lua "chargen.extraSkillPoints"
		text style "rg_trajan"
		text align center center
	}

	list
	{
		column
		{
			width 80
			label
			{	
				enabled "chargen.proficiency[currentChargenProficiency] == chargen.proficiency[rowNumber]"
				area 0 0 -1 -1
				bam rgpslct
				ScaleToClip
			}
			label
			{
				area 0 0 280 -1
				text lua "Infinity_FetchString(chargen.proficiency[rowNumber].name)"
				text style "normal"
				align right center
				
			}
			label
			{
				bam GUIPFC
				area 300 24 16 16
				align center center
				enabled "chargen.proficiency[rowNumber].value > 4"
			}
			label
			{
				bam GUIPFC
				area 320 24 16 16
				align center center
				enabled "chargen.proficiency[rowNumber].value > 3"
			}
			label
			{
				bam GUIPFC
				area 340 24 16 16
				align center center
				enabled "chargen.proficiency[rowNumber].value > 2"
			}
			label
			{
				bam GUIPFC
				area 360 24 16 16
				align center center
				enabled "chargen.proficiency[rowNumber].value > 1"
			}
			label
			{
				bam GUIPFC
				area 380 24 16 16
				align center center
				enabled "chargen.proficiency[rowNumber].value > 0"
			}
		}
		--column
		--{
		--	width 4
		--	label
		--	{
		--		bam GUIPFC
		--		area 0 19 16 16
		--		align center center
		--		enabled "chargen.proficiency[rowNumber].value > 4"
		--	}
		--}
		--column
		--{
		--	width 4
		--	label
		--	{
		--		bam GUIPFC
		--		area 0 19 16 16
		--		align center center
		--		enabled "chargen.proficiency[rowNumber].value > 3"
		--	}
		--}
		--column
		--{
		--	width 4
		--	label
		--	{
		--		bam GUIPFC
		--		area 0 19 16 16
		--		align center center
		--		enabled "chargen.proficiency[rowNumber].value > 2"
		--	}
		--}
		--column
		--{
		--	width 4
		--	label
		--	{
		--		bam GUIPFC
		--		area 0 19 16 16
		--		align center center
		--		enabled "chargen.proficiency[rowNumber].value > 1"
		--	}
		--}
		--column
		--{
		--	width 4
		--	label
		--	{
		--		bam GUIPFC
		--		area 0 19 16 16
		--		align center center
		--		enabled "chargen.proficiency[rowNumber].value > 0"
		--	}
		--}

		column
		{
			width 10
			label
			{
				area 0 10 45 45
				bam rgpbtpl
				frame lua "getPlusFrame(2)"
				sequence 0
				ScaleToClip
			}
		}
		column
		{
			width 10
			label
			{
				area 0 10 45 45
				bam rgpbtpl
				sequence 1
				ScaleToClip
				frame lua "getMinusFrame(3)"
			}
		}

		action "
			currentChargenThiefSkill = nil
			if ticksStarting < 10 then
				if cellNumber == 2 and plusButtonClickable(currentChargenProficiency) then
					createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, true)
				elseif cellNumber == 3 and minusButtonClickable(currentChargenProficiency) then
					createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, false)
				end
			end
			cellNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate "
			currentChargenThiefSkill = nil
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 7 then
					if cellNumber == 2 and plusButtonClickable(currentChargenProficiency) then
						createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, true)
					elseif cellNumber == 3 and minusButtonClickable(currentChargenProficiency) then
						createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, false)
					end
					ticksPassed = 0
				end
			end
		"

		rowheight 65
		area 24 136 515 542
		hideHighlight
		table "chargen.proficiency"
		var currentChargenProficiency
		scrollbar	'rgpscrl'

	}
	list
	{
		column
		{
			width 70
			label
			{	
				enabled "chargen.thief_skill[currentChargenThiefSkill] == chargen.thief_skill[rowNumber]"
				area 0 0 -1 -1
				bam rgpslct
				ScaleToClip
			}
			label
			{
				area 0 0 180 54
				text lua "Infinity_FetchString(chargen.thief_skill[rowNumber].name)"
				text style "normal"
				text align right center
				
			}
			label
			{
				area 180 0 40 54
				text lua "chargen.thief_skill[rowNumber].value"
				text style "normal"
				text align left center

			}
		}
		
		column
		{
			width 15
			label
			{
				area 0 10 45 45
				bam rgpbtpl
				ScaleToClip
				enabled "createCharScreen:IsThiefSkillPlusMinusButtonClickable()"
				frame lua "currentCellCheck(2)"
				sequence 0
			}
		}
		column
		{
			width 15
			label
			{
				area 0 10 45 45
				bam rgpbtpl
				ScaleToClip
				enabled "createCharScreen:IsThiefSkillPlusMinusButtonClickable()"
				frame lua "currentCellCheck(3)"
				sequence 1

			}
		}
		rowheight 65
		hideHighlight
		area 556 136 414 542
		table "chargen.thief_skill"
		var currentChargenThiefSkill
		scrollbar	'rgpscrl'
		action 
		"
			currentChargenProficiency = nil
			if ticksStarting < 10 then
				if createCharScreen:IsThiefSkillPlusMinusButtonClickable() then
					if cellNumber == 2 then
						createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)
					elseif cellNumber == 3 then
						createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)
					end
				end
			end
			cellNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"
			currentChargenProficiency = nil
			if createCharScreen:IsThiefSkillPlusMinusButtonClickable() then
				ticksStarting = ticksStarting + 1
				if ticksStarting > 10 then
					ticksPassed = ticksPassed + 1
					if ticksPassed > 2 then
						if cellNumber == 3 then
							createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)
						elseif cellNumber == 4 then
							createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)
						end
						ticksPassed = 0
					end
				end
			end
		"
	}

	text
	{
		area 974 136 370 542
		text lua "proficiencyOrGeneralHelp()"
		text style "normal"
		scrollbar	'rgpscrl'
	}
	button
	{
		enabled "chargen.levelingUp"
		area 974 44 370 76
		bam			RGPBUT1
		text "INFORMATION_BUTTON"
		text style	"rg_trajan"
		align center center
		pad 40 0 40 0
		ScaleToClip
		toggle "levelUpInfoToggle"
		action
		"
			currentChargenProficiency = nil
		"
	}
	button
	{
		enabled "chargen.levelingUp"
		area 918 686 426 76
		bam			RGPBUT1
		text "HIGH_LEVEL_ABILITIES_BUTTON"
		text style	"rg_trajan"
		align center center
		pad 40 0 40 0
		ScaleToClip
		toggle "levelUpInfoToggle"
		clickable lua "createCharScreen:IsHighLevelAbilitiesButtonClickable()"
		action
		"
			createCharScreen:OnHighLevelAbilitiesButtonClick()
		"
	}
	button
	{
		on escape
		area 24 686 426 76
		bam			RGPBUT1
		text "BACK_BUTTON"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		clickable lua "isChargenProficienciesBackButtonClickable()"
		action "createCharScreen:OnCancelButtonClick();"
	}
	button
	{
		on return
		area 472 686 426 76
		bam			RGPBUT1
		text "DONE_BUTTON"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick();"
	}
	button
	{
		enabled "not chargen.levelingUp"
		area 918 686 426 76
		bam			RGPBUT1
		clickable false
		text "CREATE_PARTY_BUTTON"
		text style	"rg_trajan"
		align center center
		ScaleToClip
	}

}
`
function specialistFrame(num)
	if spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[num].key].specialist then
		return 3
	end
	return 0
end
function spellLearnOrUnlearnText()
	if currentChargenChooseMageSpell == nil or not chargen.choose_spell[currentChargenChooseMageSpell].enabled then
		return t("BUTTON_LEARN")
	else
		return t("BUTTON_UNLEARN")
	end
end
function spellLearnOrUnlearnClickable()
	spl = chargen.choose_spell[currentChargenChooseMageSpell]
	if chargen.extraSpells == 0 and spl ~= nil and spl.enabled == false or spl == nil or spl.known then
		return false
	else
		return true 
	end
end


function chooseSpellOrGeneralHelp()
	local helpText = chargen.helpText
	spl = chargen.choose_spell[currentChargenChooseMageSpell]
	if spl == nil then
		return helpText
	end

	local desc = spellBook[chargen.currentSpellLevelChoice][spl.key].desc
	if currentChargenChooseMageSpell and desc ~= -1 then
		return Infinity_FetchString(desc)
	else
		return helpText
	end
end

function nextOrDone()
	if(createCharScreen:HasMoreMageLevels()) then
		return t('NEXT_BUTTON')
	else
		return t('DONE_BUTTON')
	end
end
function shouldShowSpecialistMessage()
	local ret = false

	if chargen.extraSpells == 0 and not createCharScreen:IsDoneButtonClickable() then
		ret = true
	end

	return ret
end
`
menu
{
	name 'CHARGEN_CHOOSE_SPELLS'
	align center center
	ignoreesc
	onOpen 
	"
		table.sort(chargen.choose_spell, sortBySpellName)
		currentChargenChooseMageSpell = nil

		if currentChargenKit == nil then
			currentChargenKit = 0
		end

		local currentKitName = ''

		--gnome illusionists
		if currentChargenRace ~= 6 and chargen.kit then
			currentKitName = Infinity_FetchString(chargen.kit[currentChargenKit].name)
		else
			currentKitName = Infinity_FetchString(25323)
		end
		
		if currentKitName == Infinity_FetchString(25319) then
			setStringTokenLua('<SCHOOLTOKEN>',t('ABJURATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(25320) then
			setStringTokenLua('<SCHOOLTOKEN>',t('CONJURATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(25321) then
			setStringTokenLua('<SCHOOLTOKEN>',t('DIVINATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(25322) then
			setStringTokenLua('<SCHOOLTOKEN>',t('ENCHANTMENT_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(25323) then
			setStringTokenLua('<SCHOOLTOKEN>',t('ILLUSION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(25324) then
			setStringTokenLua('<SCHOOLTOKEN>',t('EVOCATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(25325) then
			setStringTokenLua('<SCHOOLTOKEN>',t('NECROMANCY_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(25326) then
			setStringTokenLua('<SCHOOLTOKEN>',t('TRANSMUTATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(25327) then
			setStringTokenLua('<SCHOOLTOKEN>',Infinity_FetchString(25327))
		end
	"
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text lua "t(chargen.title) .. ': ' .. t('LEVEL_LABEL') .. ' ' .. chargen.currentSpellLevelChoice"
		text style	'rg_trajan'
		text color '$'
	}
	list
	{
		column
		{
			width 16

			label
			{
				bam GUIPFC
				area 4 19 16 16
				align center center
				enabled "chargen.choose_spell[rowNumber].enabled or chargen.choose_spell[rowNumber].known"
			}
			label
			{
				bam GUIBTBUT
				area 20 0 52 52 
				align center center
				frame lua "specialistFrame(rowNumber)"
			}
			label
			{
				area 20 0 52 52
				greyscale lua "chargen.choose_spell[rowNumber].enabled == false"
				bam lua "spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[rowNumber].key].groundicon"
				scaleToClip
			}
		}
		column
		{
			width 84
			label
			{
				area 4 0 -1 -1
				text lua "Infinity_FetchString(spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[rowNumber].key].name)"
				text style "normal"

				glow lua "chargen.choose_spell[rowNumber].enabled"
				align left center
				
			}
		}

		scrollbar	'rgpscrl'
		rowheight 52
		area 32 170 618 482
		table "chargen.choose_spell"
		var currentChargenChooseMageSpell
		action "
			if cellNumber == 1 and not chargen.choose_spell[currentChargenChooseMageSpell].known then
				createCharScreen:OnLearnMageSpellButtonClick(currentChargenChooseMageSpell)
			end
		"
	}
	text
	{
		area 706 86 630 566
		text lua "chooseSpellOrGeneralHelp()"
		text style "normal"
		scrollbar	'rgpscrl'
	}

	label
	{
		area 434 100 168 48
		text "SPELLS_REMAINING_NORMAL"
		text style "normal"
		text align right center
	}
	label
	{
		area 602 100 48 48
		text lua "chargen.extraSpells"
		text style "normal"
		text align center center
	}
	label
	{
		area 588 566 384 38
		enabled "shouldShowSpecialistMessage()"
		text lua "t('SPECIALIST_SPELL_REQ')"
		text style "normal"
		text align center center
		rectangle 0
	}

	button
	{
		area 32 86 344 70
		bam RGPBUT1
		text lua "spellLearnOrUnlearnText()"
		text style "rg_trajan"
		text align center center
		ScaleToClip
		pad 30 10 30 10
		clickable lua "spellLearnOrUnlearnClickable()"
		action "createCharScreen:OnLearnMageSpellButtonClick(currentChargenChooseMageSpell)"
	}

	button
    {
        on escape
        area 208 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "BACK_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		clickable lua "not chargen.levelingUp"
        action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
    }
    button
    {
        on return
        area 706 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "DONE_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick()"
	}

}
`

function mageMemorizeSpellOrGeneralHelp()
	spl = chargen.choose_spell[currentChargenMemorizeMageSpell]
	if spl == nil then
		return Infinity_FetchString(17253)
	end

	local desc = mageSpells[chargen.currentSpellLevelChoice][spl.key].desc
	if currentChargenMemorizeMageSpell and desc ~= -1 then
		return Infinity_FetchString(desc)
	else
		return Infinity_FetchString(17253)
	end
end

`
menu
{
	name 'CHARGEN_MEMORIZE_MAGE'
	align center center
	ignoreesc
	onOpen "
		table.sort(chargen.choose_spell, sortByMageSpellName)
		currentChargenMemorizeMageSpell = nil
		"
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text lua "chargen.title"
		text style	'rg_trajan'
		text color '$'
	}
	list
	{
		column
		{
			width 12

			label
			{
				bam GUIBTBUT
				area 0 0 52 52 
				align center center
				icon lua "mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[rowNumber].key].groundicon"
				frame lua "specialistFrame(rowNumber)"
				count lua "chargen.choose_spell[rowNumber].count"
			}
		}
		column
		{
			width 68
			label
			{
				area 4 0 -1 -1
				text lua "Infinity_FetchString(mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[rowNumber].key].name)"
				text style "normal"

				glow lua "chargen.choose_spell[rowNumber].enabled"
				align left center
				
			}
		}
		column
		{
			width 10
			button
			{
				area 0 4 45 45
				bam rgpbtpl
				ScaleToClip
				frame lua "currentCellCheck(3)"
				sequence 0
			}
		}
		column
		{
			width 10
			button
			{
				area 0 4 45 45
				bam rgpbtpl
				ScaleToClip
				frame lua "currentCellCheck(4)"
				sequence 1

			}
		}


		scrollbar	'rgpscrl'
		rowheight 52
		area 26 150 600 506
		table "chargen.choose_spell"
		var currentChargenMemorizeMageSpell
		action "
			if cellNumber == 3 then
				createCharScreen:OnMemorizeMageSpellButtonClick(currentChargenMemorizeMageSpell, 1)
			elseif cellNumber == 4 then
				createCharScreen:OnMemorizeMageSpellButtonClick(currentChargenMemorizeMageSpell, -1)
			end
			cellNumber = nil
		"
	}
	text
	{
		area 706 88 636 568
		text lua "mageMemorizeSpellOrGeneralHelp()"
		text style "normal"
		scrollbar	'rgpscrl'
	}

	label
	{
		area 404 88 168 48
		text "SPELLS_REMAINING_NORMAL"
		text style "normal"
		text align right center
	}
	label
	{
		area 572 88 54 48
		text lua "chargen.extraSpells"
		text style "normal"
		text align center center
	}

	button
    {
        on escape
        area 208 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "BACK_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
        action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
    }
    button
    {
        on return
        area 706 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "DONE_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick()"
	}

}
`

function priestMemorizeSpellOrGeneralHelp()
	spl = chargen.choose_spell[currentChargenMemorizePriestSpell]
	if spl == nil then
		return Infinity_FetchString(17253)
	end

	local desc = priestSpells[chargen.currentSpellLevelChoice][spl.key].desc
	if currentChargenMemorizePriestSpell and desc ~= -1 then
		return Infinity_FetchString(desc)
	else
		return Infinity_FetchString(17253)
	end
end

`
menu
{
	name 'CHARGEN_MEMORIZE_PRIEST'
	align center center
	ignoreesc
	onOpen "
		table.sort(chargen.choose_spell, sortByPriestSpellName)
		currentChargenMemorizePriestSpell = nil
		"
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text lua "chargen.title"
		text style	'rg_trajan'
		text color '$'
	}
	list
	{
		column
		{
			width 12

			label
			{
				bam GUIBTBUT
				area 0 0 52 52 
				align center center
				icon lua "priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[rowNumber].key].groundicon"
				frame 0
				count lua "chargen.choose_spell[rowNumber].count"
			}
		}
		column
		{
			width 68
			label
			{
				area 4 0 -1 -1
				text lua "Infinity_FetchString(priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[rowNumber].key].name)"
				text style "normal"

				glow lua "chargen.choose_spell[rowNumber].enabled"
				align left center
				
			}
		}
		column
		{
			width 10
			button
			{
				area 0 4 45 45
				bam rgpbtpl
				ScaleToClip
				frame lua "currentCellCheck(3)"
				sequence 0
			}
		}
		column
		{
			width 10
			button
			{
				area 0 4 45 45
				bam rgpbtpl
				ScaleToClip
				frame lua "currentCellCheck(4)"
				sequence 1

			}
		}


		scrollbar	'rgpscrl'
		rowheight 52
		area 22 138 628 518
		table "chargen.choose_spell"
		var currentChargenMemorizePriestSpell
		action "
			if cellNumber == 3 then
				createCharScreen:OnMemorizePriestSpellButtonClick(currentChargenMemorizePriestSpell, 1)
			elseif cellNumber == 4 then
				createCharScreen:OnMemorizePriestSpellButtonClick(currentChargenMemorizePriestSpell, -1)
			end
		"
	}
	text
	{
		area 706 90 632 566
		text lua "priestMemorizeSpellOrGeneralHelp()"
		text style "normal"
		scrollbar	'rgpscrl'
	}

	label
	{
		area 370 82 168 48
		text "SPELLS_REMAINING_NORMAL"
		text style "normal"
		text align right center
	}
	label
	{
		area 538 82 54 48
		text lua "chargen.extraSpells"
		text style "normal"
		text align center center
	}

	button
    {
        on escape
        area 208 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "BACK_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
        action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
    }
    button
    {
        on return
        area 706 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "DONE_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick()"
	}

}
`
currentChargenCustomSound = 0

`
menu
{
	name 'CHARGEN_CUSTOMSOUNDS'
	align center center
	ignoreesc
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text	"SOUND_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				bam rgpslct
				sequence lua "rgGetChargenRowBackground(rowNumber, currentChargenCustomSound)"
				ScaleToClip
				
			}
			label
			{
				area 0 0 -1 -1
				text lua "getFileNameStringRef(rowNumber, chargen.customSound)"
				text style	"rg_trajan"
				pad 8 5 0 5
			}
		}
		area 20 86 630 576
		rowheight	45
		hideHighlight
		table		"chargen.customSound"
		var			"currentChargenCustomSound"
		scrollbar	'rgpscrl'
		action
		"
			createCharScreen:OnSoundItemSelect(currentChargenCustomSound-1)
		"
	}
	text
	{
		area 706 86 634 576
		text 24437
		scrollbar 'rgpscrl'
		text style	normal
	}
	button
	{
		area 462 676 442 76
		bam RGPBUT1
		ScaleToClip
		text "PLAY_SOUND_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		action "createCharScreen:OnPlayButtonClick()"
	}
	button
    {
        on escape
        area 16 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "BACK_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
        action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
    }
    button
    {
        on return
        area 908 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "DONE_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}
}

`
function hatedRaceOrGeneralHelp()
	race = chargen.hatedRace[currentChargenHatedRace]
	if race then
		return Infinity_FetchString(race.desc)
	else
		return Infinity_FetchString(17256)
	end
end
`
menu
{
	name 'CHARGEN_HATEDRACE'
	align center center
	ignoreesc
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text "HATED_RACE_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				bam rgpslct
				sequence lua "rgGetChargenRowBackground(rowNumber, currentChargenHatedRace)"
				ScaleToClip
				
			}
			label
			{
				area 0 0 -1 -1
				text lua "Infinity_FetchString(chargen.hatedRace[rowNumber].name)"
				text style "rg_trajan"
				pad 8 5 0 5
				
			}
		}
		action "
			if chargen.hatedRace[currentChargenHatedRace] then
				createCharScreen:OnRacialEnemySelectButtonClick(chargen.hatedRace[currentChargenHatedRace].id)
			end
			"
		rowheight 60
		hideHighlight
		area 24 90 626 564
		table "chargen.hatedRace"
		var currentChargenHatedRace
		scrollbar	'rgpscrl'
	}
	text
	{
		area 706 90 636 564
		text lua "hatedRaceOrGeneralHelp()"
		text style "normal"
		scrollbar	'rgpscrl'
	}
	button
    {
        on escape
        area 208 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "BACK_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
        action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
    }
    button
    {
        on return
        area 706 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "DONE_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}

}
`
charNameEdit = ""
`
menu
{
	name 'CHARGEN_NAME'
	modal
	align center top
	offset 0 50
	ignoreesc
	onopen 
	"
		if chargen.name then
			charNameEdit = chargen.name
		else
			charNameEdit = ''
		end
		Infinity_FocusTextEdit('charNameEditArea')
	"
	label
	{
		area 0 0 1000 220
		bam RGPCONT
		ScaleToClip

	}
	label
	{
		area 24 36 230 44
		text "NAME_LABEL"
		text style "rg_trajan"
		text color '$'
	}
	label
	{
		area 262 30 474 56
		fill        112 111 111 64
	}
	edit
	{
		name		"charNameEditArea"
		area		270 40 458 40
		var			charNameEdit
		text style	"edit"
		maxlines	1
		maxchars	20
	}
	button
	{
		on escape
		area 66 130 406 70
		bam RGPBUT1
		ScaleToClip
		text "BACK_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 522 130 406 70
		bam RGPBUT1
		ScaleToClip
		text "DONE_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}

}
`
createBioEdit = ""
`
menu
{
	name 'CHARGEN_BIO'
	align center center
	ignoreesc
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text "BIOGRAPHY_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	label
	{
		area 696 12 588 52
		text "ENTER_NAME_LABEL"
		text style "rg_trajan"
		text align right center
	}
	edit
	{
		name		"createBioEditArea"
		area		80 86 1204 566
		var			createBioEdit
		scrollbar	'rgpscrl'
		text style	"edit"
		fill        112 111 111 64
	}
	button
	{
		on escape
        area 16 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "BACK_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		action "createCharScreen:OnCancelButtonClick()"
	}
    
	button
	{
		area 462 676 442 76
		bam RGPBUT1
		ScaleToClip
		text "CLEAR_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		action "createBioEdit = ''"
	}
	button
    {
        on return
        area 908 676 442 76
        bam RGPBUT1
		ScaleToClip
		text "DONE_BUTTON"
		text style "rg_trajan"
		text align center center
		pad 30 5 30 5
		action "createCharScreen:OnDoneButtonClick()"
	}

}
`
list_GUICG_20_2_idx = 0
function NextOrDone()
	if createCharScreen:GetImportState() == 1 then
		return t("NEXT_BUTTON")
	else
		return t("DONE_BUTTON")
	end
end
`
menu
{
	name 'CHARGEN_IMPORT'
	align center center
	ignoreesc
	onOpen
	"
		list_GUICG_20_2_idx = 0
	"
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text "IMPORT_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "list_GUICG_20_2[rowNumber]"
				text style "list"
			}
		}
		area 34 250 496 418
		rowheight	34
		table		"list_GUICG_20_2"
		var			"list_GUICG_20_2_idx"
		scrollbar	'rgpscrl'
		action
		"
			Infinity_OnCharacterImportItemSelect(list_GUICG_20_2_idx - 1)
		"
	}
	text
	{
		area 574 190 418 412
		text 10963
		text style normal
		scrollbar 'rgpscrl'
	}
	button
	{
		on escape
		area 192 718 232 44
		bam GUIOSTUL
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu('CHARGEN_IMPORT'); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 438 718 206 44
		bam GUIOSTUM
		text lua "NextOrDone()"
		text style "button"
		clickable lua "list_GUICG_20_2_idx ~= 0"
		action "Infinity_PopMenu('CHARGEN_IMPORT'); createCharScreen:OnDoneButtonClick()"
	}

}

`
chargenExportCharacterEdit = ""
list_GUICG_21_2_idx = 0
`
menu
{
	name 'CHARGEN_EXPORT'
	align center center
	ignoreesc
	onopen "chargenExportListId = 0"
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "list_GUICG_21_2[rowNumber]"
				text style "list"
			}
		}
		area 36 264 384 340
		rowheight	18
		table		"list_GUICG_21_2"
		var			"chargenExportListId"
		scrollbar	'rgpscrl'
		action
		"
			createCharScreen:OnCharacterExportItemSelect(chargenExportListId - 1)
		"
	}
	text
	{
		area 484 192 506 412
		text 24461
		text style "normal"

	}
	label
	{
		area		82 624 298 23
		text		"EXPORT_FILENAME_LABEL"
		text style	"label"
		text color 3
	}
	edit
	{
		name		"chargenExportCharacterEditArea"
		area		82 642 298 26
		var			chargenExportCharacterEdit
		text style	"edit"
		maxlines	1
		fill        112 111 111 64
	}
	button
	{
		on escape
		area 198 718 234 44
		bam GUIOSTUL
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu('CHARGEN_EXPORT'); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 438 718 206 44
		bam GUIOSTUM
		text "DONE_BUTTON"
		text style "button"
		action "Infinity_PopMenu('CHARGEN_EXPORT'); createCharScreen:OnDoneButtonClick()"
	}
	
}
menu
{
	name 'CHARGEN_DUALCLASS'
	align center center
	ignoreesc
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text "DUALCLASS_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	label
	{
		area 62 124 363 42
		text lua "characters[currentID].name"
		text style "label"
	}
	label
	{
		area 459 124 363 42
		text lua "characters[currentID].class"
		text style "label"
	}
	label
	{
		area 136 191 177 243
		bitmap		lua "characters[currentID].portrait"
	}
	text
	{
		area 481 194 336 407
		text 10811 --dual class info
		text style "normal"
		scrollbar	'rgpscrl'
	}
	button
	{
		area 90 495 303 49
		clickable lua "createCharScreen:GetCurrentStep() == const.STEP_DUALCLASS_CLASS"
		bam GUIOSTCL
		text "CLASS_BUTTON"
		text style "button"
		action
		"
			createCharScreen:OnMenuButtonClick()
		"
	}
	button
	{
		area 90 544 303 49
		clickable lua "createCharScreen:GetCurrentStep() == const.STEP_DUALCLASS_PROFICIENCIES"
		bam GUIOSTCL
		text "SKILLS_BUTTON"
		text style "button"
		action
		"
			createCharScreen:OnMenuButtonClick()
		"
	}
	button
	{
		area 464 653 236 44
		bam GUIOSTUR
		clickable lua "createCharScreen:GetCurrentStep() == const.STEP_DUALCLASS_DONE"
		text "DONE_BUTTON"
		text style "button"
		action
		"
			createCharScreen:OnDoneButtonClick()
		"
	}
	button
	{
		area 210 653 236 44
		clickable "false"
		bam GUIOSTUL
		text "BACK_BUTTON"
		text style "button"
		action
		"
			createCharScreen:OnCancelButtonClick()
		"
	}
}
`
difficulties = 
{
	{name = "DIFFICULTY_LABEL_STORYMODE", 		description = "DIFFICULTY_DESCRIPTION_STORYMODE_BGEE"},
	{name = "DIFFICULTY_LABEL_EASY", 			description = "DIFFICULTY_DESCRIPTION_EASY_BGEE"},
	{name = "DIFFICULTY_LABEL_NORMAL", 			description = "DIFFICULTY_DESCRIPTION_NORMAL_BGEE"},
	{name = "DIFFICULTY_LABEL_CORERULES", 		description = "DIFFICULTY_DESCRIPTION_CORERULES_BGEE"},
	{name = "DIFFICULTY_LABEL_HARD", 			description = "DIFFICULTY_DESCRIPTION_HARD_BGEE"},
	{name = "DIFFICULTY_LABEL_INSANE", 			description = "DIFFICULTY_DESCRIPTION_INSANE_BGEE"},
	{name = "DIFFICULTY_LABEL_LEGACYOFBHAAL", 	description = "DIFFICULTY_DESCRIPTION_LEGACYOFBHAAL_BGEE"},
}
fromSinglePlayer = false
fromMultiPlayer = false
function WhoYouGonnaCall()	
	fromSinglePlayer = (createCharScreen:GetEngineState() == 1 or createCharScreen:GetEngineState() == 7) and multiplayerScreen:GetEngineState() ~= 1
end
`
menu
{
	name 'CHARGEN_DIFFICULTY'
	align center center
	ignoreesc
	onopen 
	"
		currentDifficulty = 3
		WhoYouGonnaCall()
	"
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text "DIFFICULTY_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	list
	{
		column 
		{ 
			width 10
			label
			{
				area 20 5 60 60
				bam "GUIDIFFS"
				frame lua "rowNumber-1"
				align center center
			}
		}
		column 
		{ 
			width 15
			label
			{
				area 0 0 -1 -1
				text lua "t( difficulties[rowNumber].name )"
				text style "rg_trajan"
				text point	10
				text align center center
			}
		}
		column 
		{ 
			width 75
			label
			{
				area 10 0 -1 -1
				text lua "t( difficulties[rowNumber].description )"
				text style "normal"
				text point	8
				text align left center
				--text color	B
			}
		}
		area 36 86 1296 572
		rowheight	69
		table		"difficulties"
		var			"currentDifficulty"
		scrollbar	'rgpscrl'
		action
		"
		"
	}
	button
	{
		on escape
		area 36 670 620 80
		bam RGPBUT1
		text 15416
		text style "rg_trajan"
		text align center center
		ScaleToClip
		Pad 30 5 30 5
		action 
		"
			Infinity_PopMenu()
			if(createCharScreen:GetEngineState() == 7) then
				--If we're in import character mode, go back to the import screen.
				e:SelectEngine(startEngine)
				startEngine:OnImportCharacterButtonClick()
			end
		"
	}
	button
	{
		area 712 670 620 80
		bam RGPBUT1
		text lua "t('VENTURE_FORTH')"
		text style "rg_trajan"
		text align center center
		ScaleToClip
		Pad 30 5 30 5
		enabled "fromSinglePlayer"
		action 
		"
			Infinity_PopMenu()
			createCharScreen:AcceptCharacter(currentDifficulty)
		"
	}
	button
	{
		area 558 712 300 44
		bam STARTMBT
		sequence 6
		text 11973
		text style "button"
		enabled "fromMultiPlayer"
		action 
		"
			Infinity_PopMenu()
			Infinity_PopMenu()
			Infinity_PopMenu()
			Infinity_PopMenu()

			if connectionLocalNetworkGame == 1 then
				connectionIsHosting = true
				chooseNetworkProtocol(2)
			end

			fromMultiPlayer = false
			mulitplayerPreexistingDifficulty = currentDifficulty
			connectionScreen:OnNewGameButtonClick()
		"
	}
}
`
currentHLASelection = nil
function chargenHLADescription()
	if currentHLASelection == nil then
		return rgGetGameEngineString(32711,32711,63817,34713) 
	else
		return Infinity_FetchString(chargen.HLAs[currentHLASelection].description)
	end
end
function chargenHLAPlusMinusFrame(cell, rownumber)
	if cell == 3 then
		if chargen.HLAs[rownumber].canAdd then
			return currentCellCheck(cell)
		else
			return 3
		end
	elseif cell == 4 then
		if chargen.HLAs[rownumber].canSubtract then
			return currentCellCheck(cell)
		else
			return 3
		end
	end
end
`
menu
{
	name 'CHARGEN_HIGH_LEVEL_ABILITIES'
	align center center
	ignoreesc
	modal
	onOpen 
	"
		currentHLASelection = nil
	"
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text "HIGH_LEVEL_ABILITIES_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	label
	{
		area 20 100 606 52
		text lua "chargen.numHLAs"
		text style "rg_trajan"
		align center center
	}
	text
	{
		area 664 100 660 560
		text lua "chargenHLADescription()"
		text style "normal"
		scrollbar	'rgpscrl'
	}
	
	list
	{
		column
		{
			width 80
			label
			{	
				enabled "chargen.HLAs[currentHLASelection] == chargen.HLAs[rowNumber]"
				area 0 0 -1 -1
				bam rgpslct
				ScaleToClip
			}
			label
			{
				bam GUIBTBUT
				area 0 0 52 52 
				align center center
				icon lua "chargen.HLAs[rowNumber].icon"
				glow lua "chargen.HLAs[rowNumber].count > 0"
				count lua "chargen.HLAs[rowNumber].count"
			}
			label
			{
				area 60 0 -1 -1
				text lua "Infinity_FetchString(chargen.HLAs[rowNumber].name)"
				text style "normal"
				align left center
				
			}
		}
		--column
		--{
		--	width 61
		--	label
		--	{
		--		area 4 0 -1 -1
		--		text lua "Infinity_FetchString(chargen.HLAs[rowNumber].name)"
		--		text style "normal"
		--		align left center
		--		
		--	}
		--}
		column
		{
			width 10
			label
			{
				area 0 4 45 45
				bam rgpbtpl
				ScaleToClip
				frame lua "chargenHLAPlusMinusFrame(3, rowNumber)"
				sequence 0
			}
		}
		column
		{
			width 10
			label
			{
				area 0 4 45 45
				bam rgpbtpl
				ScaleToClip
				frame lua "chargenHLAPlusMinusFrame(4, rowNumber)"
				sequence 1

			}
		}


		scrollbar	'rgpscrl'
		rowheight 52
		hideHighlight
		area 20 168 606 492
		table "chargen.HLAs"
		var currentHLASelection
		action 
		"
			print(chargen.HLAs[currentHLASelection].count)
			if cellNumber == 2 and chargenHLAPlusMinusFrame(3, currentHLASelection) ~= 3 then
				createCharScreen:OnHLAButtonClick(currentHLASelection, 1)
			elseif cellNumber == 3 and chargenHLAPlusMinusFrame(4, currentHLASelection) ~= 3 then
				createCharScreen:OnHLAButtonClick(currentHLASelection, -1)
			end
			cellNumber = nil
		"
	}
	button
	{
		area 450 678 496 80
		bam RGPBUT1
		text "DONE_BUTTON"
		text style "rg_trajan"
		text align center center
		ScaleToClip
		Pad 30 5 30 5
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action 
		"
			createCharScreen:OnDoneButtonClick()
		"
	}
}

`
TEXT_popup_big = 0
`
menu
{
	name 'POPUP_BIG'
	align center center
	modal
	label
	{
		area 0 0 512 651
		mosaic GUICONNB
	}
	text
	{
		area 88 64 328 426
		text lua "Infinity_FetchString(TEXT_popup_big)"
		text style	"label"
		text align left top
		scrollbar 'rgpscrl'
	}
	button
	{
		area 148 530 204 44
		bam GUIOSTUM
		text "DONE_BUTTON"
		text style	"button"
		action 
		"
			Infinity_PopMenu()
		"
	}
}


`
list_GUIMOVIE_0_0_idx = 0
`
menu
{
	name 'MOVIES'
	align center center

	button
	{
		on escape
		action
		"
			--Return to world screen on escape 
			e:SelectEngine(optionsScreen)
		"
	}
	
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 680 52
		text		"MOVIES_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 700 40
				text lua "list_GUIMOVIE_0_0[rowNumber].description"
				text style	"rg_trajan"
				text align left center
			}
		}
		area 16 82 700 644
		rowheight	40
		table		"list_GUIMOVIE_0_0"
		var		"list_GUIMOVIE_0_0_idx"
		scrollbar	'rgpscrl'
		action
		"
			moviesScreen:OnMovieItemSelect(list_GUIMOVIE_0_0[list_GUIMOVIE_0_0_idx].movieCode)
		"
	}
	button
	{
		area 756 354 574 88
		bam RGPBUT1
		text "PLAY_MOVIE_BUTTON"
		text style "rg_trajan"
		scaleToClip
		pad 30 5 30 5
		align center center
		action "moviesScreen:OnPlayButtonClick()"
	}
	button
	{
		area 756 82 574 88
		bam RGPBUT1
		text "CREDITS_MOVIE_BUTTON"
		text style "rg_trajan"
		scaleToClip
		pad 30 5 30 5
		align center center
		action "moviesScreen:OnCreditsButtonClick()"
	}
	button
	{
		area 750 638 574 88
		bam RGPBUT1
		text "DONE_BUTTON"
		text style "rg_trajan"
		scaleToClip
		pad 30 5 30 5
		align center center
		action 
		"
			Infinity_PopMenu('MOVIES')
			moviesScreen:OnDoneButtonClick()
		"
	}


}
`
--Multiplayer start.
mp_shownSessions = {}
selectedMp = 0
detailsStr = ""
passwordReq = 0
passwordMp = ""
connectionPlayerNameEdit = ""
connectionFilterNoPasswords = 0
connectionFilterNoFullGames = 0
selectedIndex = 0
connectionIsHosting = false

function connectionBuildGameList()
	local index = 1
	local count = 0
	local entryOK = true
	local foundSelected = false

	for index = 1, #(mp_sessions), 1 do
		entryOK = true
		Infinity_GetPasswordRequired(index)
		if mp_sessions[index] == nil then
			entryOK = false
		elseif mp_sessions[index]["flags"] == nil then
			entryOK = false
		elseif connectionFilterNoPasswords == 1 and passwordReq ~= 0 then
			entryOK = false
		elseif connectionFilterNoFullGames == 1 and mp_sessions[index]["players"] == 6 then 
			entryOK = false
		end

		if entryOK == true then
			count = count + 1
			mp_shownSessions[count] = {}
			mp_shownSessions[count]["actualIndex"] = index
			mp_shownSessions[count]["updated_at"] = mp_sessions[index]["updated_at"]

			if mp_sessions[index]['sessionIDString'] == selectedIndex then
				selectedMp = count
				foundSelected = true
			end
		end
	end

	local tableCount = #(mp_shownSessions) 
	while tableCount > count do
		mp_shownSessions[tableCount] = nil
		tableCount = tableCount - 1
	end

	if foundSelected == false then
		selectedMp = 0
	end
end
function chooseNetworkProtocol(num)
	connectionScreen:SelectServiceProvider(num)
end
function joinGameEnabled()
	if selectedMp <= 0 or mp_shownSessions[selectedMp]['actualIndex'] == nil then
		return 0
	else
		return 1
	end
end
function gameHasPassword(slot)
	if(mp_sessions[mp_shownSessions[slot]["actualIndex"]] == nil) then
		--if the session isn't loaded don't show anything.
		return ""
	end
	Infinity_GetPasswordRequired(mp_shownSessions[slot]["actualIndex"])
	if passwordReq ~= 0 then 
		ret = t("YES")
	else
		ret = t("NO")
	end
	return ret
end
function connectionGetGameName(slot)
	ret = ""

	ret = mp_sessions[mp_shownSessions[slot]["actualIndex"]]['name']

	return ret
end
function connectionGetNumPlayers(slot)
	ret = 0

	ret = mp_sessions[mp_shownSessions[slot]["actualIndex"]]['players']

	return ret
end
function connectionGetGameType(slot)
	ret = ""

	if mp_sessions[mp_shownSessions[slot]["actualIndex"]] ~= nil then
		if mp_sessions[mp_shownSessions[slot]["actualIndex"]]["version"] == "bgee-main" then
			ret = t("MAIN_GAME_LABEL")
		elseif mp_sessions[mp_shownSessions[slot]["actualIndex"]]["version"] == "bgee-bp" then
			ret = t("ARENA_MODE_LABEL")
		elseif mp_sessions[mp_shownSessions[slot]["actualIndex"]]["version"] == "bgee-sod" then
			ret = t("EXPANSION_LABEL")
		end
	end

	return ret
end
function matchMultiplayerGameType(gameVersion)
	if gameVersion == "bgee-main" then
		startEngine:OnSoAButtonClick(false)
		e:CheckGUISong()
	elseif gameVersion == "bgee-bp" then
		startEngine:OnTBPButtonClick(false)
		e:CheckGUISong()
	elseif gameVersion == "bgee-sod" then
		startEngine:OnCampaignButtonClick('SOD',false)
		e:CheckGUISong()
	end
end
`
menu
{
	name 'CONNECTION'
	align center center
	onOpen
	"
		connectionFilterNoPasswords = 0
		connectionFilterNoFullGames = 0
		connectionIsHosting = false
		connectionBuildGameList()

		if connectionPlayerNameEdit == '' then
			connectionSetDefaultGameSettings()
		end
	"
	label
	{
		area 0 0 1365 768
		bam RGBACKG
		ScaleToClip
	}
	label
	{
		area		16 12 488 52
		text		"JOIN_GAME_TITLE"
		text style	'rg_trajan'
		text color '$'
	}
	label
	{
		area 16 138 602 32
		text lua "t('GAME_NAME_LABEL')"
		text style "rg_trajan"
		align center center
	}
	label
	{
		area 626 138 168 32
		text lua "t('PASSWORD_LABEL')"
		text style "rg_trajan"
		align center center
	}
	label
	{
		area 832 138 130 32
		text lua "t('PLAYERS_LABEL')"
		text style "rg_trajan"
		align center center
	}
	label
	{
		area 1050 138 222 32
		text lua "t('GAME_TYPE_LABEL')"
		text style "rg_trajan"
		align center center
	}
	list -- Multiplayer sessions
	{
		column 
		{ 
			width 50 
			label
			{
				area 20 0 500 40
				text lua "connectionGetGameName(rowNumber)"
				text style	"normal"
				align left center 
				--text point  8
			}

		}
		column 
		{ 
			width 15 
			label
			{
				area 20 0 210 40
				text lua "gameHasPassword(rowNumber)"
				text style	"normal"
				align left center 
				--text point  8
			}

		}
		column 
		{ 
			width 15 
			label
			{
				area 20 0 210 40
				text lua "connectionGetNumPlayers(rowNumber)"
				text style	"normal"
				align left center 
				--text point  8
			}

		}
		column 
		{ 
			width 20 
			label
			{
				area 20 0 210 40
				text lua "connectionGetGameType(rowNumber)"
				text style	"normal"
				align left center 
				--text point  8
			}

		}

		area 16 176 1328 474
		
		rowheight	44
		table		"mp_shownSessions"
		var			selectedMp
		scrollbar	'rgpscrl'
		action
		"
			selectedIndex = mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['sessionIDString']
		"
	}

	label -- player name
	{
		area 540 26 218 39
		text  "PLAYER_NAME_LABEL"
		text style	"rg_trajan"
	}
	label
	{
		area 540 74 218 54
		fill 112 111 111 64
	}
	edit
	{
		name		"ConnectionPlayerNameEditArea"
		area		544 80 210 42
		var			connectionPlayerNameEdit
		text 		style "edit"
		text align  center center
		maxlines	1
		maxchars 	32
	}

	label -- filter options
	{
		area		902 26 324 34
		text style	"rg_trajan"
		align left center 
		text		"CONNECTION_NOT_PASSWORD_PROTECTED_LABEL"
		tooltip lua "t('CONNECTION_NO_PASSWORDS_TOOLTIP')"
	}
	button
	{
		area		846 20 45 45
		bam 		RGRNDBUT
				ScaleToClip
		glow lua	"connectionFilterNoPasswords"
		tooltip lua "t('CONNECTION_NO_PASSWORDS_TOOLTIP')"
		action
		"
			connectionFilterNoPasswords = 1 - connectionFilterNoPasswords
			connectionBuildGameList()
		"
	}
	label
	{
		area		902 81 324 34
		text style	"rg_trajan"
		align left center 
		text		"CONNECTION_NOT_FULL_LABEL"
		tooltip lua "t('CONNECTION_NO_FULL_GAMES_TOOLTIP')"
	}
	button
	{
		area		846 74 45 45
		bam 		RGRNDBUT
				ScaleToClip
		glow lua	"connectionFilterNoFullGames"
		tooltip lua "t('CONNECTION_NO_FULL_GAMES_TOOLTIP')"
		action
		"
			connectionFilterNoFullGames = 1 - connectionFilterNoFullGames
			connectionBuildGameList()
		"
	}

	button -- Create game
	{
		area		16 74 488 54
		bam			RGPBUT1
		text  		"CONNECTION_CREATE_NEW_GAME_BUTTON"
		text style	"rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		action
		"
			Infinity_PushMenu('CONNECTION_CREATE')
		"	
	}
	button -- Direct Connect
	{
		area		912 668 432 80
		bam			RGPBUT1
		text  		"CONNECTION_DIRECT_CONNECTION_BUTTON"
		text style	"rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		tooltip lua "t('CONNECTION_DIRECT_CONNECT_TOOLTIP')"
		action
		"
			connectionIsHosting = false
			chooseNetworkProtocol(2)
		"	
	}
	button -- refresh
	{
		area		1242 20 94 95
		bam 		'GUMPBUTX'
		sequence 	2
		align 		center center
		tooltip lua "t('CONNECTION_REFRESH_TOOLTIP')"
		action
		"
			selectedMp = 0
			mp_shownSessions = {}
			mp_sessions = {}
			connectionScreen:ClearSessions()
		"
	}

	button -- Join game
	{
		area		464 668 432 80
		bam			RGPBUT1
		text  "JOIN_BUTTON"
		text style	"rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		clickable lua	"joinGameEnabled()"
		action
		"
			Infinity_GetPasswordRequired(mp_shownSessions[selectedMp]['actualIndex'])
			if string.find(connectionPlayerNameEdit, '%S') == nil then
				Infinity_PushMenu('CONNECTION_NAME')
			elseif passwordReq == 0 then
				Infinity_PopMenu(); 
				Infinity_PopMenu(); 
				mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['password'] = passwordMp
				Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
			else
				Infinity_PushMenu('CONNECTION_PASSWORD')
			end
		"	
	}
	button -- Back/ Log out
	{
		area		16 668 432 80
		bam			RGPBUT1
		text  "BACK_BUTTON"
		text style	"rg_trajan"
		align center center
		pad 30 5 30 5
		ScaleToClip
		on 			escape
		action
		"
			Infinity_PopMenu();
			connectionScreen:OnMainCancelButtonClick()
		"	
	}
}
`
connectionTCPIPEdit = ""
`
menu
{
	name 'CONNECTION_IP'
	modal
	align center center

	onopen "Infinity_FocusTextEdit('ConnectionTCPIPEditArea')"
	label
	{
		area 0 0 680 242
		mosaic GUIERR6 
	}
	label --Title
	{
		area 38 20 592 64
		text  20681
		text style	"label"
	}
	button
	{
		area		360 170 298 44
		bam		GUIOSTCL
		sequence	0
		text  "DONE_BUTTON"
		text style	"button"
		on		return
		clickable lua "connectionScreen:IsValidAddress(connectionTCPIPEdit)"
		action
		"
			Infinity_PopMenu();
			connectionScreen:JoinGameIPAddress(connectionTCPIPEdit)
		"	
	}
	button
	{
		area		24 170 298 44
		bam		GUIOSTCL
		sequence	1
		text  "CANCEL_BUTTON"
		text style	"button"
		on 		escape
		action
		"
			Infinity_PopMenu();
			chooseNetworkProtocol(1)
		"	
	}
	
	label
	{
		area 56 84 542 34
		fill 112 111 111 64
	}
	
	edit
	{
		name		"ConnectionTCPIPEditArea"
		area		60 90 532 24
		var		connectionTCPIPEdit
		text style	"edit"
		maxlines	1
	}
}
`
connection = {}
connectionSessionNameEdit = ""
connectionSessionPasswordEdit = ""
connectionPasswordProtected = 0
connectionLocalNetworkGame = 0

function connectionCreateGameClickable()
	local ret = string.find(connectionPlayerNameEdit, '%S') ~= nil and string.find(connectionSessionNameEdit, '%S') ~= nil

	if connectionPasswordProtected == 1 then
		ret = ret and string.find(connectionSessionPasswordEdit, '%S') ~= nil
	end

	return ret
end
function connectionSetDefaultGameSettings() 
	local player = t("MULTIPLAYER_DEFAULT_PLAYER")
	local game = t("MULTIPLAYER_ENTER_GAME_NAME")
	local pass = t("MULTIPLAYER_ENTER_GAME_PASSWORD")

	if connectionPlayerNameEdit == "" then
		connectionPlayerNameEdit = Infinity_GetINIString('Multiplayer', 'Player Name', player)
		Infinity_SetINIValue('Multiplayer', 'Player Name', connectionPlayerNameEdit)
	end

	if connectionSessionPasswordEdit == "" then
		connectionSessionPasswordEdit = Infinity_GetINIString('Multiplayer', 'Session Password', pass)
		Infinity_SetINIValue('Multiplayer', 'Session Password', connectionSessionPasswordEdit)
	end

	if connectionSessionNameEdit == "" then
		connectionSessionNameEdit = Infinity_GetINIString('Multiplayer', 'Session Name', game)
		Infinity_SetINIValue('Multiplayer', 'Session Name', connectionSessionNameEdit)
	end

	if connectionSessionPasswordEdit ~= "" then
		connectionPasswordProtected = 1
	else
		connectionPasswordProtected = 0
	end

	if connectionScreen:HasServiceProvider() then
		connectionLocalNetworkGame = 0
	else
		connectionLocalNetworkGame = 1
	end
end
`
menu
{
	name 'CONNECTION_CREATE'
	align center center
	ignoreEsc
	modal

	onOpen
	"
		connectionSetDefaultGameSettings()
	"

	label
	{
		area 0 0 512 651
		mosaic "GUICONNB"
	}
	label
	{
		area		54 6 392 32
		text		style 'title'
		text		"CREATEGAME_TITLE"
	}
	
	label -- player
	{
		area		80 69 340 45
		text		style 'label'
		text		"PLAYER_NAME_LABEL"
	}
	edit
	{
		name		"connectionPlayerNameEditArea"
		area		80 114 340 45
		var			connectionPlayerNameEdit
		text 		style "edit"
		text align  center center
		maxlines	1
		maxchars 	32
		fill        112 111 111 64
	}

	label -- session
	{
		area		80 159 340 45
		text		style 'label'
		text		"SESSION_NAME_LABEL"
	}
	edit
	{
		name		"connectionSessionNameEditArea"
		area		80 204 340 45
		var			connectionSessionNameEdit
		text 		style	"edit"
		text 		align center center
		maxlines	1
		fill        112 111 111 64
	}


	text -- password option
	{
		area		179 259 241 45
		text		style 'label'
		text		"CONNECTION_PASSWORD_PROTECTED"
		tooltip lua "t('CONNECTION_PASSWORD_PROTECTED_TOOLTIP')"
		align 		left center
	}
	button
	{
		area		134 259 45 45
		bam 		RGRNDBUT
				ScaleToClip
		glow lua	"connectionPasswordProtected"
		align 		center center
		tooltip lua "t('CONNECTION_PASSWORD_PROTECTED_TOOLTIP')"
		action
		"
			connectionPasswordProtected = 1 - connectionPasswordProtected
			if connectionPasswordProtected == 1 then
				Infinity_FocusTextEdit('connectionSessionPasswordEditArea')
			end
		"
	}

	text -- local option
	{
		area		179 304 241 45
		text		style 'label'
		text		"CONNECTION_LOCAL_NETWORK_GAME"
		tooltip lua "t('CONNECTION_LOCAL_NETWORK_GAME_TOOLTIP')"
		align 		left center
	}
	button
	{
		area		134 304 45 45
		bam 		RGRNDBUT
				ScaleToClip
		glow lua	"connectionLocalNetworkGame"
		align 		center center
		tooltip lua "t('CONNECTION_LOCAL_NETWORK_GAME_TOOLTIP')"
		action
		"
			if connectionScreen:HasServiceProvider() then
				connectionLocalNetworkGame = 1 - connectionLocalNetworkGame
			end
		"
	}

	label -- password
	{
		area		80 363 340 45
		text		style 'label'
		text		"CHOOSE_PASSWORD_LABEL"
		enabled 	connectionPasswordProtected
	}
	edit
	{
		name		"connectionSessionPasswordEditArea"
		area		80 408 340 45
		var			connectionSessionPasswordEdit
		text 		style "edit"
		text 		align center center
		maxlines	1
		enabled 	connectionPasswordProtected
		fill        112 111 111 64
	}
	button
	{
		clickable lua 	"connectionCreateGameClickable()"
		area			152 530 204 48
		bam				'GUIOSTUM'	
		text style		"button"
		text			"CREATEGAME_BUTTON"
		action		
		"
			local stringStart = string.find(connectionPlayerNameEdit, '%S');
			connectionPlayerNameEdit = string.sub(connectionPlayerNameEdit, stringStart, string.len(connectionPlayerNameEdit))
			stringStart = string.find(connectionSessionNameEdit, '%S');
			connectionSessionNameEdit = string.sub(connectionSessionNameEdit, stringStart, string.len(connectionSessionNameEdit))

			if connectionPasswordProtected == 1 then
				stringStart = string.find(connectionSessionPasswordEdit, '%S');
				connectionSessionPasswordEdit = string.sub(connectionSessionPasswordEdit, stringStart, string.len(connectionSessionPasswordEdit))
			end
	
			if connectionPasswordProtected == 0 then
				connectionSessionPasswordEdit = ''
			end

			Infinity_PushMenu('CONNECTION_NEWORSAVED')
		"
	}
	button
	{
		area		152 578 206 48
		bam			'GUIOSTUM'	
		text style	"button"
		text		"BACK_BUTTON"
		action		
		"
			Infinity_PopMenu()
		"
	}
}
menu
{
	name 'CONNECTION_NEWORSAVED'
	align center center
	modal

	label
	{
		area 0 4 684 240
		mosaic "GUIERR6"
	}
	label
	{
		area		40 28 600 38
		text		style 'title'
		text		"CONNECTION_NEW_OR_SAVED_GAME_TITLE"
	}
	label
	{
		area		36 88 600 45
		text		style 'label'
		text		"CONNECTION_SELECT_GAME_TYPE_LABEL"
	}

	button
	{
		bam 		GUIOSW
		on esc
		area 		636 7 44 44
		sequence 	2
		action 
		"	
			Infinity_PopMenu()
		"
	}

	button
	{
		area		244 178 202 48
		bam			'GUIOSTUM'	
		text style	"button"
		text		"NEW_GAME_BUTTON"
		tooltip lua "t('CONNECTION_NEW_GAME_TOOLTIP')"
		action		
		"
			fromMultiPlayer = true
			Infinity_PushMenu('CHARGEN_DIFFICULTY')
		"
	}
	button
	{
		area		456 178 202 48
		bam			'GUIOSTUM'	
		text style	"button"
		text		"LOAD_BUTTON"
		tooltip lua "t('CONNECTION_LOAD_GAME_TOOLTIP')"
		action		
		"
			Infinity_PopMenu()
			Infinity_PopMenu()
			Infinity_PopMenu()

			if connectionLocalNetworkGame == 1 then
				connectionIsHosting = true
				chooseNetworkProtocol(2)
			end

			connectionScreen:OnLoadGameButtonClick()
		"
	}

	button
	{
		area		28 178 204 48
		bam			'GUIOSTUM'	
		text style	"button"
		text		"BACK_BUTTON"
		action		
		"
			Infinity_PopMenu()
		"
	}
}
`
connectionPasswordPasswordEdit = ""
`
menu
{
	name 'CONNECTION_PASSWORD'
	align center center
	modal
	onOpen
	"
		if mp_sessions[selectedMp]['name'] == Infinity_GetINIString('Multiplayer', 'Session Name', '') then
			connectionPasswordPasswordEdit = Infinity_GetINIString('Multiplayer', 'Session Password', '')
		else
			connectionPasswordPasswordEdit = ''
		end
		Infinity_FocusTextEdit('connectionPasswordPasswordEditArea')
	"

	label
	{
		area 0 0 682 240
		mosaic "GUIERR6"
	}
	label
	{
		area		38 14 602 45
		text		style 'title'
		text		"PASSWORD_REQUIRED_LABEL"
	}
	label
	{
		area		38 59 602 29
		text		style 'label'
		text		"ENTER_PASSWORD_LABEL"
	}

	button
	{
		bam 		GUIOSW
		on esc
		area 		634 0 44 44
		sequence 	2
		action 
		"	
			Infinity_PopMenu()
		"
	}

	edit
	{
		name		"connectionPasswordPasswordEditArea"
		area		38 88 602 50
		var			connectionPasswordPasswordEdit
		text style	"edit"
		text align 	center center
		maxlines	1
		fill        112 111 111 64
		action
		"
			--On return pressed
			if (key_pressed == 13) then
				local stringStart = string.find(connectionNameNameEdit, '%S')
				if stringStart ~= nil then
					local stringStart = string.find(connectionPasswordPasswordEdit, '%S')
					mp_sessions[selectedMp]['password'] = string.sub(connectionPasswordPasswordEdit, stringStart, string.len(connectionPasswordPasswordEdit) )
					Infinity_PopMenu()
					Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
				end
				return -1
			end
			return 1
		"
	}

	button
	{
		area		442 170 204 46
		bam			'GUIOSTUM'	
		text style	"button"
		text		"DONE_BUTTON"
		clickable lua "connectionPasswordPasswordEdit ~='' and string.find(connectionPasswordPasswordEdit, '%S') ~= nil"
		action		
		"
			Infinity_PopMenu(); 
			local stringStart = string.find(connectionPasswordPasswordEdit, '%S')
			mp_sessions[selectedMp]['password'] = string.sub(connectionPasswordPasswordEdit, stringStart, string.len(connectionPasswordPasswordEdit) )
			Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
		"
	}

	button
	{
		area		34 170 204 48
		bam			'GUIOSTUM'	
		text style	"button"
		text		"BACK_BUTTON"
		action		
		"
			Infinity_PopMenu()
		"
	}
}
`
connectionNameNameEdit = ""
`
menu
{
	name 'CONNECTION_NAME'
	align center center
	modal
	onOpen
	"
		connectionNameNameEdit = ''
		Infinity_FocusTextEdit('connectionNameNameEditArea')
	"

	label
	{
		area 0 0 682 240
		mosaic "GUIERR6"
	}
	label
	{
		area		12 16 632 70
		text		style 'title'
		text  		"PLAYER_NAME_LABEL"
	}

	button
	{
		bam 		GUIOSW
		on esc
		area 		634 0 44 44
		sequence 	2
		action 
		"	
			Infinity_PopMenu()
		"
	}

	edit
	{
		name		"connectionNameNameEditArea"
		area		38 88 602 50
		var			connectionNameNameEdit
		text style	"edit"
		text align 	center center
		maxlines	1
		fill        112 111 111 64
		action
		"
			--On return pressed
			if (key_pressed == 13) then
				local stringStart = string.find(connectionNameNameEdit, '%S')
				if stringStart ~= nil then
					connectionPlayerNameEdit = string.sub(connectionNameNameEdit, stringStart, string.len(connectionNameNameEdit) )
					Infinity_PopMenu()

					Infinity_GetPasswordRequired(mp_shownSessions[selectedMp]['actualIndex'])
					if passwordReq == 0 then
						Infinity_PopMenu(); 
						Infinity_PopMenu(); 
						mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['password'] = passwordMp
						Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
					else
						Infinity_PushMenu('CONNECTION_PASSWORD')
					end
				end
				return -1
			end
			return 1
		"
	}

	button
	{
		area		442 170 204 46
		bam			'GUIOSTUM'	
		text style	"button"
		text		"DONE_BUTTON"
		clickable lua "connectionNameNameEdit ~='' and string.find(connectionNameNameEdit, '%S') ~= nil"
		action		
		"
			Infinity_PopMenu(); 
			local stringStart = string.find(connectionNameNameEdit, '%S')
			connectionPlayerNameEdit = string.sub(connectionNameNameEdit, stringStart, string.len(connectionNameNameEdit) )

			Infinity_GetPasswordRequired(mp_shownSessions[selectedMp]['actualIndex'])
			if passwordReq == 0 then
				Infinity_PopMenu(); 
				Infinity_PopMenu(); 
				mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['password'] = passwordMp
				Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
			else
				Infinity_PushMenu('CONNECTION_PASSWORD')
			end
		"
	}

	button
	{
		area		34 170 204 48
		bam			'GUIOSTUM'	
		text style	"button"
		text		"BACK_BUTTON"
		action		
		"
			Infinity_PopMenu()
		"
	}
}
menu
{
	name 'CONNECTION_PLAYERNAME'
	align center center
	ignoreEsc
	modal

	onOpen
	"
		connectionPlayerNameEdit = Infinity_GetINIString('Multiplayer', 'Player Name', 'Player Name')
		Infinity_FocusTextEdit('connectionPlayerNameEditArea')
	"
	label
	{
		area 0 0 512 651
		mosaic "GUICONNB"
	}
	label
	{
		area 83 59 338 32
		text style "label"
		text "CURRENT_PLAYERS_LABEL"
	}
	label
	{
		area 83 446 338 32
		text style "label"
		text "PLAYER_NAME_LABEL"
	}

	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "connection.currentPlayers[rowNumber].name"
				text style "edit"
				align center center
			}
		}

		action 
		"
		"

		rowheight 50
		area 83 99 338 338
		table "connection.currentPlayers"
		var connectionSelectedPlayer
	}

	edit
	{
		name		"connectionPlayerNameEditArea"
		area		110 479 280 35
		var			connectionPlayerNameEdit
		text style	"edit"
		text align  center center
		maxlines	1
		maxchars 	32
		fill        112 111 111 64
	}
	button
	{
		clickable 	lua "connectionPlayerNameEdit ~= ''"
		area		154 538 204 44
		bam			GUIOSTUM
		sequence	0
		text  		"DONE_BUTTON"
		text style	"button"
		on			return
		action
		"
			Infinity_PopMenu();
			Infinity_PopMenu();
			connectionScreen:SetPlayerName(connectionPlayerNameEdit)
		"	
	}
}

menu
{
	name 'CONNECTION_JOINING'
	modal
	align center center

	label
	{
		area 0 0 680 234
		mosaic GUIERR6 
	}
	label --Title
	{
		area 40 20 600 64
		text  20274
		text style	"label"
	}
	button
	{
		area		192 172 302 44
		bam		GUIOSTCL
		sequence	0
		text  		"CANCEL_BUTTON"
		text style	"button"
		on		escape
		action
		"
			Infinity_PopMenu();
		"	
	}
}
menu
{
	name 'CONNECTION_ERROR'
	modal
	align center center

	label
	{
		area 0 0 410 420
		mosaic GUIERR
	}
	label --Title
	{
		area 60 100 286 64
		text lua "Infinity_FetchString(CONNECTION_ERROR_MESSAGE)"
		text style	"label"
	}
	button
	{
		area		104 320 202 44
		bam			GUIOSTUM
		sequence	0
		text  		"CANCEL_BUTTON"
		text style	"button"
		on		escape
		action
		"
			Infinity_PopMenu();
		"	
	}
}

menu
{
	name 'CONNECTION_WAITING_FOR_PROVIDER'
	modal
	align center center

	label
	{
		mosaic 'GUIERR6'
		area 0 0 682 238
	}
	label --Title
	{
		area 44 20 590 106
		text "CONNECTION_FINDING_DEVICES"
		text style	"label"
	}
	button
	{
		area 		26 170 300 44
		bam			GUIOSTCL
		sequence	0
		text  		"CANCEL_BUTTON"
		text style	"button"
		on			escape
		action
		"
			Infinity_PopMenu('CONNECTION_WAITING_FOR_PROVIDER')
			Infinity_PopMenu('CONNECTION');
			connectionScreen:OnMainCancelButtonClick()
		"	
	}
	button
	{
		area 		354 170 300 44
		bam			GUIOSTCL
		sequence	0
		text  		"CONNECTION_LOCAL_NETWORK_GAME"
		text style	"button"
		on			return
		action
		"
			Infinity_PopMenu('CONNECTION_WAITING_FOR_PROVIDER')
			connectionScreen:StopConnectingToProvider()
		"	
	}
}

menu
{
	name 'CONNECTION_WAITING_FOR_SERVER'
	modal
	align center center

	label
	{
		area 0 0 408 418
		mosaic GUIERR
	}
	label --Title
	{
		area 70 78 258 84
		text "CONNECTION_WAITING_FOR_SERVER"
		text style	"label"
	}
	button
	{
		area		104 320 202 44
		bam			GUIOSTUM
		sequence	0
		text  		"CANCEL_BUTTON"
		text style	"button"
		on		escape
		action
		"
			Infinity_PopMenu('CONNECTION_WAITING_FOR_SERVER')
			connectionScreen:CancelJoinGame();
		"	
	}
}

menu
{
	name 'BACKGROUND'
	align center center
	label
	{
		area 0 0 3840 2160
		fill 0 0 0 255
	}
}

`
multiplayer = {}
mpChatEdit = ""
mpHelpTextString = ""
mpModifyingCharacter = -1
mpErrorText = -1
mpErrorState = -1
text_GUIMP_0_25 = ""
text_GUIMP_0_25_lines = 0
multiplayerInPermission = false
multiplayerInPermissionForPlayer = 0

multiplayerSessionName = ""
multiplayerSaveName = ""
multiplayerChapter = ""
multiplayerTimePlayed = ""
multiplayerDifficultyLabel = ""
multiplayerDifficultyImage = 0
mulitplayerPreexistingDifficulty = 0;

multiplayerLocalPlayerID = 1

multiplayerFromInGame = false

mpaCharacters = 
{
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"}
}

mpaPlayers =
{
	{name = "", id = 0, color = "0x7a7aFF"},
	{name = "", id = 0, color = "0xFFAF7A"},
	{name = "", id = 0, color = "0x7aFFa3"},
	{name = "", id = 0, color = "0x57F9FF"},
	{name = "", id = 0, color = "0xF2F188"},
	{name = "", id = 0, color = "0xFE97FF"}
}

function updateMultiplayerPlayerSlot(slot,setting,value)
	if multiplayerLocalPlayerID == 1 and setting == "name" and mpaPlayers[slot][setting] == "" and value ~= "" then
		mpaPlayers[slot][setting] = value
		broadcastPlayerAdded(slot)
	elseif multiplayerLocalPlayerID == 1 and setting == "name" and mpaPlayers[slot][setting] ~= "" and value == "" then
		broadcastPlayerRemoved(slot)
		mpaPlayers[slot][setting] = value
	else
		mpaPlayers[slot][setting] = value
	end
end
function updateMultiplayerCharacterSlot(slot,setting,value)
	if multiplayerLocalPlayerID == 1 and setting == "color" and mpaCharacters[slot][setting] == "0xffffff" and value ~= "0xffffff" then
		mpaCharacters[slot][setting] = value
		broadcastCharacterAdded(slot)
	elseif multiplayerLocalPlayerID == 1 and setting == "ready" and mpaCharacters[slot][setting] == false and value == true then
		broadcastCharacterReady(slot)
		mpaCharacters[slot][setting] = value
	elseif multiplayerLocalPlayerID == 1 and setting == "ready" and mpaCharacters[slot][setting] == true and value == false then
		broadcastCharacterNotReady(slot)
		mpaCharacters[slot][setting] = value
	else
		mpaCharacters[slot][setting] = value
	end
end

function clearCharacterSlot(slot, announce)
	if announce == true and mpaCharacters[slot]['name'] ~= "" then
		broadcastCharacterRemoved(slot)
	end
	mpaCharacters[slot]['ready'] = false
	mpaCharacters[slot]['name'] = ""
	mpaCharacters[slot]['class'] = ""
	mpaCharacters[slot]['portrait'] = "NOPORTLS"
	mpaCharacters[slot]['inprogress'] = false
	mpaCharacters[slot]['color'] = "0xffffff"
end

function clearPlayerSlot(slot, announce)
	if announce == true and mpaPlayers[slot]["name"] ~= "" then
		broadcastPlayerRemoved(slot)
	end
	mpaPlayers[slot]["name"] = ""
	mpaPlayers[slot]["id"] = 0
end

function getMultiplayerCharacterName(slot, newLine, getClass)
	local ret = ""
	local separator = ", "

	if newLine == true then
		separator = "\n"
	end

	if mpaCharacters[slot]["name"] == "" and multiplayerLocalPlayerID == mpaCharacters[slot]["player"] then
		ret = t("MULTIPLAYER_CREATE_CHARACTER_MESSAGE")
	elseif mpaCharacters[slot]["name"] == "" and multiplayerLocalPlayerID ~= mpaCharacters[slot]["player"] and mpaCharacters[slot]["inprogress"] == false then
		ret = t("MULTIPLAYER_EMPTY_CHARACTER_MESSAGE")
	elseif mpaCharacters[slot]["inprogress"] == true and mpaCharacters[slot]["class"] == "" then
		setStringTokenLua("<PLAYER_NAME_1>",getMultiplayerPlayerName(mpaCharacters[slot]["player"], false, true))
		setStringTokenLua("<SEPERATOR>",separator)
		ret = t("MULTIPLAYER_CREATING_CHARACTER_MESSAGE")
		removeStringTokenLua("<SEPERATOR>")
		removeStringTokenLua("<PLAYER_NAME_1>")
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] ~= "" then
		ret = "^0xff"..mpaCharacters[slot]["color"]..mpaCharacters[slot]["name"].."^-"
		if getClass == true then
			ret = ret..separator..mpaCharacters[slot]["class"]
		end
	end

	return ret
end
function getMultiplayerCharacterButtonText(slot)
	local ret = ""

	if mpaCharacters[slot]["name"] == "" and multiplayerLocalPlayerID == mpaCharacters[slot]["player"] then
		ret = t("CREATE_CHAR_BUTTON")
	elseif mpaCharacters[slot]["name"] == "" and multiplayerLocalPlayerID ~= mpaCharacters[slot]["player"] then
		ret = ""
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] == "" then
		ret = ""
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] ~= "" and mpaCharacters[slot]["player"] ~= multiplayerLocalPlayerID then
		ret = t("MULTIPLAYER_VIEW_DETAILS_BUTTON")
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] ~= "" and mpaCharacters[slot]["player"] == multiplayerLocalPlayerID and multiplayer.allowreformparty == false and multiplayerDifficultyLabel ~= "" then
		ret = t("MULTIPLAYER_VIEW_DETAILS_BUTTON")
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] ~= "" and mpaCharacters[slot]["player"] == multiplayerLocalPlayerID then
		ret = t("MULTIPLAYER_EDIT_CHAR_BUTTON")
	end

	return ret
end
function shouldGreyscaleEditButton(slot)
	local ret = false
	local storedString = t("MULTIPLAYER_VIEW_DETAILS_BUTTON")

	if multiplayerFromInGame == true then
		ret = true
	end

	if ret == true and getMultiplayerCharacterButtonText(slot) == storedString  then
		ret = false
	end

	if ret == true and (multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[7] == true) then
		ret = false
	end

	if ret == true and mpaCharacters[slot]["name"] == "" then
		ret = false
	end

	if ret == false and mpaCharacters[slot]['ready'] == true and getMultiplayerCharacterButtonText(slot) ~= storedString and multiplayerFromInGame == false then
		ret = true
	end

	return ret
end
function getMultiplayerCharacterReadyText(slot)
	local ret = ""

	if mpaCharacters[slot]["name"] == "" and mpaCharacters[slot]["inprogress"] == false then
		ret = ""
	elseif mpaCharacters[slot]["ready"] == false then
		ret = t("MULTIPLAYER_NOT_READY_MESSAGE")
	elseif mpaCharacters[slot]["ready"] == true then
		ret = t("MULTIPLAYER_READY_MESSAGE")
	end

	return ret
end
function getMultiplayerPlayerName(slot,newLine,hostyou)
	local ret = mpaPlayers[slot]["name"]
	if ret ~= "" then
		ret = "^0x"..mpaPlayers[slot]["color"]..mpaPlayers[slot]["name"].."^-"
	end

	local separator = " "
	if newLine == true then
		separator = "\n"
	end

	if hostyou == true then
		if slot == multiplayerLocalPlayerID then
			ret = ret..separator.."^0xFFFFFFFF"..t("MULTIPLAYER_PLAYER_YOU").."^-"
		elseif slot == 1 then
			ret = ret..separator.."^0xFFFFFFFF"..t("MULTIPLAYER_PLAYER_HOST").."^-"
		elseif ret == "" then
			ret = "^0xFF9B9B9B"..t("MULTIPLAYER_EMPTY_PLAYER").."^-"
		end
	end

	return ret
end
function getMultiplayerPlayerControlledCharacter(player,slot)
	local count = 0
	local ret = "NOCTRL" -- need blank square or something

	local index = 1
	for index = 1, 6, 1 do
		if mpaCharacters[index]["player"] == player then
			count = count + 1
		end

		if count == slot then
			ret = mpaCharacters[index]["portrait"]
			break
		end
	end

	return ret
end
function getMultiplayerPlayerControlledCharacterSlot(player,slot)
	local count = 0
	local ret = -1

	local index = 1
	for index = 1, 6, 1 do
		if mpaCharacters[index]["player"] == player then
			count = count + 1
		end

		if currentMultiplayerSelectPlayer == player and mpDraggedCharacter == index then
			slot = slot + 1
		end

		if count == slot then
			ret = index
			break
		end
	end

	return ret
end

function getPlayerKickWidth(slot)
	if multiplayerLocalPlayerID ~= 1 or slot == 1 then
		return 0
	else
		return 10
	end
end

function getPlayerNameWidth(slot)
	if multiplayerLocalPlayerID ~= 1 or slot == 1 then
		return 45
	else
		return 35
	end
end

function getStartGameButtonTooltip()
	if multiplayer.donebuttonclickable then
		return ""
	else
		return t("MULTIPLAYER_CANNOT_START")
	end
end

function updateMultiplayerSessionData(sessionName, saveName, chapterText, timePlayed, difficulty)
	local gold = "^0xffc7f8fb"
	multiplayerSessionName = gold..sessionName.."^-"

	if areaName ~= "" then
		multiplayerSaveName = gold..t("MULTIPLAYER_SAVED_GAME_LABEL").."^- ^0xffffffff"..saveName.."^-"
		multiplayerChapter = gold..t("MULTIPLAYER_CHAPTER_LABEL").."^- ^0xffffffff"..chapterText.."^-"
		multiplayerTimePlayed = gold..t("MULTIPLAYER_TIME_PLAYED_LABEL").."^- ^0xffffffff"..timePlayed.."^-"
		if difficulty > 0 then
			mulitplayerPreexistingDifficulty = difficulty
			multiplayerDifficultyLabel = gold..t("MULTIPLAYER_DIFFICULTY_LABEL").."^-^0xffffffff"..t(difficulties[difficulty].name).."^-"
			multiplayerDifficultyImage = difficulty - 1
		end
	else
		multiplayerSaveName = gold..t("MULTIPLAYER_NEW_GAME_LABEL").."^- ^0xffffffff"..saveName.."^-"
		multiplayerChapter = gold..t("MULTIPLAYER_CHAPTER_LABEL").."^- ^0xffffffff"..chapterText.."^-"
		multiplayerTimePlayed = gold..t("MULTIPLAYER_TIME_PLAYED_NEW_GAME").."^-"
		if difficulty > 0 then
			multiplayerDifficultyLabel = gold..t("MULTIPLAYER_DIFFICULTY_LABEL").."^-^0xffffffff"..t(difficulties[difficulty].name).."^-"
			multiplayerDifficultyImage = difficulty - 1
		end
	end
end

function broadcastCharacterControlChange(slot, newPlayer)
	print("newPlayer "..newPlayer.." current "..currentMultiplayerSelectPlayer.." playernumber "..mpaCharacters[slot]["player"])
	if mpaCharacters[slot]["player"] ~= newPlayer then
		local host = getMultiplayerPlayerName(1,false,false)
		local player = getMultiplayerPlayerName(newPlayer,false,false)
		setStringTokenLua("<PLAYER_NAME_1>",host)
		setStringTokenLua("<PLAYER_NAME_2>",player)
		local message = t("MULTIPLAYER_SLOT_"..slot.."_ASSIGNED_TO")
		removeStringTokenLua("<PLAYER_NAME_1>")
		removeStringTokenLua("<PLAYER_NAME_2>")
		print(message)
		Infinity_SendChatMessage(message, true) 
	end
end

function broadcastCharacterAdded(slot)
	local player = getMultiplayerPlayerName(mpaCharacters[slot]["player"],false,false)
	local character = getMultiplayerCharacterName(slot, false, true)
	setStringTokenLua("<PLAYER_NAME_1>",player)
	setStringTokenLua("<CHARACTER_NAME_1>",character)
	local message = t("MULTIPLAYER_HAS_ADDED")
	removeStringTokenLua("<PLAYER_NAME_1>")
	removeStringTokenLua("<CHARACTER_NAME_1>")
	print(message)
	Infinity_SendChatMessage(message, true) 
end

function broadcastCharacterRemoved(slot)
	local player = getMultiplayerPlayerName(mpaCharacters[slot]["player"],false,false)
	local character = getMultiplayerCharacterName(slot, false, true)
	setStringTokenLua("<PLAYER_NAME_1>",player)
	setStringTokenLua("<CHARACTER_NAME_1>",character)
	local message = t("MULTIPLAYER_HAS_REMOVED")
	removeStringTokenLua("<PLAYER_NAME_1>")
	removeStringTokenLua("<CHARACTER_NAME_1>")
	print(message)
	Infinity_SendChatMessage(message, true) 
end

function broadcastCharacterReady(slot)
	local character = getMultiplayerCharacterName(slot, false, false)
	setStringTokenLua("<CHARACTER_NAME_1>",character)
	local message = t("MULTIPLAYER_IS_READY_TO_START")
	removeStringTokenLua("<CHARACTER_NAME_1>")
	print(message)
	Infinity_SendChatMessage(message, true) 
end

function broadcastCharacterNotReady(slot)
	local character = getMultiplayerCharacterName(slot, false, false)
	setStringTokenLua("<CHARACTER_NAME_1>",character)
	local message = t("MULTIPLAYER_IS_NO_LONGER_READY")
	removeStringTokenLua("<CHARACTER_NAME_1>")
	print(message)
	Infinity_SendChatMessage(message, true) 
end

function broadcastPlayerAdded(slot)
	local player = getMultiplayerPlayerName(slot,false,false)
	setStringTokenLua("<PLAYER_NAME_1>",player)
	local message = t("MULTIPLAYER_HAS_JOINED_THE_GAME")
	removeStringTokenLua("<PLAYER_NAME_1>")
	print(message)
	Infinity_SendChatMessage(message, true) 
end

function broadcastPlayerRemoved(slot)
	local player = getMultiplayerPlayerName(slot,false,false)
	setStringTokenLua("<PLAYER_NAME_1>",player)
	local message = t("MULTIPLAYER_HAS_LEFT_THE_GAME")
	removeStringTokenLua("<PLAYER_NAME_1>")
	print(message)
	Infinity_SendChatMessage(message, true) 
end

mpDraggedCharacter = nil
mpDraggedPortrait = 'NOCTRL'

function multiplayerStartSwapPortraits(player, character)
	if multiplayerLocalPlayerID == 1 and player > 0 and player < 7 and mpaPlayers[player]["name"] ~= "" then
		print("Starting the drag of player "..player.." character slot "..character)
		mpDraggedCharacter = character
		multiplayerScreen:SetModifiedCharacterSlot(character - 1)
		currentMultiplayerSelectPlayer = player
		mpDraggedPortrait = mpaCharacters[character]["portrait"]
	end
end

function multiplayerStopSwapPortraits(player)
	if multiplayerLocalPlayerID == 1 then
		if player > 0 and player < 7 and mpaPlayers[player]["name"] ~= "" and currentMultiplayerSelectPlayer ~= nil then
			if mpaCharacters[mpDraggedCharacter]['ready'] == true and mpaCharacters[mpDraggedCharacter]['player'] ~= player then 
				multiplayerScreen:OnReadyButtonClick(mpDraggedCharacter-1)
			end
			broadcastCharacterControlChange(mpDraggedCharacter, player)
			multiplayerScreen:OnPlayerSelection(player-1)
		end
		mpDraggedCharacter = nil
		currentMultiplayerSelectPlayer = nil
		mpDraggedPortrait = 'NOCTRL'
	end
end

function getMultiplayerReadyTooltip(character)
	local ret = ""

	if mpaCharacters[character]["ready"] == true then
		ret = t("MULTIPLAYER_READY_BUTTON_ON_TOOLTIP")
	else
		ret = t("MULTIPLAYER_READY_BUTTON_OFF_TOOLTIP")
	end

	return ret
end

function multiplayerUpdateDraggedPortrait()
	if mpDraggedPortrait ~= 'NOCTRL' and multiplayerLocalPlayerID == 1 then
		local x,y,w,h = Infinity_GetArea('multiplayerDraggingPortraitImage')
		x,y = Infinity_GetMousePosition();
		x = x - 20
		y = y - 30
		Infinity_SetArea('multiplayerDraggingPortraitImage',x,y,w,h)
		return true
	else
		local x,y,w,h = Infinity_GetArea('multiplayerDraggingPortraitImage')
		Infinity_SetArea('multiplayerDraggingPortraitImage',-20,-20,w,h)
		return false
	end
end

function get4CheckFrame(slot)
	local ret = 1

	if mpaCharacters[slot]['ready'] == true and mpaCharacters[slot]['player'] == multiplayerLocalPlayerID then
		ret = 0
	elseif mpaCharacters[slot]['ready'] == true then
		ret = 2
	end

	return ret
end

`
menu
{
	name 'MULTIPLAYER'
	align center center
	ignoreesc
	onOpen
	"
		existingDifficulty = Infinity_GetOption(12, 8) + 1;
		multiplayerFromInGame = multiplayerScreen:GetEngineState() == 2
	"
	label 
	{
		mosaic 'GUIARBIT'
		area 0 0 1024 768
	}
	label
	{
		area 130 12 766 32
		text "ARBITRATION_TITLE"
		text style "title"
	}

	label
	{
		area 514 80 492 608
		fill 0 0 0 255
	}
	label
	{
		area 504 72 512 626
		rectangle 3
	}

	label
	{
		area 524 112 471 93
		fill 100 25 25 180
	}
	label
	{
		area 524 207 471 93
		fill 50 50 50 180
	}
	label
	{
		area 524 302 471 93
		fill 100 25 25 180
	}
	label
	{
		area 524 397 471 93
		fill 50 50 50 180
	}
	label
	{
		area 524 492 471 93
		fill 100 25 25 180
	}
	label
	{
		area 524 587 471 93
		fill 50 50 50 180
	}

	label
	{
		area 524 92 136 22
		text lua "t('PLAYER_LABEL')"
		text style "label"
		align center center
	}
	label
	{
		area 660 92 254 22
		text lua "t('CHARACTER_LABEL')"
		text style "label"
		align center center
	}
	label
	{
		area 914 92 81 22
		text lua "t('READY_TO_PLAY_LABEL')"
		text style "label"
		align center center
	}
	list -- character list
	{
		column --player
		{ 
			width 32 
			label
			{
				area 		6 5 140 44
				text lua	"getMultiplayerPlayerName(mpaCharacters[rowNumber]['player'],true,true)"
				text style 	"label"
				enabled 	"multiplayerLocalPlayerID == 1 and rowNumber ~= 1"
			}
			label
			{
				area 		6 0 140 95
				text lua	"getMultiplayerPlayerName(mpaCharacters[rowNumber]['player'],true,true)"
				text style 	"label"
				enabled 	"multiplayerLocalPlayerID ~= 1 or rowNumber == 1"
			}
			label
			{
				area		6 50 140 40
				bam 		'GUIOSTSM'
				sequence 	1
				frame lua 	"currentCellCheck(1)"
				align 		center center
				enabled 	"multiplayerLocalPlayerID == 1 and rowNumber ~= 1"
				text lua	"t('MULTIPLAYER_CHANGE_PLAYER_BUTTON')"
				text style 	"button"
			}

		}
		column --portrait
		{
			width 15
			label
			{
				area		0 0 -1 -1
				bam 		'GUIRSP10'
				sequence 	1
				align 		center center
			}
			label
			{
				area		6 5 56 85
				bitmap lua	'mpaCharacters[rowNumber]["portrait"]'
				sequence 	1
				align 		center center
			}
		}
		column --character
		{ 
			width 45 
			label
			{
				area 		2 0 195 44
				text lua 	"getMultiplayerCharacterName(rowNumber, true, true)"
				text style 	"label"
				enabled 	"getMultiplayerCharacterButtonText(rowNumber) ~= ''"
			}
			label
			{
				area 		2 0 195 95
				text lua 	"getMultiplayerCharacterName(rowNumber, true, true)"
				text style 	"label"
				enabled 	"getMultiplayerCharacterButtonText(rowNumber) == ''"
			}
			label
			{
				area		5 45 195 44
				bam 		'GUIOSTUM'
				sequence 	1
				frame lua 	"currentCellCheck(3)"
				align 		center center
				enabled 	"getMultiplayerCharacterButtonText(rowNumber) ~= ''"
			}
			label
			{
				area		5 45 195 44
				text lua 	"getMultiplayerCharacterButtonText(rowNumber)"
				text style 	"button"
			}
			label
			{
				area		5 45 195 44
				fill 		0 0 0 170
				enabled 	"shouldGreyscaleEditButton(rowNumber)"
			}

		}
		column --ready
		{ 
			width 13 
			label
			{
				area 		0 50 50 44
				text lua	"getMultiplayerCharacterReadyText(rowNumber)"
				text style 	"label"
			}

		}

		area 				520 112 475 570
		
		rowheight			95
		table				"mpaCharacters"
		var					selectedCharacter
		scrollbar			'rgpscrl'
		hidehighlight
		action
		"
			if cellNumber == 1 then
				cellNumber = nil
				if multiplayerLocalPlayerID == 1 and selectedCharacter ~= 1 then
					if multiplayerFromInGame == false then
						multiplayerScreen:SetModifiedCharacterSlot(selectedCharacter - 1)
						currentMultiplayerSelectPlayer = mpaCharacters[selectedCharacter]['player']
						Infinity_PushMenu('MP_PICKPLAYER')
					elseif shouldGreyscaleEditButton(selectedCharacter) == false then
						multiplayerScreen:OnModifyButtonClick()
					end
				end
			elseif cellNumber == 2 then
				cellNumber = nil
			elseif cellNumber == 3 then
				cellNumber = nil
				if shouldGreyscaleEditButton(selectedCharacter) == false then
					if getMultiplayerCharacterButtonText(selectedCharacter) == t('MULTIPLAYER_VIEW_DETAILS_BUTTON') then
						multiplayerScreen:OnPortraitButtonClick(selectedCharacter-1)
					elseif getMultiplayerCharacterButtonText(selectedCharacter) == t('CREATE_CHAR_BUTTON') then
						if multiplayerFromInGame == false then
							multiplayerScreen:SetModifiedCharacterSlot(selectedCharacter-1)
							multiplayerScreen:UpdateModifyCharacterPanel()
						elseif shouldGreyscaleEditButton(selectedCharacter) == false then
							multiplayerScreen:OnModifyButtonClick()
						end
					elseif getMultiplayerCharacterButtonText(selectedCharacter) == t('MULTIPLAYER_EDIT_CHAR_BUTTON') then
						if multiplayerFromInGame == false then
							mpModifyingCharacter = selectedCharacter - 1
							Infinity_PushMenu('MP_MODIFYCHARACTER')
						elseif shouldGreyscaleEditButton(selectedCharacter) == false then
							multiplayerScreen:OnModifyButtonClick()
						end
					end
				end
			elseif cellNumber == 4 then
				cellNumber = nil
			end
		"
		actionAlt
		"
			cellNumber = nil
		"
	}

	--ready buttons
	button
	{
		area 		942 112 50 50
		bam 		'4CHECK'
		sequence lua "get4CheckFrame(1)"
		align 		center center
		tooltip lua "getMultiplayerReadyTooltip(1)"
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[1]['player'] then
					multiplayerScreen:OnReadyButtonClick(1-1)
				end
			end
		"
	}
	button
	{
		area 		942 207 50 50
		bam 		'4CHECK'
		sequence lua "get4CheckFrame(2)"
		align 		center center
		tooltip lua "getMultiplayerReadyTooltip(2)"
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[2]['player'] then
					multiplayerScreen:OnReadyButtonClick(2-1)
				end
			end
		"
	}
	button
	{
		area 		942 302 50 50
		bam 		'4CHECK'
		sequence lua "get4CheckFrame(3)"
		align 		center center
		tooltip lua "getMultiplayerReadyTooltip(3)"
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[3]['player'] then
					multiplayerScreen:OnReadyButtonClick(3-1)
				end
			end
		"
	}
	button
	{
		area 		942 397 50 50
		bam 		'4CHECK'
		sequence lua "get4CheckFrame(4)"
		align 		center center
		tooltip lua "getMultiplayerReadyTooltip(4)"
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[4]['player'] then
					multiplayerScreen:OnReadyButtonClick(4-1)
				end
			end
		"
	}
	button
	{
		area 		942 492 50 50
		bam 		'4CHECK'
		sequence lua "get4CheckFrame(5)"
		align 		center center
		tooltip lua "getMultiplayerReadyTooltip(5)"
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[5]['player'] then
					multiplayerScreen:OnReadyButtonClick(5-1)
				end
			end
		"
	}
	button
	{
		area 		942 587 50 50
		bam 		'4CHECK'
		sequence lua 	"get4CheckFrame(6)"
		align 		center center
		tooltip lua "getMultiplayerReadyTooltip(6)"
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[6]['player'] then
					multiplayerScreen:OnReadyButtonClick(6-1)
				end
			end
		"
	}

	label
	{
		area 40 308 454 25
		fill 125 125 125 180
	}
	label
	{
		area 40 343 454 47
		fill 50 50 50 180
	}
	label
	{
		area 40 394 454 47
		fill 50 50 50 180
	}
	label
	{
		area 40 445 454 47
		fill 50 50 50 180
	}
	label
	{
		area 40 496 454 47
		fill 50 50 50 180
	}
	label
	{
		area 40 547 454 47
		fill 50 50 50 180
	}
	label
	{
		area 40 598 454 47
		fill 50 50 50 180
	}
	label
	{
		area 40 308 207 25
		text lua "t('PLAYERS_LABEL')"
		text style "label"
		align center center
	}
	label
	{
		area 247 308 187 25
		text lua "t('PARTY_SLOTS_LABEL')"
		text style "label"
		align center center
	}
	label
	{
		area 434 308 60 25
		text lua "t('RULES_LABEL')"
		text style "label"
		align center center
	}
	list -- player list
	{
		column -- kick
		{
			width lua "getPlayerKickWidth(rowNumber)"
			label
			{
				area		6 5 45 45
			}
		}
		column --player
		{ 
			width lua "getPlayerNameWidth(rowNumber)"
			label
			{
				area 		0 0 195 55
				text lua	"getMultiplayerPlayerName(rowNumber, false, true)"
				text style 	"label"
				align 		left center
				enabled 	"getPlayerKickWidth(rowNumber) == 0"
			}
			label
			{
				area 		0 0 150 55
				text lua	"getMultiplayerPlayerName(rowNumber, false, true)"
				text style 	"label"
				align 		left center
				enabled 	"getPlayerKickWidth(rowNumber) ~= 0"
			}

		}
		column --portraits
		{ 
			width 45 
			label
			{
				area		6 5 25 38
			}
		}
		column -- permissions
		{
			width 10
			label
			{
				area		6 5 45 45
			}
		}

		area 				52 339 442 306
		
		rowheight			51
		table				"mpaPlayers"
		var					selectedPlayer
		scrollbar			'rgpscrl'
		hidehighlight
		action
		"
			if cellNumber == 1 and selectedPlayer > 1 then
				cellNumber = 0
			elseif cellNumber == 2 then
				cellNumber = 0
			elseif cellNumber == 3 then
				cellNumber = 0
			elseif cellNumber == 4 and selectedPlayer > 1  then
				cellNumber = 0
			end
		"
	}

	--kick
	button
	{
		area			40 395 46 45
		bam 			GUMPBUTX
		sequence 		4
		clickable lua	"mpaPlayers[2]['name'] ~= ''"
		align 			center center
		enabled 		"multiplayerLocalPlayerID == 1"
		tooltip lua		"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[2]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(2-1)
			end
		"
	}
	button
	{
		area			40 446 46 45
		bam 			GUMPBUTX
		sequence 		4
		clickable lua	"mpaPlayers[3]['name'] ~= ''"
		align 			center center
		enabled 		"multiplayerLocalPlayerID == 1"
		tooltip lua		"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[3]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(3-1)
			end
		"
	}
	button
	{
		area			40 497 46 45
		bam 			GUMPBUTX
		sequence 		4
		clickable lua	"mpaPlayers[4]['name'] ~= ''"
		align 			center center
		enabled 		"multiplayerLocalPlayerID == 1"
		tooltip lua		"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[4]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(4-1)
			end
		"
	}
	button
	{
		area			40 548 46 45
		bam 			GUMPBUTX
		sequence 		4
		clickable lua	"mpaPlayers[5]['name'] ~= ''"
		align 			center center
		enabled 		"multiplayerLocalPlayerID == 1"
		tooltip lua		"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[5]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(5-1)
			end
		"
	}
	button
	{
		area			40 599 46 45
		bam 			GUMPBUTX
		sequence 		4
		clickable lua	"mpaPlayers[6]['name'] ~= ''"
		align 			center center
		enabled 		"multiplayerLocalPlayerID == 1"
		tooltip lua		"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[6]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(6-1)
			end
		"
	}

	--permissions
	button
	{
		area			446 395 46 45
		bam 			GUMPBUTX
		sequence 		3
		clickable lua	"mpaPlayers[2]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 			center center
		tooltip lua		"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[2]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 2
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}
	button
	{
		area			446 446 46 45
		bam 			GUMPBUTX
		sequence 		3
		clickable lua	"mpaPlayers[3]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 			center center
		tooltip lua		"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[3]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 3
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}
	button
	{
		area			446 497 46 45
		bam 			GUMPBUTX
		sequence 		3
		clickable lua	"mpaPlayers[4]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 			center center
		tooltip lua		"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[4]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 4
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}
	button
	{
		area			446 548 46 45
		bam 			GUMPBUTX
		sequence 		3
		clickable lua	"mpaPlayers[5]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 			center center
		tooltip lua		"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[5]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 5
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}
	button
	{
		area			446 599 46 45
		bam 			GUMPBUTX
		sequence 		3
		clickable lua	"mpaPlayers[6]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 			center center
		tooltip lua "t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[6]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 6
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}

	--character drag/drop
	--player 1
	button
	{
		area 247 348 180 38
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				247 348 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,1)'
		sequence 			1
		align 				center center
		--No changing control of character 1
	}
	button
	{
		area 				278 348 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,2)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,2)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				309 348 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,3)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,3)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				340 348 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,4)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,4)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				371 348 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,5)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,5)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				402 348 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,6)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,6)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	--player 2
	button
	{
		area 247 399 180 38
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				247 399 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,1)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,1)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				278 399 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,2)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,2)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				309 399 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,3)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,3)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				340 399 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,4)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,4)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				371 399 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,5)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,5)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				402 399 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,6)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,6)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	--player 3
	button
	{
		area 247 449 180 38
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				247 449 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,1)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,1)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				278 449 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,2)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,2)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				309 449 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,3)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,3)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				340 449 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,4)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,4)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				371 449 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,5)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,5)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				402 449 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,6)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,6)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	--player 4
	button
	{
		area 247 500 180 38
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				247 500 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,1)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,1)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				278 500 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,2)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,2)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				309 500 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,3)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,3)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				340 500 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,4)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,4)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				371 500 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,5)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,5)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				402 500 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,6)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,6)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	--player 5
	button
	{
		area 247 551 180 38
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				247 551 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,1)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,1)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				278 551 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,2)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,2)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				309 551 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,3)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,3)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				340 551 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,4)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,4)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				371 551 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,5)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,5)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				402 551 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,6)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,6)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	--player 6
	button
	{
		area 247 602 180 38
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				247 602 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,1)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,1)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				278 602 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,2)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,2)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				309 602 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,3)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,3)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				340 602 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,4)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,4)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				371 602 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,5)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,5)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				402 602 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,6)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,6)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}

	label -- game name
	{
		area 		28 84 454 56
		text lua	"multiplayerSessionName"
		text style 	'label'
	}
	label -- new game type/save name
	{
		area 		194 140 288 44
		text lua	"multiplayerSaveName"
		text style 	'label'
		align 		left center
	}
	label -- chapter
	{
		area 		194 180 288 44
		text lua	"multiplayerChapter"
		text style 	'label'
		align 		left center
	}
	label -- time played
	{
		area 		194 220 288 44
		text lua	"multiplayerTimePlayed"
		text style 	'label'
		align 		left center
	}
	label -- difficulty
	{
		area 		194 260 288 44
		text lua	"multiplayerDifficultyLabel"
		text style 	'label'
		align 		left center
	}
	label -- other difficulty
	{
		area 		28 140 166 164
		bam 		"GUIDIFF"
		frame lua	"multiplayerDifficultyImage"
		sequence 	0
		align 		center center
	}

	button
	{
		area 656 712 200 44
		bam 'GUIOSTUM'
		sequence 1
		text "START_GAME_BUTTON" -- Done
		text style 'button'
		clickable lua "multiplayer.donebuttonclickable"
		enabled "not multiplayerFromInGame"
		tooltip lua "getStartGameButtonTooltip()"
		action 
		"
			multiplayerScreen:OnMainDoneButtonClick(mulitplayerPreexistingDifficulty)
		"
	}
	button
	{
		on escape
		area 656 712 200 44
		bam 'GUIOSTUM'
		sequence 1
		text "DONE_BUTTON" -- Done
		text style 'button'
		clickable lua "multiplayer.donebuttonclickable"
		enabled "multiplayerFromInGame"
		tooltip lua "getStartGameButtonTooltip()"
		action 
		"
			multiplayerScreen:OnMainDoneButtonClick(mulitplayerPreexistingDifficulty)
		"
	}
	button
	{
		area 171 712 200 44
		bam 'GUIOSTUM'
		sequence 0
		text "LOGOUT_BUTTON" -- Logout
		text style 'button'
		action 
		"
			multiplayerScreen:OnLogoutButtonClick()
		"
	}
	button
	{
		area 298 650 200 44
		bam 'GUIOSTUM'
		sequence 0
		text "MULTIPLAYER_GAME_OPTIONS_BUTTON"
		text style 'button'
		enabled "multiplayerLocalPlayerID == 1"
		action 
		"
			helpTextString = Infinity_FetchString(11323)
			Infinity_PushMenu('MP_OPTIONS')
		"
	}

	--dragged portrait
	label
	{
		name 				"multiplayerDraggingPortraitImage"
		area 				-20 -20 37 57
		bitmap lua			'mpDraggedPortrait'
		sequence 			1
		align 				center center
		enabled 			"multiplayerUpdateDraggedPortrait()"
	}
}
`
multiplayerPermissions = 
{
	{'MULTIPLAYER_PERMISSIONS_MODIFY',	'MULTIPLAYER_PERMISSIONS_MODIFY_TOOLTIP',	false, false, 7},
	{'MULTIPLAYER_PERMISSIONS_GOLD',	'MULTIPLAYER_PERMISSIONS_GOLD_TOOLTIP',		false, false, 0},
	{'MULTIPLAYER_PERMISSIONS_TRAVEL',	'MULTIPLAYER_PERMISSIONS_TRAVEL_TOOLTIP',	false, false, 1},
	{'MULTIPLAYER_PERMISSIONS_VIEW',	'MULTIPLAYER_PERMISSIONS_VIEW_TOOLTIP',		false, false, 3},
	{'MULTIPLAYER_PERMISSIONS_DIALOGUE','MULTIPLAYER_PERMISSIONS_DIALOGUE_TOOLTIP',	false, false, 2},
	{'MULTIPLAYER_PERMISSIONS_PAUSE',	'MULTIPLAYER_PERMISSIONS_PAUSE_TOOLTIP',	false, false, 4}
}

function broadcastPermissionChange(player,permission,setting)
	local player = getMultiplayerPlayerName(player,false,true)
	local todo = t(multiplayerPermissions[permission][1])
	setStringTokenLua("<PLAYER_NAME_1>",player)
	setStringTokenLua("<PERMISSION>",todo)
	if setting == true then
		message = t("MULTIPLAYER_IS_NOW_PERMITTED")
	else
		message = t("MULTIPLAYER_IS_NOT_PERMITTED")
	end
	removeStringTokenLua("<PLAYER_NAME_1>")
	removeStringTokenLua("<PERMISSION>")
	print(message)
	Infinity_SendChatMessage(message, true) 
end

function getMultiplayerPlayerPermissionDescription()
	local player = getMultiplayerPlayerName(multiplayerInPermissionForPlayer,false,false)
	setStringTokenLua("<PLAYER_NAME_1>",player)
 	local canPerform = t("MULTIPLAYER_CAN_PERFORM")
	removeStringTokenLua("<PLAYER_NAME_1>")

	return canPerform
end
`
menu
{
	name 'MP_PERMISSIONS'
	align center center
	modal
	onOpen
	"
		local index = 1
		for index = 0, #(multiplayer.player[multiplayerInPermissionForPlayer].permissions), 1 do
			local luaIndex = -1
			local loopLuaIndex = -1

			for loopLuaIndex = 1, #multiplayerPermissions, 1 do
				if multiplayerPermissions[loopLuaIndex][5] == index then
					luaIndex = loopLuaIndex
					break
				end
			end

			if luaIndex ~= -1 then
				if multiplayer.player[multiplayerInPermissionForPlayer].permissions[index] == true then
					multiplayerPermissions[luaIndex][3] = true
					multiplayerPermissions[luaIndex][4] = true
				elseif multiplayer.player[multiplayerInPermissionForPlayer].permissions[index] == false then
					multiplayerPermissions[luaIndex][3] = false
					multiplayerPermissions[luaIndex][4] = false
				else
					multiplayerPermissions[luaIndex][3] = false
					multiplayerPermissions[luaIndex][4] = false
				end
			end
		end
	"

	label 
	{
		area 0 4 512 656
		mosaic "GUICONNB"
	}
	label
	{
		area 82 70 340 44
		text "PERMISSIONS_TITLE"
		text style "title"
	}

	label
	{
		area 82 114 340 48
		text lua "getMultiplayerPlayerPermissionDescription()"
		text style "title"
	}

	button
	{
		bam GUIOSW
		on esc
		area 462 10 44 44
		sequence 2
		action 
		"	
			multiplayerScreen:OnCancelButtonClick()
			Infinity_PopMenu()
		"
	}

	--bottom buttons
	button
	{
		area 152 534 200 44
		bam 'GUIOSTUM'
		sequence 0
		text "CANCEL_BUTTON" -- Back
		text style 'button'
		action 
		"
			multiplayerScreen:OnCancelButtonClick()
			Infinity_PopMenu()
		"
	}
	button
	{
		on return
		area 152 586 200 44
		bam 'GUIOSTUM'
		sequence 1
		text "DONE_BUTTON" -- Done
		text style 'button'
		enabled "multiplayerLocalPlayerID == 1"
		action 
		"
			local index = 1
			for index = #(multiplayerPermissions), 1, -1 do
				if multiplayerPermissions[index][3] ~= multiplayerPermissions[index][4] then
					broadcastPermissionChange(multiplayerInPermissionForPlayer,index,multiplayerPermissions[index][3])
					multiplayerScreen:OnPermissionButtonClick(multiplayerInPermissionForPlayer - 1, multiplayerPermissions[index][5])
				end
			end

			multiplayerInPermission = false
			multiplayerScreen:OnDoneButtonClick()
			Infinity_PopMenu()
		"
	}

	--permissions
	button
	{
		area 165 176 45 42
		bam RGRNDBUT
		ScaleToClip
		sequence 0
		glow lua "multiplayerPermissions[1][3] == true"
		tooltip lua "t(multiplayerPermissions[1][2])"
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[1][3] = not multiplayerPermissions[1][3]
			end
		"
	}
	text
	{
		area 210 170 212 56
		text lua "t(multiplayerPermissions[1][1])"
		tooltip lua "t(multiplayerPermissions[1][2])"
		text style "normal"
		align left center
	}
	button
	{
		area 165 232 45 42
		bam RGRNDBUT
		ScaleToClip
		sequence 0
		glow lua "multiplayerPermissions[2][3] == true"
		tooltip lua "t(multiplayerPermissions[2][2])"
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[2][3] = not multiplayerPermissions[2][3]
			end
		"
	}
	text
	{
		area 210 226 212 56
		text lua "t(multiplayerPermissions[2][1])"
		tooltip lua "t(multiplayerPermissions[2][2])"
		text style "normal"
		align left center
	}
	button
	{
		area 165 286 45 42
		bam RGRNDBUT
		ScaleToClip
		sequence 0
		glow lua "multiplayerPermissions[3][3] == true"
		tooltip lua "t(multiplayerPermissions[3][2])"
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[3][3] = not multiplayerPermissions[3][3]
			end
		"
	}
	text
	{
		area 210 282 212 56
		text lua "t(multiplayerPermissions[3][1])"
		tooltip lua "t(multiplayerPermissions[3][2])"
		text style "normal"
		align left center
	}
	button
	{
		area 165 338 45 42
		bam RGRNDBUT
		ScaleToClip
		sequence 0
		glow lua "multiplayerPermissions[4][3] == true"
		tooltip lua "t(multiplayerPermissions[4][2])"
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[4][3] = not multiplayerPermissions[4][3]
			end
		"
	}
	text
	{
		area 210 334 212 56
		text lua "t(multiplayerPermissions[4][1])"
		tooltip lua "t(multiplayerPermissions[4][2])"
		text style "normal"
		align left center
	}
	button
	{
		area 165 394 45 42
		bam RGRNDBUT
		ScaleToClip
		sequence 0
		glow lua "multiplayerPermissions[5][3] == true"
		tooltip lua "t(multiplayerPermissions[5][2])"
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[5][3] = not multiplayerPermissions[5][3]
			end
		"
	}
	text
	{
		area 210 390 212 56
		text lua "t(multiplayerPermissions[5][1])"
		tooltip lua "t(multiplayerPermissions[5][2])"
		text style "normal"
		align left center
	}
	button
	{
		area 165 450 45 42
		bam RGRNDBUT
		ScaleToClip
		sequence 0
		glow lua "multiplayerPermissions[6][3] == true"
		tooltip lua "t(multiplayerPermissions[6][2])"
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[6][3] = not multiplayerPermissions[6][3]
			end
		"
	}
	text
	{
		area 210 446 212 56
		text lua "t(multiplayerPermissions[6][1])"
		tooltip lua "t(multiplayerPermissions[6][2])"
		text style "normal"
		align left center
	}
}
`
multiplayerGameOptions =
{
	{"LISTEN_JOIN_LABEL",	"LISTEN_JOIN_TOOLTIP",	false, false},
	{"ALLOW_REFORM_LABEL",	"ALLOW_REFORM_TOOLTIP",	false, false}
}
multiplayerImportOptions =
{
	{"MULTIPLAYER_IMPORT_CHARACTER_RULES_SEI"},
	{"MULTIPLAYER_IMPORT_CHARACTER_RULES_SE"},
	{"MULTIPLAYER_IMPORT_CHARACTER_RULES_S"}
}
multiplayerImportOption = 0

function broadcastOptionChange(slot, onOff)
	if multiplayerLocalPlayerID == 1 then
		local message = ""
		if slot < 3 then
			local setting = t(multiplayerGameOptions[slot][1])
			setStringTokenLua("<SESSION_RULES>",setting)
			if onOff == true then
				message = t("MULTIPLAYER_GAME_WILL_NOW")
			else
				message = t("MULTIPLAYER_GAME_WILL_NO_LONGER")
			end
			removeStringTokenLua("<SESSION_RULES>")
		else
			local setting = t(multiplayerImportOptions[slot-2][1])
			setStringTokenLua("<IMPORT_RULES>",setting)
			message = t("MULTIPLAYER_IMPORT_SETTINGS_CHANGE")
			removeStringTokenLua("<IMPORT_RULES>")
		end
		print(message)
		Infinity_SendChatMessage(message, true) 
	end
end
`
menu
{
	name 'MP_OPTIONS'
	align center center
	modal 
	onOpen
	"
		multiplayerGameOptions[1][3] = multiplayer.listentojoin
		multiplayerGameOptions[1][4] = multiplayerGameOptions[1][3]
		multiplayerGameOptions[2][3] = multiplayer.allowreformparty
		multiplayerGameOptions[2][4] = multiplayerGameOptions[2][3]
		multiplayerImportOption = multiplayer.importsetting + 1
	"

	label 
	{
		area 0 4 512 656
		mosaic "GUICONNB"
	}
	label
	{
		area 82 70 340 44
		text "OPTIONS_BUTTON"
		text style "title"
	}
	label
	{
		area 74 262 348 56
		text "MULTIPLAYER_IMPORT_CHARACTER_RULES_LABEL"
		text style "title"
		align center center
	}

	button
	{
		area 133 132 45 42
		bam RGRNDBUT
		ScaleToClip
		sequence 0
		glow lua "multiplayerGameOptions[1][3] == true"
		tooltip lua "t(multiplayerGameOptions[1][2])"
		action 
		"
			multiplayerGameOptions[1][3] = not multiplayerGameOptions[1][3]
		"
	}
	text
	{
		area 178 126 212 55
		text lua "t(multiplayerGameOptions[1][1])"
		text style "normal"
		tooltip lua "t(multiplayerGameOptions[1][2])"
		align left center
	}
	button
	{
		area 133 196 45 42
		bam RGRNDBUT
		ScaleToClip
		sequence 0
		glow lua "multiplayerGameOptions[2][3] == true"
		tooltip lua "t(multiplayerGameOptions[2][2])"
		action 
		"
			multiplayerGameOptions[2][3] = not multiplayerGameOptions[2][3]
		"
	}
	text
	{
		area 178 190 212 55
		text lua "t(multiplayerGameOptions[2][1])"
		text style "normal"
		tooltip lua "t(multiplayerGameOptions[2][2])"
		align left center
	}

	button
	{
		area 133 336 45 42
		bam RGRNDBUT
		ScaleToClip
		frame lua "currentCellCheck(3)"
		sequence 0
		glow lua "multiplayerImportOption == 1"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		action 
		"
			multiplayerImportOption = 1
		"
	}
	text
	{
		area 178 330 212 55
		text lua "t('MULTIPLAYER_IMPORT_CHARACTER_RULES_SEI')"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		text style "normal"
		align left center
	}
	button
	{
		area 133 400 45 42
		bam RGRNDBUT
		ScaleToClip
		frame lua "currentCellCheck(3)"
		sequence 0
		glow lua "multiplayerImportOption == 2"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		action 
		"
			multiplayerImportOption = 2
		"
	}
	text
	{
		area 178 394 212 55
		text lua "t('MULTIPLAYER_IMPORT_CHARACTER_RULES_SE')"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		text style "normal"
		align left center
	}
	button
	{
		area 133 460 45 42
		bam RGRNDBUT
		ScaleToClip
		frame lua "currentCellCheck(3)"
		sequence 0
		glow lua "multiplayerImportOption == 3"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		action 
		"
			multiplayerImportOption = 3
		"
	}
	text
	{
		area 178 456 212 56
		text lua "t('MULTIPLAYER_IMPORT_CHARACTER_RULES_S')"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		text style "normal"
		align left center
	}

	button
	{
		bam GUIOSW
		on esc
		area 464 8 44 44
		sequence 2
		action 
		"	
			multiplayerScreen:OnCancelButtonClick()
			Infinity_PopMenu()
		"
	}

	--bottom buttons
	button
	{
		on return
		area 152 590 200 44
		bam 'GUIOSTUM'
		sequence 0
		text "DONE_BUTTON" -- Done
		text style 'button'
		action 
		"
			if multiplayerImportOption ~= multiplayer.importsetting + 1 then
				multiplayerScreen:SetImportSetting(multiplayerImportOption - 1)
				broadcastOptionChange(multiplayerImportOption+2)
			end

			if multiplayerGameOptions[1][3] ~= multiplayerGameOptions[1][4] then
				broadcastOptionChange(1, multiplayerGameOptions[1][3])
				multiplayerScreen:ToggleListenToJoin()
			end

			if multiplayerGameOptions[2][3] ~= multiplayerGameOptions[2][4] then
				broadcastOptionChange(2, multiplayerGameOptions[2][3])
				multiplayerScreen:ToggleAllowReformParty()
			end

			Infinity_PopMenu()
		"
	}
	button
	{
		on escape
		area 152 536 200 44
		bam 'GUIOSTUM'
		sequence 1
		text "CANCEL_BUTTON" -- Cancel
		text style 'button'
		action 
		"
			multiplayerScreen:OnCancelButtonClick()
			Infinity_PopMenu()
		"
	}
}
`
	function getActivePlayerIndex(index)
		local ret = -1
		local count = 0
		local slot = 0

		for slot = 1, 6, 1 do
			if mpaPlayers[slot]["name"] ~= '' then
				count = count + 1
			end
			if count == index then
				ret = slot
				break
			end
		end

		return ret
	end
`
menu
{
	name 'MP_PICKPLAYER'
	align center center
	modal 
	label 
	{
		mosaic 'GUICONN1'
		area 0 0 512 551
	}
	label 
	{
		area 100 10 302 24
		text "SELECT_PLAYER_TITLE"
		text style "title"
	}
	label 
	{
		area 56 60 390 44
		text "SELECT_PLAYER_DESCRIPTION"
		text style "title"
	}

	-- list
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 340 32
				text lua "getMultiplayerPlayerName(getActivePlayerIndex(rowNumber), false, true)"
				text style "normal"
				align left center
			}
		}

		action 
		"
		"

		rowheight 32
		area 124 116 258 194
		table "multiplayer.player"
		var currentMultiplayerSelectPlayer
	}
	
	button
	{
		bam GUIOSW
		on esc
		area 406 6 44 44
		sequence 2
		action 
		"	
			Infinity_PopMenu()
		"
	}

	button
	{
		on escape
		area 152 408 200 44
		text "CANCEL_BUTTON"
		text style "button"
		align center center
		bam 'GUIOSTUM'
		sequence 0
		action
		"	
			Infinity_PopMenu()
		"
	}
	button
	{
		on escape
		area 152 458 200 44
		text "DONE_BUTTON"
		text style "button"
		align center center
		bam 'GUIOSTUM'
		sequence 0
		action
		"	
			if mpaCharacters[selectedCharacter]['ready'] == true and mpaCharacters[selectedCharacter]['player'] ~= getActivePlayerIndex(currentMultiplayerSelectPlayer) then
				multiplayerScreen:OnReadyButtonClick(selectedCharacter-1)
			end
			broadcastCharacterControlChange(selectedCharacter, getActivePlayerIndex(currentMultiplayerSelectPlayer))
			multiplayerScreen:OnPlayerSelection(getActivePlayerIndex(currentMultiplayerSelectPlayer)-1)
			Infinity_PopMenu()
		"
	}
}
`
	function multiplayerIsDelete ()
		if (multiplayer.character[mpModifyingCharacter+1].portrait ~= '') then
			return t("DELETE_BUTTON")
		else
			return t("CREATE_BUTTON")
		end
	end
	function getModifyConfirmationLabel()
		print(mpModifyingCharacter+1)
		return t('MULTIPLAYER_EDIT_CONFIRM').. ' ' .. getMultiplayerCharacterName(mpModifyingCharacter+1)
	end
`
menu
{
	name 'MP_MODIFYCHARACTER'
	align center center
	modal 
	label 
	{
		mosaic 'GUIERR6'
		area 0 0 682 238
	}
	label
	{
		area 44 20 590 106
		text lua "getModifyConfirmationLabel()"
		text style "title"
		align center center
	}
	button
	{
		on escape
		area 26 170 300 44
		text "CANCEL_BUTTON" -- cancel
		text style "button"
		bam GUIOSTCL
		action
		"	
			Infinity_PopMenu()
		"
	}
	button
	{
		on return
		area 354 170 300 44
		text lua "multiplayerIsDelete()"
		text style "button"
		bam GUIOSTCL
		action
		"	
			Infinity_PopMenu()
			multiplayerScreen:SetModifiedCharacterSlot(mpModifyingCharacter)
			if (multiplayer.character[mpModifyingCharacter+1].portrait ~= '') then
				multiplayerScreen:OnModifyCharacterDelete()
			else
				multiplayerScreen:UpdateModifyCharacterPanel()
			end
		"
	}
}

menu
{
	name 'MP_ERRORONE'
	align center center
	modal 
	label 
	{
		mosaic 'GUIERR6'
		area 0 0 684 242
	}
	label
	{
		area 29 21 600 126
		text lua "Infinity_FetchString( mpErrorText )"
		text style "normal"
		align center center
	}
	button
	{
		on return
		area 192 170 301 46
		text "DONE_BUTTON" -- done
		text style "button"
		align center center
		bam GUIOSTCL
		action
		"	
			Infinity_PopMenu()
		"
	}
}

menu
{
	name 'MP_ERRORTWO'
	align center center
	modal 
	label 
	{
		mosaic 'GUIERR'
		area 0 0 408 418
	}
	label
	{
		area 72 82 258 80
		text lua "Infinity_FetchString( mpErrorText )"
		text style "normal"
		align center center
	}
	button
	{
		on return
		enabled "mpErrorState == 2"
		area 52 220 302 44
		text "MODIFY_BUTTON" -- modify
		text style "button"
		align center center
		bam GUIOSTCL
		action
		"	
			Infinity_PopMenu()
			multiplayerScreen:ModifyCharacters()
		"
	}
	button
	{
		on return
		enabled "mpErrorState == 3"
		area 52 220 302 44
		text "KICK_BUTTON" -- kick player
		text style "button"
		align center center
		bam GUIOSTCL
		action
		"	
			Infinity_PopMenu()
			multiplayerScreen:KickPlayer()
		"
	}
	button
	{
		on return
		enabled "mpErrorState == 4"
		area 52 220 302 44
		text "LOGOUT_BUTTON" -- log out
		text style "button"
		align center center
		bam GUIOSTCL
		action
		"	
			local index = 1
			Infinity_PopMenu()
			multiplayerScreen:Logout()
		"
	}
	button
	{
		on escape
		area 102 318 204 44
		text "CANCEL_BUTTON" -- cancel
		text style "button"
		align center center
		bam GUIOSTUM
		action
		"	
			Infinity_PopMenu()
		"
	}
}
`
	function dragMPChat(newY)
		--do a quick bounds check.
		local area = {Infinity_GetArea("mpChatDisplayBackground")}
		if(area[4] + newY <= 150) then newY = 150 - area[4] end
		
		area = {Infinity_GetArea("mpChatHandle")}
		local screenWidth, screenHeight = Infinity_GetScreenSize()
		if(area[2] + area[4] + newY > screenHeight) then newY = screenHeight - area[2] - area[4] end
		
		adjustItemGroup({"mpChatDisplayBackground","mpChatDisplay"}, 0, 0, 0, newY)
		adjustItemGroup({"mpChatEditBackground","mpChatEdit","mpChatHandle"}, 0, newY, 0 , 0)
	end
	mpChatTable = {}
	showMpChat = 0
	function updateChatViewed()
		if(showMpChat == 0) then chatViewed = 0 end
	end
	function updateMPChatPreview(message)
		if(showMpChat == 0) then table.insert(mpChatTable,{text = message}) end
	end
	function getMPMessageOpacity()
		local current = mpChatTable[#mpChatTable]
		if(current == nil) then
			return 0
		end
		if(current.displayTime == nil) then
			current.displayTime = 500
			
			--set the box size
			Infinity_ScaleToText("mpChatPreview")
			
			--give some extra room for the padding
			adjustItemGroup({"mpChatPreview"},0,0,0,16)
		end
		if(current.displayTime > 0) then
			current.displayTime = current.displayTime - 4
		end
		if(current.displayTime > 255) then
			return 255
		else
			return current.displayTime
		end
	end
	function getMPMessage()
		if(#mpChatTable > 0 and mpChatTable[#mpChatTable].displayTime ~= nil) then 
			return mpChatTable[#mpChatTable].text 
		end
		return nil
	end
	function getChatIconOpacity()
		if(chatViewed == 1) then return 255 end
		local sinWave = math.sin(Infinity_GetFrameCounter() / 15)
		local sinWaveAdjusted = (sinWave / 2) + 0.5
		return sinWaveAdjusted * 255
	end
	function getChatBarTooltip()
		if(showMpChat == 0) then
			return t("MULTIPLAYER_CHAT_BAR_COLLAPSED")
		else
			return t("MULTIPLAYER_CHAT_BAR_EXPANDED")
		end
	end
	function resizeMpEditBox()
		Infinity_ScaleToText('mpChatEdit')
		local x,y,w,h = Infinity_GetArea('mpChatEdit')
		local offset = 20
		if(h + offset < 42) then h = (42 - offset) end
		
		
		Infinity_SetArea('mpChatEdit',x,y,w,h)
		Infinity_SetArea('mpChatEditBackground',nil,nil,nil,h + offset)
		Infinity_SetArea('mpChatHandle',nil,y+h+(offset/2),nil,nil)
	end

	function mpChatboxScroll(top, height, contentHeight)
		if(mpChatboxJumpToBottom and contentHeight > height) then
			mpChatboxJumpToBottom = nil
			return height-contentHeight
		end
		if(mpChatboxScrollToBottom == 0 and mpChatboxScrollLastHeight == contentHeight) then
			--defer to default scrolling
			return nil
		elseif mpChatboxScrollToBottom == 0 then
			mpChatboxScrollLastHeight = contentHeight
			return height-contentHeight
		end
		if(contentHeight < height) then
			--no scrolling required, content fits
			mpChatboxScrollToBottom = nil
			return nil
		end
		local dT = Infinity_GetClockTicks() - mpChatboxScrollTimeLast
		mpChatboxScrollTimeLast = Infinity_GetClockTicks()
		top = top + lastTrimmedContentHeight
		lastTrimmedContentHeight = 0
		local newTop = (dT * -0.25) + top
		if (newTop + contentHeight > height + 200) then
			return (height - contentHeight + 200)
		end
		if(newTop + contentHeight < height) then
			mpChatboxScrollToBottom = 0
			return height - contentHeight
		end
		return newTop
	end

	mpChatboxScrollLastHeight = 0
	mpChatboxScrollToBottom = nil
	mpChatboxScrollTimeLast = 0
	mpChatEditOverlay = ""
`
menu
{
	name "MP_CHAT_OVERLAY"
	enabled "e:IsMultiplayer()"
	align right top
	ignoreEsc
	offset -120 0
	onOpen
	"
		chatViewed = 1
	"
	label
	{
		name "mpChatDisplayBackground"
		enabled "showMpChat"
		area 0 0 300 372
		rectangle 4
		rectangle opacity 200
	}
	label
	{
		area 0 0 300 42
		rectangle 0

	}
	label
	{
		area 10 8 28 28
		bam "CHTICN"
		frame 1
		opacity lua "getChatIconOpacity()"
		
	}
	label
	{
		area 10 8 28 28
		bam "CHTICN"
		frame 0
		opacity lua "255 - getChatIconOpacity()"
	}
	label
	{
		area 42 0 252 42
		text "MULTIPLAYER_CHAT_LABEL"
		text style "label"
	}
	button
	{
		area 0 0 300 42
		toggle "showMpChat"
		tooltip lua "getChatBarTooltip()"
		action
		"
			chatViewed = 1
			mpChatboxScrollToBottom = 1
			if showMpChat == 1 then
				Infinity_FocusTextEdit('mpChatEdit')
			else
				Infinity_FocusTextEdit('')
			end
		"
	}
	
	label
	{
		name "mpChatPreview"
		enabled "showMpChat == 0"
		opacity lua "getMPMessageOpacity()"
		area 0 42 300 33
		text style "normal"
		text lua "getMPMessage()"
		pad 8 8 8 8
		fill 1 1 1 150
		ignoreEvents
	}
	text
	{
		name "mpChatDisplay"
		enabled "showMpChat"
		area 18 46 264 276
		text lua "mpChatText"
		scrollbar 'rgpscrl'
		scrollbar func "mpChatboxScroll"
		text style	normal
	}
	label
	{
		name "mpChatEditBackground"
		enabled "showMpChat"
		area 0 324 300 42
		rectangle 0
	}
	edit
	{
		name		"mpChatEdit"
		enabled 	"showMpChat"
		area		10 334 290 22
		var			mpChatEditOverlay
		scrollbar	'rgpscrl'
		text style	"edit"
		maxchars 255
		fill        112 111 111 64
		action
		"
			--On return pressed
			if (key_pressed == 13) then
				if (mpChatEditOverlay ~= '') then
					Infinity_SendChatMessage(mpChatEditOverlay, false) 
					Infinity_PlaySound('WAL_19B')
					mpChatEditOverlay=''
					resizeMpEditBox()
					mpChatboxScrollToBottom = 1
					return -1
				end
			end
			return 1
		"
		actionalt
		"
			resizeMpEditBox()
		"
	}
	handle
	{
		name "mpChatHandle"
		area 104 366 95 38
		bam "MPCHATAB"
		enabled "showMpChat"
		tooltip lua "t('MULTIPLAYER_CHAT_RESIZE_TOOLTIP')"
		actionDrag
		"
			dragMPChat(motionY)
		"
	}
}
`
function reinitQuests()
	for questIdx, quest in pairs(quests) do
		local noquest = true
		for objIdx,objective in pairs(quest.objectives) do
			local noobjective = true
			for entryIdx,entry in pairs(objective.entries) do
				if quests[questIdx].objectives[objIdx].entries[entryIdx].stateType ~= const.ENTRY_TYPE_NONE and quests[questIdx].objectives[objIdx].entries[entryIdx].stateType ~= nil then
					noobjective = false
				end
			end
			if noobjective then
				quests[questIdx].objectives[objIdx].stateType = const.ENTRY_TYPE_NONE
			end
			if quests[questIdx].objectives[objIdx].stateType ~= const.ENTRY_TYPE_NONE and quests[questIdx].objectives[objIdx].stateType ~= nil then
				noquest = false
			end
		end
		if noquest then
			quests[questIdx].stateType = const.ENTRY_TYPE_NONE
		end
	end
end

function initQuests()
	--instead of always searching the quests, just map entry ids to their quests
	entryToQuest = {}
	for questIdx, quest in pairs(quests) do
		quests[questIdx].stateType = const.ENTRY_TYPE_NONE
		for objIdx,objective in pairs(quest.objectives) do
			quests[questIdx].objectives[objIdx].stateType = const.ENTRY_TYPE_NONE
			for entryIdx,entry in pairs(objective.entries) do
				quests[questIdx].objectives[objIdx].entries[entryIdx].stateType = const.ENTRY_TYPE_NONE
				entryToQuest[entry.id] = questIdx
			end
		end
	end
end

function compareByRecvTime(o1,o2)
	if(not o1.recvTime and not o2.recvTime) then return false end
	if(not o1.recvTime) then return false end
	if(not o2.recvTime) then return true end
	return o1.recvTime > o2.recvTime
end

function buildEntry(text, recvTime, stateType, chapter, timeStamp)
	local entry = 
		{
			text = text,
			recvTime = recvTime,
			stateType = stateType,
			timeStamp = timeStamp,
			chapters = {}
		}
	entry.chapters[chapter] = 1
	return entry	
end

--Update a journal entry by the strref/journalId
function updateJournalEntry(journalId, recvTime, stateType, chapter, timeStamp)
	if(stateType == const.ENTRY_TYPE_USER) then
		local entry = buildEntry(journalId, recvTime, stateType, chapter, timeStamp)
		table.insert(userNotes,entry)
		
		--update display data
		buildQuestDisplay()
		return
	end
	--find the quest that is parent to this entry.
	--NOTE this can be placed in a loop if there needs to be more than quest to an entry
	--this would just mean entryToQuest returns a table that we iterate over
	local questId = entryToQuest[journalId]
	if questId == nil or stateType == const.ENTRY_TYPE_INFO then
		--add loose entries into the looseEntries table so they still get displayed.
		for _,entry in pairs(looseEntries) do
			if entry.text == journalId then
				return
			end
		end
		local entry = buildEntry(journalId, recvTime, stateType, chapter, timeStamp)
		table.insert(looseEntries,entry)

		--update display data
		buildQuestDisplay()
		return
	end

	local quest = quests[questId]
	if quest == nil then
		print("JOURNAL ERROR - no quest entry associated with questId "..questId)
		return
	end
	local previous = nil
	--traverse quest to find objective and entry
	for objIdx,objective in pairs(quest.objectives) do
		for entryIdx,entry in pairs(objective.entries) do
			if(entry.id == journalId) then
				--now we know where our quest, objective, and entry are
				--update quest, objective and entry appropriately
				entry.recvTime = recvTime
				entry.stateType = stateType
				if(not entry.chapters) then entry.chapters = {} end
				entry.chapters[chapter] = 1
				entry.timeStamp = timeStamp
				objective.entries[entryIdx] = entry
				
				objective.recvTime = recvTime
				if(not objective.chapters) then objective.chapters = {} end
				objective.chapters[chapter] = 1
				if(objective.stateType ~= const.ENTRY_TYPE_COMPLETE) then
					objective.stateType = stateType
				end
				quest.objectives[objIdx] = objective
				
				quest.recvTime = recvTime
				if(not quest.chapters) then quest.chapters = {} end
				quest.chapters[chapter] = 1
				if(quest.stateType ~= const.ENTRY_TYPE_COMPLETE) then
					quest.stateType = stateType
				end
				
				--mark any previous objective as complete
				if(entry.previous ~= nil) then
					for objIdx2,objective2 in pairs(quest.objectives) do
						for k, prevObj in pairs(entry.previous) do
							if(prevObj == objective2.text) then
								quest.objectives[objIdx2].stateType = const.ENTRY_TYPE_COMPLETE
							end
						end
					end
				end
				
				quests[questId] = quest
				
				--remove all in subgroup (except myself!)
				if(stateType == const.JOURNAL_STATE_COMPLETE and entry.subGroup) then
					for k,v in pairs(subGroups[entry.subGroup]) do
						Infinity_Log("Checking subgroup, id = " .. v.id)
						if(v.id ~= entry.id) then
							removeJournalEntry(v.id)
						end
					end
				end
				
			end
		end
	end
	--sort the objectives.
	table.sort(quest.objectives,compareByRecvTime)
	
	--update display data
	buildQuestDisplay()
end
function checkEntryComplete(journalId, stateType)
	--Check if a journal entry is part of a quest that's already complete
	
	--If anything other than an unfinished entry return false.
	if(stateType ~= const.ENTRY_TYPE_INPROGRESS) then return false end
	
	--Check if my quest is marked complete.
	local questIndex = entryToQuest[journalId]
	if (quests[questIndex].stateType == const.ENTRY_TYPE_COMPLETE) then
		return 1
	else
		return 0
	end
end
--this should maybe be done recursively, but i kinda want direct control over each level
function buildQuestDisplay()
	--this is basically just a flatten
	questDisplay = {}
	journalDisplay = {}
	
	local journalEntries = {} --temp holding table for sorting the entries
	
	for k,quest in pairs(quests) do
		--skip inactive quests
		if(quest.stateType ~= nil and quest.stateType ~= const.ENTRY_TYPE_NONE) then
			quest.quest = 1 -- tell the renderer what type of entry this is
			table.insert(questDisplay, quest)
			local curQuestIdx = #questDisplay --we'll need to modify current quest with it's children, store a reference.
			local questChildren = {}
			for k2,objective in pairs(quest.objectives) do
				if(objective.stateType ~= const.ENTRY_TYPE_NONE) then
					objective.objective = 1
					objective.parent = curQuestIdx
					
					--fix for missing data in bg1 and bg2.
					--if we have an objective title unique from the quest, use it. otherwise use the timestamp from my first(only) entry.
					if(objective.text == Infinity_FetchString(quest.text) or objective.text == nil) then
						objective.text = objective.entries[1].timeStamp
					end
					
					if(objective.stateType ~= const.ENTRY_TYPE_INFO) then
						--info entries should not go into quests
						table.insert(questDisplay, objective)
						table.insert(questChildren, #questDisplay)
					end
					
					local curObjectiveIdx = #questDisplay
					local objectiveChildren = {}
					for k3,entry in pairs(objective.entries) do
						entry.entry = 1
						
						entry.parent = curObjectiveIdx
						table.insert(questDisplay, entry)
						table.insert(objectiveChildren, #questDisplay)
					end
					questDisplay[curObjectiveIdx].children = objectiveChildren
				end
			end
			questDisplay[curQuestIdx].children = questChildren
		end
	end
	
	-- add the user entries to the journal display
	for k,entry in pairs(userNotes) do
		entry.entry = 1
		table.insert(journalEntries,entry)
	end
	
	--add the loose entries (entries without quests) to the journal display
	for k,entry in pairs(looseEntries) do
		entry.entry = 1
		table.insert(journalEntries,entry)
	end
	
		
	table.sort(journalEntries, compareByRecvTime)
	
	for k,entry in pairs(journalEntries) do
		local title  = {}
		title.title = 1
		title.text = entry.timeStamp
		title.chapters = entry.chapters
		table.insert(journalDisplay,title)
		table.insert(journalDisplay,entry)
	end
end
function questContainsSearchString(row)
	if(journalSearchString == nil or journalSearchString == "") then return 1 end --no search string, do nothing
	local text = Infinity_FetchString(questDisplay[row].text)
	if(string.find(string.lower(text),string.lower(journalSearchString))) then return 1 end -- string contains search string.
	if(questDisplay[row].children == nil) then return nil end --no children, does not contain search string.
	for k,v in pairs(questDisplay[row].children) do
		--Infinity_Log(v)
		if(containsSearchString(v)) then return 1 end -- one of children contains search string
	end
	return nil --does not contain search string
end
function containsChapter(tab, chapter)
	if(not tab) then return nil end
	return tab[chapter]
end
function entryEnabled(row)
	local rowTab =  questDisplay[row]
	if(rowTab == nil or rowTab.entry == nil or not containsChapter(rowTab.chapters,chapter)) then return nil end

	if(objectiveEnabled(rowTab.parent)) then return 1 else return nil end -- and questDisplay[rowTab.parent].expanded
end
function getEntryText(row)
	return questDisplay[row].text
end

function objectiveEnabled(row)
	local rowTab =  questDisplay[row]
	if(rowTab == nil or rowTab.objective == nil or not containsChapter(rowTab.chapters,chapter)) then return nil end

	if(questEnabled(rowTab.parent) and questDisplay[rowTab.parent].expanded) then return 1 else return nil end
end
function getObjectiveText(row)
	local rowTab =  questDisplay[row]
	if (rowTab == nil) then return nil end
	local text = rowTab.text
	if(text == "" or text == nil) then
		text = t("NO_OBJECTIVE_NORMAL")
	end
	--objectives shouldn't really display a completed state since they don't actually follow a progression.
	--if(getFinished(row)) then
	--	text = "^0xFF666666" .. text .. " (Finished)^-"
	--end

	return text
end

--Many thanks to 'lefreut'
function childrenContainsChapter(children)
	for k,v in pairs(children) do
		if containsChapter(questDisplay[v].chapters,chapter) then
			return true
		end
	end
	return nil
end

function questEnabled(row)
	--return (questDisplay[row] and questDisplay[row].quest and containsChapter(questDisplay[row].chapters,chapter) and (#questDisplay[row].children > 0))
	return (questDisplay[row] and questDisplay[row].quest and containsChapter(questDisplay[row].chapters,chapter) and childrenContainsChapter(questDisplay[row].children))
end

function getQuestText(row)
	local rowTab =  questDisplay[row]
	if (rowTab == nil) then return nil end
	local text = Infinity_FetchString(rowTab.text)
	
	--if(getFinished(row)) then
	--	text = "^0xFFaaaaaa" .. text .. " (" .. t("OBJECTIVE_FINISHED_NORMAL") .. ")^-"
	--end

	return text
end
function getArrowFrame(row)
	if(questDisplay[row] == nil or (questDisplay[row].objective == nil and questDisplay[row].quest == nil)) then return "" end

	
	if(questDisplay[row].expanded) then
		return 0
	else
		return 1
	end
end
function getArrowEnabled(row)
	if(questDisplay[row].quest == nil and questDisplay[row].objective == nil) then return nil end
	if(questDisplay[row].objective and not objectiveEnabled(row)) then return nil end
	if(questDisplay[row].quest and not questEnabled(row)) then return nil end
	return 1
end

function getFinished(row)
	if(questDisplay[row].stateType == const.ENTRY_TYPE_COMPLETE) then return 1 else return nil end
end
function showObjectiveSeperator(row)
	local tab = questDisplay[row]
	if(objectiveEnabled(row) or entryEnabled(row)) then
		--seperator is enabled for objective or entry as long as the next thing is an objective.
		--search until we find something enabled or end of table.
		local idx = row + 1
		while(questDisplay[idx]) do
			if(objectiveEnabled(idx)) then
				return 1
			else 
				if(questEnabled(idx) or entryEnabled(idx)) then
					return nil
				end
			end
			idx = idx + 1
		end
	end
end


function getJournalTitleEnabled(row)
	return journalDisplay[row].title and containsChapter(journalDisplay[row].chapters,chapter) and journalContainsSearchString(row)
end
function getJournalTitleText(row)
	return journalDisplay[row].text
end
function getJournalEntryEnabled(row)
	return journalDisplay[row].entry and containsChapter(journalDisplay[row].chapters,chapter) and journalContainsSearchString(row)
end
function getJournalEntryText(row)
	local text = Infinity_FetchString(journalDisplay[row].text)
	if(text == nil or text == "") then
		text = journalDisplay[row].text
	end
	
	if(journalSearchString and journalSearchString ~= "") then
		--do the search string highlight
		text = highlightString(text, journalSearchString, "^0xFF0000FF")
	end
	
	return text
end
function getJournalDarken(row)
	local entry = journalDisplay[row]
	if(entry.title) then
		return (row == selectedJournal or row + 1 == selectedJournal)
	end
	if(entry.entry) then
		return (row == selectedJournal or row - 1 == selectedJournal)
	end
end
function journalContainsSearchString(row)
	if(journalSearchString == nil or journalSearchString == "") then return 1 end --no search string, do nothing
	local text = Infinity_FetchString(journalDisplay[row].text)
	if(text == "") then text = journalDisplay[row].text end --no stringref, use the text.
	if(string.find(string.lower(text),string.lower(journalSearchString))) then return 1 end -- string contains search string.
	
	--check if the corresponding row to this one contains the string.
	local pairText = nil
	if(journalDisplay[row].title) then
		--check the corresponding entry
		pairText = Infinity_FetchString(journalDisplay[row+1].text) or journalDisplay[row+1].text
		if(pairText == "") then pairText = journalDisplay[row+1].text end 
	else 
		if (journalDisplay[row].entry) then
			pairText = Infinity_FetchString(journalDisplay[row-1].text) or journalDisplay[row-1].text
			if(pairText == "") then pairText = journalDisplay[row-1].text end 
		end
	end
	if(string.find(string.lower(pairText),string.lower(journalSearchString))) then return 1 end -- pair string contains search string.
	
	return nil --does not contain search string
end
function dragJournal()
	local offsetX,offsetY,menuWidth,menuHeight = Infinity_GetMenuArea('JOURNAL')
	offsetX = offsetX + motionX
	offsetY = offsetY + motionY
	
	--clamping
	if(offsetX < 80) then
		offsetX = 80
	end
	if(offsetY < 0) then
		offsetY = 0
	end
	
	local screenWidth, screenHeight = Infinity_GetScreenSize()
	if(offsetX > screenWidth - 80 - menuWidth) then
		offsetX = screenWidth - 80 - menuWidth
	end
	if(offsetY > screenHeight - menuHeight) then
		offsetY = screenHeight - menuHeight
	end
	
	Infinity_SetOffset('JOURNAL', offsetX, offsetY)
end
function journalEntryClickable(selectedJournal)
	local entry = journalDisplay[selectedJournal]
	if(entry) then return true end
end
function getJournalEntryRef(selectedJournal)
	local entry = journalDisplay[selectedJournal]
	if(not entry) then return end
	if(entry.title) then
		return journalDisplay[selectedJournal + 1].text
	else
		return entry.text
	end
end
function getJournalBackgroundFrame()
	if(journalMode == const.JOURNAL_MODE_QUESTS) then
		return 0
	else
		return 1
	end
end
function getChapterText()
	return chapterText()
end
journalMode = const.JOURNAL_MODE_QUESTS
journalSearchString = ""
`
menu
{
	name 'JOURNAL'
	align left top
	offset 80 0
	ignoreEsc
	enabled "sidebarsGreyed ~= 1"
	onopen "
		reinitQuests()
		buildQuestDisplay()
		chapter = math.max(0,Infinity_GetMaxChapterPage());
	"
	label --background background
	{
		area 0 0 501 773
		mosaic "QUESTBAK"
	}
	label --Background
	{
		area  	0 0 485 747
		bam "QUESTBG"
		sequence 0
		frame lua "getJournalBackgroundFrame()"
	}
	handle
	{
		area 0 0 472 80
		actionDrag
		"
			dragJournal()
		"
	}
	button
	{
		area 216 22 134 34
		text "JOURNAL_LABEL"
		text style "label_parchment"
		text point 16
		action "journalMode = const.JOURNAL_MODE_JOURNAL"
	}
	button
	{
		area 34 18 136 42
		text "QUESTS_LABEL"
		text style "label_parchment"
		text point 16
		action "journalMode = const.JOURNAL_MODE_QUESTS"
	}
	button
	{
		area 419 13 66 67
		on esc
		bam "XBUTT"
		action 
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
		"
	}
	label -- Chapter
	{
		area 85 610 146 60
		text lua "chapterText()"
		text style "label_parchment"
		mosaic "PCHAPTER"
	}
	button --prev chapter
	{
		area		48 610 41 60
		bam "PARROW"
		sequence 0
		
		action
		"
			incrChapter(-1);
		"	
	}
	button
	{
		area		224 610 41 60
		bam "PARROW"
		sequence 1
		
		action
		"
			incrChapter(1);
		"	
	}
	--[Bug #20368] Recent events button cut for now.
	--
	--button
	--{
	--	enabled "journalMode == const.JOURNAL_MODE_QUESTS"
	--	area 278 616 162 47
	--	bam "PAPERBUT"
	--	sequence 1
	--	text "RECENT_EVENTS_LABEL"
	--	text style "button_parchment"
	--	action 
	--	"
	--		Infinity_PushMenu('JOURNAL_RECENT_EVENTS')
	--	"
	--}
	label
	{
		enabled "journalMode == const.JOURNAL_MODE_JOURNAL"
		area 54 88 374 32
		fill 50 50 50 150
	}
	edit
	{
		enabled "journalMode == const.JOURNAL_MODE_JOURNAL"
		area 62 94 357 22
		var journalSearchString
		placeholder "ENTER_SEARCH_TERM_NORMAL"
		text style "edit"
		maxlines 1
	}
	list
	{
		column
		{
			width 10
			label
			{
				area 0 0 31 31
				enabled "getArrowEnabled(rowNumber)"
				bam "PCHEV"
				frame lua "getArrowFrame(rowNumber)"
				text style "label_parchment"
				align top center
			}
		}
		column { 
			width 90 
			label
			{
				enabled "questEnabled(rowNumber)"
				area 0 0 -1 -1
				fill 1 1 1 150
			}
			label
			{	
				enabled "questEnabled(rowNumber)"
				area 8 0 -1 -1
				text lua "getQuestText(rowNumber)"
				text style "label"
				align left center
			}
			label
			{
				enabled "objectiveEnabled(rowNumber)"
				area 16 0 -1 -1
				pad 0 10 0 10
				text lua "getObjectiveText(rowNumber)"
				text style "normal_parchment"
			}
			label
			{
				enabled "entryEnabled(rowNumber)"
				area 16 0 -1 -1
				pad 0 10 0 10
				text lua "getEntryText(rowNumber)"
				text style "normal_parchment"
				text color M
			}
		}
		enabled "journalMode == const.JOURNAL_MODE_QUESTS"
		rowheight	dynamic
		hidehighlight
		seperator "showObjectiveSeperator(rowNumber)"
		table		"questDisplay"
		var			selectedQuest
		scrollbar	'GUISCRP'
		area		48 98 404 480
		action
		"
			if(questDisplay[selectedQuest].expanded) then 
				questDisplay[selectedQuest].expanded = nil
			else
				questDisplay[selectedQuest].expanded = 1
			end
		"
		
	}
	
	list --journal
	{
		column
		{
			width 100
			--light
			label
			{
				enabled "getJournalTitleEnabled(rowNumber) and not getJournalDarken(rowNumber)"
				area 0 0 -1 -1
				pad 0 16 0 0
				text lua "getJournalTitleText(rowNumber)"
				text style "label_parchment"
				text color 0 120 0 255
			}
			label
			{
				enabled "getJournalEntryEnabled(rowNumber) and not getJournalDarken(rowNumber)"
				area 0 0 -1 -1
				pad 8 16 0 16
				text lua "getJournalEntryText(rowNumber)"
				text style "normal_parchment"
			}
			
			--dark
			label
			{
				enabled "(getJournalTitleEnabled(rowNumber) or getJournalEntryEnabled(rowNumber)) and getJournalDarken(rowNumber)"
				area 0 0 -1 -1
				fill 0 0 0 150
			}
			label
			{
				enabled "getJournalTitleEnabled(rowNumber) and getJournalDarken(rowNumber)"
				area 0 0 -1 -1
				pad 0 16 0 0
				text lua "getJournalTitleText(rowNumber)"
				text style "label_parchment"
				text color 255 100 100 255
			}
			label
			{
				enabled "getJournalEntryEnabled(rowNumber) and getJournalDarken(rowNumber)"
				area 0 0 -1 -1
				pad 8 16 0 16
				text lua "getJournalEntryText(rowNumber)"
				text style "normal_parchment"
				text color 'B'
			}
			
			
		}
		enabled "journalMode == const.JOURNAL_MODE_JOURNAL"
		seperator "getJournalEntryEnabled(rowNumber)"
		rowheight	dynamic
		hidehighlight
		table		"journalDisplay"
		var			selectedJournal
		scrollbar	'GUISCRP'
		area		54 128 386 450
	}
	label
	{
		area 58 569 382 25
		mosaic PAPERSEP
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_JOURNAL"
		area 272 594 162 47
		bam "PAPERBUT"
		sequence 1
		text "ADD_ENTRY_LABEL"
		text style "button_parchment"
		action 
		"
			journalMode = const.JOURNAL_MODE_EDIT
			journalNoteEdit = ''
			journalNoteEditRef = nil
		"
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_JOURNAL"
		clickable lua "journalEntryClickable(selectedJournal)"
		area 272 641 162 47
		bam "PAPERBUT"
		sequence 1
		text "EDIT_ENTRY_LABEL"
		text style "button_parchment"
		action
		"
			journalNoteEditRef = getJournalEntryRef(selectedJournal)
			journalNoteEdit = Infinity_FetchString(journalNoteEditRef)
			journalMode = const.JOURNAL_MODE_EDIT
		"
	}
	
	
	label
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT"
		area 48 88 392 36
		text style "normal_parchment"
		text "WRITE_ENTRY_TEXT"
		
	}
	label
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT"
		area 58 140 376 4
		fill 10 71 1 255
	}
	label
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT"
		area 58 144 382 42
		text style "label"
		text color 0 120 0 255
		text lua "Infinity_GetTimeString()"
	}
	edit
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT"
		area		58 186 382 383
		text style	"edit_parchment"
		var			journalNoteEdit
		scrollbar	'GUISCRP'
		
	}
	
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT"
		area 272 641 162 47
		bam "PAPERBUT"
		sequence 1
		text "CANCEL_BUTTON"
		text style "button_parchment"
		action 
		"
			journalMode = const.JOURNAL_MODE_JOURNAL
		"
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT"
		area 272 594 162 47
		bam "PAPERBUT"
		sequence 1
		text "DONE_BUTTON"
		text style "button_parchment"
		action 
		"
			if(journalNoteEditRef == nil) then
				Infinity_OnAddUserEntry(journalNoteEdit)
			else
				Infinity_OnEditUserEntry(journalNoteEditRef, journalNoteEdit)
			end
			journalMode = const.JOURNAL_MODE_JOURNAL
		"
	}
	
	
}
menu
{
	name 'JOURNAL_RECENT_EVENTS'
	align center center
	modal
	label
	{
		area 0 0 672 672
		mosaic "RECENTEV"
		
	}
	label
	{
		area 158 52 354 46
		text "RECENT_EVENTS_TITLE"
		text style "title"
	}
	button
	{
		area 594 10 33 35
		bam "XBUTT"
		action 
		"
			Infinity_PopMenu('JOURNAL_RECENT_EVENTS')
		"
	}
	text
	{
		area 126 106 422 458
		text "Recent events text will go here."
		text style "normal"
	}
	button
	{ 
		area		320 572 200 44
		text		"DONE_BUTTON"
		text style	'button'
		bam			GUIBUTNT
		sequence	2
		action
		"
			Infinity_PopMenu('JOURNAL_RECENT_EVENTS')
		"
	}
}
`
function processQuestsWithStyle()
	out = ""
	for k,v in pairs(quests_old) do
		local questStrref = v[3]
		out = out .. "createQuest    ( " .. questStrref .. " )\n"
		
		for k2,v2 in pairs(journals_quests_old) do
			if(v2[2] == k) then
				local subgroup = v2[const.ENTRIES_IDX_SUBGROUP]
				if(subgroup == 0) then subgroup = "nil" end
				out = out .. "createEntry    ( " .. questStrref .. ", -1, " .. v2[1] .. ", {}, " .. subgroup .." )\n"
			end
		end
	end
	Infinity_Log(out)
end
`
menu
{
	name 'MESSAGE_SCREEN'
	align center center
	label
	{
		area 0 0 657 234
		mosaic GUIERR6
	}
	label
	{
		area 29 21 580 126
		text lua "Infinity_FetchString(messageScreenText)"
		text style	"label"
	}
}
`
function getDLCDescription()
	return Infinity_FetchString(dlcScreen:GetDLCDescription())
end
function getDLCTitle()
	return Infinity_FetchString(dlcScreen:GetDLCTitle())
end
function getDLCIndex()
	return dlcScreen:GetDLCIndex() .. "/" .. dlcScreen:GetDLCCount()
end
function isDLCBuyButtonClickable()
	local isBought = dlcScreen:GetDLCBought()
	return isBought == false
end
`
menu
{
	name 'START_DLC'
	align center center

	label
	{
		area 0 0 1024 768
		mosaic 'GUIDLC'
	}

	label
	{
		area		60 14 906 42
		text		"STRREF_GUI_LOWER_DLC_STORE"
		text style  'title'
		text align	center center
	}

	label
	{
		area		210 84 596 64
		text lua	"getDLCIndex()"
		text style  'title'
		text align	center center
	}

	label
	{
		area		596 172 318 42
		text lua	"getDLCTitle()"
		text style  'title'
		text align	center center
	}
		
	text
	{
		area		588 228 336 308
		text lua	"getDLCDescription()"
		text style  'normal'
		scrollbar	'rgpscrl'		
	}
	
	label
	{
		area 134 190 410 450
		bitmap lua "dlcScreen:GetDLCImage()"
	}

	button 
	{
		bam 'GUIPRC'
		sequence 0
		area 22 274 56 140
		align center center
		action 
		"
			dlcScreen:DecrementDLCIndex()
		"
	}

	button 
	{
		bam 'GUIPRC'
		sequence 1
		area 946 270 52 140
		align center center
		action 
		"
			dlcScreen:IncrementDLCIndex()
		"
	}

	button 
	{
		bam 'GUIOSTUM'
		sequence 0
		area 404 708 204 48
		align center center
		text style "button"
		text "BACK_BUTTON"
		action 
		"
			dlcScreen:OnDoneButtonClick()
		"
	}

	button 
	{
		bam 'GUIOSTCL'
		frame 3
		area 604 634 300 48
		align center center
		text style "button"
		text "STRREF_GUI_DLC_INSTALLED"
		--text color 'E'
		enabled "not isDLCBuyButtonClickable()"
		action 
		"
			dlcScreen:OnBuyButtonClick()
		"
	}

	button 
	{
		bam 'GUIOSTCL'
		sequence 2
		area 604 634 300 48
		align center center
		text style "button"
		text "BUY_BUTTON"
		enabled "isDLCBuyButtonClickable()"
		action 
		"
			dlcScreen:OnBuyButtonClick()
		"
	}
}

`
dlcStatusDescriptionText = ""
dlcStatusButtonText = ""
dlcStatusState = 0

DLC_STATE_WAITING = 0
DLC_STATE_IN_PROGRESS = 1
DLC_STATE_SUCCESS = 2
DLC_STATE_FAILED = 3
DLC_STATE_CANCELLED = 4
DLC_STATE_RESTORING_PURCHASES = 5
DLC_STATE_RESTORING_PURCHASES_COMPLETE = 6
DLC_STATE_DOWNLOADING = 7

function checkDLCState()
	dlcStatusState = dlcScreen:GetDLCState()
	if dlcStatusState == DLC_STATE_WAITING then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_WAITING")
		dlcStatusButtonText = t("BACK_BUTTON")
	elseif dlcStatusState == DLC_STATE_IN_PROGRESS then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_IN_PROGRESS")
		dlcStatusButtonText = t("BACK_BUTTON")
	elseif dlcStatusState == DLC_STATE_SUCCESS then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_SUCCESS")
		dlcStatusButtonText = t("CONTINUE_BUTTON")
	elseif dlcStatusState == DLC_STATE_FAILED then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_FAILED")
		dlcStatusButtonText = t("CONTINUE_BUTTON")
	elseif dlcStatusState == DLC_STATE_CANCELLED then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_CANCELLED")
		dlcStatusButtonText = t("CONTINUE_BUTTON")
	elseif dlcStatusState == DLC_STATE_RESTORING_PURCHASES then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_RESTORING_PURCHASES")
		dlcStatusButtonText = t("BACK_BUTTON")
	elseif dlcStatusState == DLC_STATE_RESTORING_PURCHASES_COMPLETE then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_RESTORING_PURCHASES_COMPLETE")
		dlcStatusButtonText = t("CONTINUE_BUTTON")
	elseif dlcStatusState == DLC_STATE_DOWNLOADING then
		dlcScreen:GetDownloadString()
		dlcStatusButtonText = ""
	else
		dlcStatusDescriptionText = "WAFFLES_Dont Know How We Got Here_WAFFLES"
		dlcStatusButtonText = "WAFFLES_WAFFLES_WAFFLES"
	end
end

function getDLCStatusText()
	checkDLCState()
	return dlcStatusDescriptionText
end
`
menu
{
	name 'START_DLC_STATUS'
	align center center

	label
	{
		area 0 0 408 420
		mosaic 'GUIERR'
	}

	label
	{
		area 86 76 236 84
		text style "label"
		text lua "getDLCStatusText()"
	}

	button 
	{
		bam 'GUIOSTUM'
		sequence 0
		area 104 320 202 46
		align center center
		text style "button"
		text lua "dlcStatusButtonText"
		enabled "dlcStatusState ~= DLC_STATE_DOWNLOADING"
		action 
		"
			dlcScreen:OnErrorButtonClick();
		"
	}
}
`	
	dialogTable = {}
	dialogOverflowTable = {}
	hasDialogResponse = nil
	
	chatboxScrollToBottom = nil
	chatboxScrollTimeLast = 0
	chatboxContentHeight = 0
	chatboxOverflowed = nil
	chatboxJumpToBottom = nil
	
	-- The following two values determine how many item entries can exist.  We trim 
	-- the number of entries to numDialogTrimEntries once it has overflowed that value
	-- by numDialogOverflowLimit.
	numDialogTrimEntries = 512
	numDialogOverflowEntries = numDialogTrimEntries + 128
	
	lastTrimmedContentHeight = 0
	
	function getNumDialogTableEntries()
		local count = 0
		for _ in pairs(dialogTable) do count = count + 1 end
		return count
	end
	
	function trimDialogTableSize()
		local  numTableEntries = getNumDialogTableEntries()
		if (numTableEntries > numDialogOverflowEntries) then
			local numEntriesToRemove = numTableEntries - numDialogTrimEntries
			while (numEntriesToRemove > 0) do
				-- Get our table entry and calculate its size
				local tableEntry = dialogTable[1]
				local delta = Infinity_GetContentHeight(styles.normal.font, w, tableEntry.text, styles.normal.point, 1, styles.normal.useFontZoom) --1 for indent.
				chatboxContentHeight = chatboxContentHeight - delta
				lastTrimmedContentHeight = lastTrimmedContentHeight + delta
					
				table.remove(dialogTable, 1)
				numEntriesToRemove = numEntriesToRemove - 1
			end
		end
	end
	
	function buildResponsesList()

		hasDialogResponse = nil
		dialogResponses = {}
		for k,v in pairs(worldPlayerDialogChoices) do
			if v.marker then
				table.insert(dialogResponses, v)
				hasDialogResponse = 1
			end
		end
	end
	function canShowDialogButton(num)
		-- Show the buttons if we have a response, and the dialog button is not enabled
		return dialogResponses and dialogResponses[num] ~= nil and showDialogButtonChoices()
	end
	
	function addDialogMessage(text,marker,makeTop)
		local tab = {}
		tab.text = text
		tab.marker = marker
		if(marker) then 
			dialogViewMode = nil
			if(text == "") then
				--empty markers are a signal, we shouldn't actually display them.
				if(makeTop == true) then
					--we'll ensure the next line is included in the visible content.
					chatboxContentHeight = 0
				end
				return
			else
				hasDialogResponse = 1
			end
		end
		
		--Calculate running total of dialog content height
		local x,y,w,h = Infinity_GetArea("worldPlayerDialogChoicesList")
		w = w - 18 --account for scrollbar influence on width
		local delta = Infinity_GetContentHeight(styles.normal.font, w, text, styles.normal.point, 1, styles.normal.useFontZoom) --1 for indent.
		chatboxContentHeight = chatboxContentHeight + delta
		
		if(marker and chatboxContentHeight > h) then
			--More to display than we have room for, put the responses in overflow and hide them behind button
			table.insert(dialogOverflowTable,tab)
		else
			table.insert(dialogTable,tab)
		end
		
		if(makeTop == true) then
			--we'll ensure the next line is included in the visible content.
			chatboxContentHeight = 0
		end
		
		trimDialogTableSize()
		
		triggerChatboxScroll()
		
		buildResponsesList()
	end
	function clearDialogResponses()
		for k,v in pairs(dialogTable) do
			if(v.marker) then
				table.remove(dialogTable,k)
				clearDialogResponses()
			end
		end
		hasDialogResponse = nil
		chatboxOverflowed = nil
		chatboxContentHeight = 0
		dialogOverflowTable = {}
	end
	function dialogEntrySelectable(row)
		return (dialogTable[row].marker ~= nil)
	end
	function showDialogButtonChoices()
		return not (not hasDialogResponse or dialogViewMode or #dialogOverflowTable > 0)
	end
	function getResponsePickable()
		return not hasDialogResponse or dialogViewMode or (gameOptions.m_bConfirmDialog == true)
	end
	function getDialogButtonText()
		if(dialogViewMode) then
			return t("DONE_BUTTON")
		end
		
		if(#dialogOverflowTable > 0) then
			return t("SHOW_MORE_RESPONSES_BUTTON")
		end
		
		if(gameOptions.m_bConfirmDialog == true) then
			return t("CHOOSE_RESPONSE_BUTTON")
		end
		
		return dialogButtonText
	end
	
	function triggerChatboxScroll()
		chatboxScrollToBottom = 1
		chatboxScrollTimeLast = Infinity_GetClockTicks()
	end
	function chatboxScroll(top, height, contentHeight)
		if(chatboxJumpToBottom and contentHeight > height) then
			chatboxJumpToBottom = nil
			return height-contentHeight
		end
		if(chatboxScrollToBottom == 0) then
			--defer to default scrolling
			return nil
		end
		if(contentHeight < height) then
			--no scrolling required, content fits
			chatboxScrollToBottom = nil
			return nil
		end
		local dT = Infinity_GetClockTicks() - chatboxScrollTimeLast
		chatboxScrollTimeLast = Infinity_GetClockTicks()
		top = top + lastTrimmedContentHeight
		lastTrimmedContentHeight = 0
		local newTop = (dT * -0.25) + top
		if (newTop + contentHeight > height + 200) then
			return (height - contentHeight + 200)
		end
		if(newTop + contentHeight < height) then
			chatboxScrollToBottom = 0
			return height - contentHeight --70                   -- - ((13/100)*fontSize) - 5
		end
		return newTop
	end
	function displayOverflowResponses()
		for k,v in pairs(dialogOverflowTable) do
			table.insert(dialogTable,v)
		end
		dialogOverflowTable = {}
		triggerChatboxScroll()
		buildResponsesList()
	end
	function GetFirstMarkedResponse()
		for k,v in pairs(dialogTable) do
			if v.marker ~= nil then
				return k
			end
		end
		return -1	
	end
	function onDialogButtonClick()
		if(dialogViewMode) then
			--In dialog view mode this button closes the menu.
			worldScreen:StopDialogHistory()
			return
		end
		
		if(#dialogOverflowTable > 0) then
			displayOverflowResponses()
			return
		end

		if(gameOptions.m_bConfirmDialog == true and hasDialogResponse) then
			-- if confirm dialog and choices available.
			worldScreen:OnDialogReplyClick(dialogTable[worldPlayerDialogSelection].marker)
			worldPlayerDialogSelection = 0
			return
		else
			-- no choices, just step.
			worldScreen:StepDialog()
		end
	end
	function getDialogRowClickable(row)
		return dialogTable[row].marker ~= nil
	end
	function isTouchActionbar()
		--Make this read from an option to make it easy to switch out.
		local default = 0
		if(e:IsTouchUI()) then default = 1 end
		local val = Infinity_GetINIValue('Program Options', 'Use Touch Actionbar', default)
		if (val ~= 0) then
			return 1
		else
			return nil
		end
	end
`
menu
{
	name 'WORLD_DIALOG_LEFT'
	align left center
	ignoreEsc
	--ignoreFocus 1
	onOpen
	"
		Infinity_PushMenu('WORLD_DIALOG_LEFT_BUTTONS')
	"
	onClose
	"
		Infinity_PopMenu('WORLD_DIALOG_LEFT_BUTTONS')
	"
	label
	{
		area 0 0 80 1536
		mosaic GUIWLSP
	}
}
menu
{
	name 'WORLD_DIALOG_LEFT_BUTTONS'
	align left center
	ignoreEsc
	--ignoreFocus 1
	label
	{
		area 0 0 85 780
		rectangle 4
	}
	button
	{
		area 15 25 54 54
		bam CBUTT
		scaleToClip
		text lua "'...'"
		text style "button"
		pad -3 -6 0 0
		enabled "not showDialogButtonChoices()"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			onDialogButtonClick()
		"
	}

	button
	{
		area 15 25 54 54
		bam CBUTT
		scaleToClip
		text lua "'1'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(1)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[1].marker)
		"
	}
	button
	{
		area 15 100 54 54
		bam CBUTT
		scaleToClip
		text lua "'2'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(2)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[2].marker)
		"
	}
	button
	{
		area 15 175 54 54
		bam CBUTT
		scaleToClip
		text lua "'3'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(3)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[3].marker)
		"
	}
	button
	{
		area 15 250 54 54
		bam CBUTT
		scaleToClip
		text lua "'4'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(4)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[4].marker)
		"
	}
	button
	{
		area 15 325 54 54
		bam CBUTT
		scaleToClip
		text lua "'5'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(5)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[5].marker)
		"
	}
	button
	{
		area 15 400 54 54
		bam CBUTT
		scaleToClip
		text lua "'6'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(6)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[6].marker)
		"
	}
	button
	{
		area 15 475 54 54
		bam CBUTT
		scaleToClip
		text lua "'7'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(7)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[7].marker)
		"
	}

	button
	{
		area 15 550 54 54
		bam CBUTT
		scaleToClip
		text lua "'8'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(8)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[8].marker)
		"
	}

	button
	{
		area 15 625 54 54
		bam CBUTT
		scaleToClip
		text lua "'9'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(9)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[9].marker)
		"
	}
	button
	{
		area 15 700 54 54
		bam CBUTT
		scaleToClip
		text lua "'10'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(10)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[10].marker)
		"
	}
}
menu
{
	name 'WORLD_DIALOG_RIGHT'
	align right center
	ignoreEsc
	--ignoreFocus 1
	enabled "canShowDialogButton(11)"
	onOpen
	"
		Infinity_PushMenu('WORLD_DIALOG_RIGHT_BUTTONS')
	"
	onClose
	"
		Infinity_PopMenu('WORLD_DIALOG_RIGHT_BUTTONS')
	"
	label
	{
		area 0 0 80 1536
		mosaic GUIWRSP
	}
}
menu
{
	name 'WORLD_DIALOG_RIGHT_BUTTONS'
	align right center
	ignoreEsc
	--ignoreFocus 1
	enabled "canShowDialogButton(11)"
	label
	{
		area 0 0 85 780
		rectangle 4
	}
	button
	{
		area 15 25 54 54
		bam CBUTT
		scaleToClip
		text lua "'11'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(11)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[11].marker)
		"
	}
	button
	{
		area 15 100 54 54
		bam CBUTT
		scaleToClip
		text lua "'12'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(12)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[12].marker)
		"
	}
	button
	{
		area 15 175 54 54
		bam CBUTT
		scaleToClip
		text lua "'13'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(13)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[13].marker)
		"
	}
	button
	{
		area 15 250 54 54
		bam CBUTT
		scaleToClip
		text lua "'14'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(14)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[14].marker)
		"
	}
	button
	{
		area 15 325 54 54
		bam CBUTT
		scaleToClip
		text lua "'15'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(15)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[15].marker)
		"
	}
	button
	{
		area 15 400 54 54
		bam CBUTT
		scaleToClip
		text lua "'16'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(16)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[16].marker)
		"
	}
	button
	{
		area 15 475 54 54
		bam CBUTT
		scaleToClip
		text lua "'17'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(17)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[17].marker)
		"
	}

	button
	{
		area 15 550 54 54
		bam CBUTT
		scaleToClip
		text lua "'18'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(18)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[18].marker)
		"
	}

	button
	{
		area 15 625 54 54
		bam CBUTT
		scaleToClip
		text lua "'19'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(19)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[19].marker)
		"
	}
	button
	{
		area 15 700 54 54
		bam CBUTT
		scaleToClip
		text lua "'20'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(20)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[20].marker)
		"
	}
}
`
	currentButtonHelp = 11
	buttonHelp = 
	{
		{'GUILS10', 	 0,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_RETURNTOGAME'}, 			--  1	return to game
		{'GUILS10', 	 1,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_MAP'}, 					--  2	map
		{'GUILS10', 	 2,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_JOURNAL'},				--  3	journal
		{'GUILS10', 	 3,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_INVENTORY'}, 				--  4	inventory
		{'GUILS10', 	 4,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERRECORD'}, 		--  5	record
		{'GUILS10', 	 5,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_MAGESPELLS'}, 			--  6	mage book
		{'GUILS10', 	 6,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_PRIESTSPELLS'}, 			--  7	priest scroll
		{'GUILS10', 	 7,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_OPTIONS'}, 				--  8	options
		{'GUILS10', 	 8,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERARBITRATION'}, 	--  9	arbitration
		{'GUILS10', 	15,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_QUICKSAVE'}, 				-- 10	quick save
		{'GUILS10', 	16,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_HELP'}, 					-- 11	help
		{'GUILS10', 	 9,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_REST'}, 					-- 12	rest
		{'GUILS10', 	14,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_SELECT'}, 				-- 13	drag
		{'GUILS10', 	11,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_HIGHLIGHT'}, 				-- 14	highlight
		{'GUILS10', 	10,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_TOGGLEAI'}, 				-- 15	ai
		{'GUILS10', 	13,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_SELECTALL'}, 				-- 16	select all
		{'',            -1,	0,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 17	player 1
		{'',            -1,	1,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 18	player 2
		{'',            -1,	2,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 19	player 3
		{'',            -1,	3,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 20	player 4
		{'',            -1,	4,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 21	player 5
		{'',            -1,	5,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 22	player 6
		{'',            -1,	-1,	1,	0, -1,			'',	'HELPTUTORIAL_CLOCK'}, 					-- 23	clock
		{'ROUNDBUT',	 0,	-1,	0,	1, -1,			'',	'HELPTUTORIAL_QUICKLOOT'}, 				-- 24	quick loot
		{'GUIBTACT',	64,	-1,	0,	0,  0,			'',	'HELPTUTORIAL_ARROWLEFT'}, 				-- 25
		{'GUIBTACT',	66,	-1,	0,	0,  1,			'',	'HELPTUTORIAL_ARROWRIGHT'}, 			-- 26
		{'GUIBTACT',	22,	-1,	0,	0,  2,			'',	'HELPTUTORIAL_BARDSONG'}, 				-- 27
		{'GUIBTACT',	12,	-1,	0,	0,  3,			'',	'HELPTUTORIAL_CASTSPELLS'}, 			-- 28
		{'GUIBTACT',	34,	-1,	0,	0,  4,			'',	'HELPTUTORIAL_FINDTRAPS'}, 				-- 29
		{'GUIBTACT',	 4,	-1,	0,	0,  5,			'',	'HELPTUTORIAL_DIALOG'}, 				-- 30
		{'GUIBTACT',	20,	-1,	0,	0,  6,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 31
		{'GUIBTACT',	 0,	-1,	0,	0,  7,			'',	'HELPTUTORIAL_DEFEND'}, 				-- 32
		{'GUIBTACT',	14,	-1,	0,	0,  8,			'',	'HELPTUTORIAL_ATTACK'}, 				-- 33
		{'GUIBTACT',	40,	-1,	0,	0,  9,			'',	'HELPTUTORIAL_SHAPECHANGE'}, 			-- 34
		{'GUIBTACT',	38,	-1,	0,	0, 10,			'',	'HELPTUTORIAL_SPECIALABILITIES'}, 		-- 35
		{'GUIBTACT',	30,	-1,	0,	0, 11,			'',	'HELPTUTORIAL_STEALTH'}, 				-- 36
		{'GUIBTACT',	26,	-1,	0,	0, 12,			'',	'HELPTUTORIAL_THIEVING'}, 				-- 37
		{'GUIBTACT',	 8,	-1,	0,	0, 13,			'',	'HELPTUTORIAL_TURNUNDEAD'}, 			-- 38
		{'GUIBTACT',	18,	-1,	0,	0, 14,			'',	'HELPTUTORIAL_USEITEM'}, 				-- 39
		{'GUIBTACT',	58,	-1,	0,	0, 15,			'',	'HELPTUTORIAL_STOP'}, 					-- 40
		{'GUIBTACT',	20,	-1,	0,	0, 16,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 41
		{'GUIBTACT',	20,	-1,	0,	0, 17,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 42
		{'GUIBTACT',	20,	-1,	0,	0, 18,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 43
		{'GUIBTACT',	20,	-1,	0,	0, 19,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 44
		{'GUIBTACT',	20,	-1,	0,	0, 20,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 45
		{'STONSLOT',	-1,	-1,	0,	0, 21,	'STONITEM',	'HELPTUTORIAL_QUICKITEM'}, 				-- 46
		{'STONSLOT',	-1,	-1,	0,	0, 22,	'STONITEM',	'HELPTUTORIAL_QUICKITEM'}, 				-- 47
		{'STONSLOT',	-1,	-1,	0,	0, 23,	'STONITEM',	'HELPTUTORIAL_QUICKITEM'}, 				-- 48
		{'STONSLOT',	12,	-1,	0,	0, 24,	'STONSPEL',	'HELPTUTORIAL_QUICKSPELLS'}, 			-- 49
		{'STONSLOT',	12,	-1,	0,	0, 25,	'STONSPEL',	'HELPTUTORIAL_QUICKSPELLS'}, 			-- 50
		{'STONSLOT',	12,	-1,	0,	0, 26,	'STONSPEL',	'HELPTUTORIAL_QUICKSPELLS'}, 			-- 51
		{'STONSLOT',	-1,	-1,	0,	0, 27,	'STONWEAP',	'HELPTUTORIAL_QUICKWEAPON'}, 			-- 52
		{'STONSLOT',	-1,	-1,	0,	0, 28,	'STONWEAP',	'HELPTUTORIAL_QUICKWEAPON'}, 			-- 53
		{'STONSLOT',	-1,	-1,	0,	0, 29,	'STONWEAP',	'HELPTUTORIAL_QUICKWEAPON'}, 			-- 54
		{'STONSLOT',	-1,	-1,	0,	0, 30,	'STONWEAP',	'HELPTUTORIAL_QUICKWEAPON'}, 			-- 55
		{'STONSLOT',	-1,	-1,	0,	0, 31,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 56
		{'STONSLOT',	-1,	-1,	0,	0, 32,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 57
		{'STONSLOT',	-1,	-1,	0,	0, 33,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 58
		{'STONSLOT',	-1,	-1,	0,	0, 34,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 59
		{'STONSLOT',	-1,	-1,	0,	0, 35,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 60
		{'STONSLOT',	-1,	-1,	0,	0, 36,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 61
		{'STONSLOT',	-1,	-1,	0,	0, 37,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 62
		{'STONSLOT',	-1,	-1,	0,	0, 38,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 63
		{'STONSLOT',	-1,	-1,	0,	0, 39,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 64
		{'STONSLOT',	-1,	-1,	0,	0, 40,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 65
		{'STONSLOT',	-1,	-1,	0,	0, 41,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 66
		{'STONSLOT',	-1,	-1,	0,	0, 42,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 67
		{'STONSLOT',	-1,	-1,	0,	0, 43,			'',	'HELPTUTORIAL_ARROWLEFT'}, 				-- 68
		{'STONSLOT',	-1,	-1,	0,	0, 44,			'',	'HELPTUTORIAL_ARROWRIGHT'}, 			-- 69
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{'STONSLOT',	-1,	-1,	0,	0, 67,			'',	'HELPTUTORIAL_SWITCHTOMAGE'}, 			-- 91
		{},
		{'STONSLOT',	-1,	-1,	0,	0, 69,			'',	'HELPTUTORIAL_SWITCHTOCLERIC'}, 		-- 93
	}
`
menu
{
	name 'HELP'
	align center center
	ignoreEsc
	onOpen
	"
		currentButtonHelp = 11
		--Infinity_PushMenu('LEFT_SIDEBAR_HELP')
		--Infinity_PushMenu('RIGHT_SIDEBAR_HELP')
		--Infinity_PushMenu('WORLD_ACTIONBAR_HELP')
	"
	onClose
	"
		--Infinity_PopMenu('LEFT_SIDEBAR_HELP')
		--Infinity_PopMenu('RIGHT_SIDEBAR_HELP')
		--Infinity_PopMenu('WORLD_ACTIONBAR_HELP')
	"
	label
	{
		area 0 0 912 244
		mosaic GUIERR7
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][3] == -1 and buttonHelp[currentButtonHelp][4] == 0 and buttonHelp[currentButtonHelp][5] == 0 and buttonHelp[currentButtonHelp][6] == -1"
		area 54 24 75 54
		bam lua "buttonHelp[currentButtonHelp][1]"
		sequence lua "buttonHelp[currentButtonHelp][2]"
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][3] == -1 and buttonHelp[currentButtonHelp][4] == 0 and buttonHelp[currentButtonHelp][5] ~= 0 and buttonHelp[currentButtonHelp][6] == -1"
		area 54 24 44 44
		bam lua "buttonHelp[currentButtonHelp][1]"
		sequence lua "buttonHelp[currentButtonHelp][2]"
		scaleToClip
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][3] == -1 and buttonHelp[currentButtonHelp][4] == 0 and buttonHelp[currentButtonHelp][5] == 0 and buttonHelp[currentButtonHelp][6] ~= -1"
		area 54 24 75 54
		bam lua "buttonHelp[currentButtonHelp][1]"
		frame lua "buttonHelp[currentButtonHelp][2]"
	}
	button
	{
		area 54 24 64 90
		enabled "buttonHelp[currentButtonHelp][3] ~= -1"
		portrait lua "buttonHelp[currentButtonHelp][3]"
	}

	label
	{
		enabled "buttonHelp[currentButtonHelp][4] ~= 0"
		area 54 24 83 82
		bam "CGEAR"
		frame lua "timer:GetCurrentTime() % 24"
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][4] ~= 0"
		area 54 24 83 82
		bam "CDIAL"
		frame lua "timer:GetCurrentHour() % timer.TIMESCALE_HOUR_PER_DAY"
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][4] ~= 0"
		area 54 24 83 82
		bam "CPEN"
		frame lua "timer:GetCurrentTime() % 24"
	}

	label
	{
		enabled "buttonHelp[currentButtonHelp][7] ~= ''"
		area 54 24 52 52
		align center center
		bam lua "buttonHelp[currentButtonHelp][7]"
		frame lua "buttonHelp[currentButtonHelp][7]"
	}

	text
	{
		area 136 24 714 104
		text lua "t(buttonHelp[currentButtonHelp][8])"
		text style	"label"
		text align left top
		scrollbar	'rgpscrl'
	}
	button
	{
		area 306 176 300 44
		bam GUIOSTCL
		text "DONE_BUTTON"
		text style	"button"
		action 
		"
			Infinity_PopMenu('HELP')
		"
	}
}

menu
{
	name 'LEFT_SIDEBAR_HELP'
	align left top
	ignoreEsc
	onOpen 
	"
		Infinity_PushMenu('LEFT_SIDEBAR_BOTTOM_HELP')
	"
	onClose 
	"
		Infinity_PopMenu('LEFT_SIDEBAR_BOTTOM_HELP')
	"
	label
	{
		name 'leftSidebarBackground'
		area 0 0 80 1536
		mosaic GUIWLSP
	}
	label
	{

		area 0 1536 80 1536
		mosaic GUIWLSP
	}
	button
	{
		area 3 14 73 55
		bam GUILS10
		sequence 0
		tooltip lua "getTooltipWithHotkey(2,24364)"
		glow lua "true"
		action
		"
			currentButtonHelp = 1
		"
	}
	button
	{
		area 3 69 73 55
		bam GUILS10
		sequence 1
		tooltip lua "getTooltipWithHotkey(4,15418)"
		glow lua "true"
		action
		"
			currentButtonHelp = 2
		"
	}
	button
	{
		area 3 124 73 55
		bam GUILS10
		sequence 2
		tooltip lua "getTooltipWithHotkey(3,24359)"
		glow lua "true"
		action
		"
			currentButtonHelp = 3
		"
	}
	button
	{
		area 3 179 73 55
		bam GUILS10
		sequence 3
		tooltip lua "getTooltipWithHotkey(0,24358)"
		glow lua "true"
		action
		"
			currentButtonHelp = 4
		"
	}
	button
	{
		area 3 234 73 55
		bam GUILS10
		sequence 4
		tooltip lua "getTooltipWithHotkey(1,24356)"
		glow lua "true"
		action
		"
			currentButtonHelp = 5
		"
	}
	button
	{
		area 3 289 73 55
		bam GUILS10
		sequence 5
		tooltip lua "getTooltipWithHotkey(5,24360)"
		glow lua "true"
		action
		"
			currentButtonHelp = 6
		"
	}
	button
	{
		area 3 344 73 55
		bam GUILS10
		sequence 6
		tooltip lua "getTooltipWithHotkey(6,24357)"
		glow lua "true"
		action
		"
			currentButtonHelp = 7
		"
	}
	button
	{
		area 3 399 73 55
		bam GUILS10
		sequence 7
		tooltip lua "getTooltipWithHotkey(7,24362)"
		glow lua "true"
		action
		"
			currentButtonHelp = 8
		"
	}
	button
	{
		area 3 454 73 55
		enabled "e:IsMultiplayer()"
		bam GUILS10
		sequence 8
		tooltip lua "getTooltipWithHotkey(8,24363)"
		glow lua "true"
		action
		"
			currentButtonHelp = 9
		"
	}
}
menu
{
	name 'LEFT_SIDEBAR_BOTTOM_HELP'
	align left bottom
	offset 0 -22
	--combined height of these buttons makes a menu with height = 231, menu is placed into lower left. y pos is offset from top of this menu.
	ignoreEsc
	button
	{
		area 3 0 73 55
		enabled "worldScreen == e:GetActiveEngine()"
		bam GUILS10
		sequence 15
		tooltip lua "getTooltipWithHotkey(28,31813)"
		glow lua "true"
		action
		"
			currentButtonHelp = 10
		"
	}
	button
	{
		area 3 56 73 55
		enabled "worldScreen == e:GetActiveEngine()"
		bam GUILS10
		sequence 16
		tooltip lua "Infinity_FetchString(31827)"  --"getTooltipWithHotkey(16,31827)"
		glow lua "true"
		action
		"
			currentButtonHelp = 11
		"
	}
	button
	{
		area 3 110 73 55
		bam GUILS10
		sequence 9
		tooltip lua "getTooltipWithHotkey(31,11942)"
		glow lua "true"
		action
		"
			currentButtonHelp = 12
		"
	}
	
	
	--begin clock
	label
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 0 182 73 55
		bam "CGEAR"
		frame lua "timer:GetCurrentTime() % 24"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 180 180 180
	}
	label
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 0 182 73 55
		bam "CDIAL"
		frame lua "timer:GetCurrentHour() % timer.TIMESCALE_HOUR_PER_DAY"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 180 180 180
	}
	label
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 0 182 73 55
		bam "CPEN"
		frame lua "timer:GetCurrentTime() % 24"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 180 180 180
	}
	button
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 0 182 73 55
		tooltip lua "worldScreen:GetCurrentTimeString()"
		glow lua "true"
		action
		"
			currentButtonHelp = 23
		"
	}
	--end clock
	label
	{
		--area is preset
		enabled "gameOptions.m_bRenderFrameTimes"
		frameTimes
	}
}

menu
{
	name 'RIGHT_SIDEBAR_HELP'
	align right top
	ignoreEsc
	onOpen
	"
		Infinity_PushMenu('RIGHT_SIDEBAR_BOTTOM_HELP')
	"
	onClose
	"
		Infinity_PopMenu('RIGHT_SIDEBAR_BOTTOM_HELP')
	"
	label
	{
		name 'rightSidebarBackground'
		area 0 0 80 1536
		mosaic GUIWRSP
	}
	label
	{
		area 0 1536 80 1536
		mosaic GUIWRSP
	}
	button
	{
		area 11 17 64 90
		portrait 0
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 0"
		glow lua "true"
		action
		"
			currentButtonHelp = 17
		"
		tooltip lua "Infinity_GetPortraitTooltip(0)"
	}
	button
	{
		area 11 109 64 90
		portrait 1
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 1"
		glow lua "true"
		action
		"
			currentButtonHelp = 18
		"
		tooltip lua "Infinity_GetPortraitTooltip(1)"
	}
	button
	{
		area 11 201 64 90
		portrait 2
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 2"
		glow lua "true"
		action
		"
			currentButtonHelp = 19
		"
		tooltip lua "Infinity_GetPortraitTooltip(2)"
	}
	button
	{
		area 11 293 64 90
		portrait 3
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 3"
		glow lua "true"
		action
		"
			currentButtonHelp = 20
		"
		tooltip lua "Infinity_GetPortraitTooltip(3)"
	}
	button
	{
		area 11 385 64 90
		portrait 4
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 4"
		glow lua "true"
		action
		"
			currentButtonHelp = 21
		"
		tooltip lua "Infinity_GetPortraitTooltip(4)"
	}
	button
	{
		area 11 477 64 90
		portrait 5
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 5"
		glow lua "true"
		action
		"
			currentButtonHelp = 22
		"
		tooltip lua "Infinity_GetPortraitTooltip(5)"
	}
}
menu
{
	name 'RIGHT_SIDEBAR_BOTTOM_HELP'
	align right bottom
	ignoreEsc
	--Buttons form a menu aligned bottom right, with height = 197, y is offset from top of that menu.
	button
	{
		area 6 0 71 48
		enabled "e:IsTouchUI() and worldScreen == e:GetActiveEngine()"
		bam GUILS10
		sequence 14
		glow lua "true"
		action
		"
			currentButtonHelp = 13
		"
	}
	button
	{
		area 6 49 71 48
		enabled "worldScreen == e:GetActiveEngine()"
		tooltip lua "Infinity_FetchString(32729)"
		bam GUILS10
		sequence 11
		glow lua "true"
		action
		"
			currentButtonHelp = 14
		"
	}
	button
	{
		area 6 99 71 48
		enabled "worldScreen == e:GetActiveEngine()"
		tooltip lua "getPartyAITooltip()"
		bam GUILS10
		sequence 10
		glow lua "true"
		action
		"
			currentButtonHelp = 15
		"
	}
	button
	{
		area 6 149 71 48
		enabled "worldScreen == e:GetActiveEngine()"
		tooltip lua "Infinity_FetchString(10485)"
		bam GUILS10
		sequence 13
		glow lua "true"
		action
		"
			currentButtonHelp = 16
		"
	}
}
menu
{
	name "WORLD_ACTIONBAR_HELP"
	align center bottom
	onOpen 
	"
	"
	onClose 
	"
	"
	ignoreEsc
	label
	{
		area 0 0 774 60
		mosaic GUWBTP10
	}
	button
	{
		area 21 12 32 32
		bam RGRNDBUT
		ScaleToClip
		glow lua "true"
		scaleToClip
		action
		"
			currentButtonHelp = 24
		"
	}
	button
	{
		area 68 1 52 52
		actionBar 0
		enabled "buttonArray:GetButtonEnabled(0)"
		tooltip lua "actionBarTooltip[0]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(0)
		"
	}
	button
	{
		area 122 1 52 52
		actionBar 1
		enabled "buttonArray:GetButtonEnabled(1)"
		tooltip lua "actionBarTooltip[1]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(1)
		"
	}
	button
	{
		area 177 1 52 52
		actionBar 2
		enabled "buttonArray:GetButtonEnabled(2)"
		tooltip lua "actionBarTooltip[2]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(2)
		"
	}
	button
	{
		area 231 1 52 52
		actionBar 3
		enabled "buttonArray:GetButtonEnabled(3)"
		tooltip lua "actionBarTooltip[3]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(3)
		"
	}
	button
	{
		area 299 1 52 52
		actionBar 4
		enabled "buttonArray:GetButtonEnabled(4)"
		tooltip lua "actionBarTooltip[4]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(4)
		"
	}
	button
	{
		area 353 1 52 52
		actionBar 5
		enabled "buttonArray:GetButtonEnabled(5)"
		tooltip lua "actionBarTooltip[5]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(5)
		"
	}
	button
	{
		area 407 1 52 52
		actionBar 6
		enabled "buttonArray:GetButtonEnabled(6)"
		tooltip lua "actionBarTooltip[6]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(6)
		"
	}
	button
	{
		area 461 1 52 52
		actionBar 7
		enabled "buttonArray:GetButtonEnabled(7)"
		tooltip lua "actionBarTooltip[7]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(7)
		"
	}
	
	button
	{
		area 528 1 52 52
		actionBar 8
		enabled "buttonArray:GetButtonEnabled(8)"
		tooltip lua "actionBarTooltip[8]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(8)
		"
	}
	button
	{
		area 582 1 52 52
		actionBar 9
		enabled "buttonArray:GetButtonEnabled(9)"
		tooltip lua "actionBarTooltip[9]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(9)
		"
	}
	button
	{
		area 636 1 52 52
		actionBar 10
		enabled "buttonArray:GetButtonEnabled(10)"
		tooltip lua "actionBarTooltip[10]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(10)
		"
	}
	button
	{
		area 689 1 52 52
		actionBar 11
		enabled "buttonArray:GetButtonEnabled(11)"
		tooltip lua "actionBarTooltip[11]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(11)
		"
	}
}menu
{
	name 'CHARGEN_SKILLS'
	modal
	align center center
	ignoreesc
	onopen "currentChargenProficiency = nil; currentChargenThiefSkill = nil; ticksPassed = 0; ticksStarting = 0"
	modal
	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}
	label
	{
		area 18 12 700 56
		text 11983
		text style "rg_trajan"
		text color '$'
	}
	label
	{
		area 304 76 50 44
		text lua "chargen.extraSkillPoints"
		text style "rg_trajan"
		text align center center
	}
	list
	{
		column
		{
			width 70
			label
			{	
				enabled "chargen.thief_skill[currentChargenThiefSkill] == chargen.thief_skill[rowNumber]"
				area 0 0 -1 -1
				bam rgpslct
				ScaleToClip
			}
			label
			{
				area 0 0 180 54
				text lua "Infinity_FetchString(chargen.thief_skill[rowNumber].name)"
				text style "normal"
				text align right center
				
			}
			label
			{
				area 180 0 40 54
				text lua "chargen.thief_skill[rowNumber].value"
				text style "normal"
				text align center center

			}
		}
		
		column
		{
			width 15
			label
			{
				area 0 10 45 45
				bam rgpbtpl
				ScaleToClip
				enabled "createCharScreen:IsThiefSkillPlusMinusButtonClickable()"
				frame lua "currentCellCheck(2)"
				sequence 0
			}
		}
		column
		{
			width 15
			label
			{
				area 0 10 45 45
				bam rgpbtpl
				ScaleToClip
				enabled "createCharScreen:IsThiefSkillPlusMinusButtonClickable()"
				frame lua "currentCellCheck(3)"
				sequence 1

			}
		}
		rowheight 65
		hideHighlight
		area 24 136 515 542
		table "chargen.thief_skill"
		var currentChargenThiefSkill
		scrollbar	'rgpscrl'
		action 
		"
			currentChargenProficiency = nil
			if ticksStarting < 10 then
				if createCharScreen:IsThiefSkillPlusMinusButtonClickable() then
					if cellNumber == 2 then
						createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)
					elseif cellNumber == 3 then
						createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)
					end
				end
			end
			cellNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"
			currentChargenProficiency = nil
			if createCharScreen:IsThiefSkillPlusMinusButtonClickable() then
				ticksStarting = ticksStarting + 1
				if ticksStarting > 10 then
					ticksPassed = ticksPassed + 1
					if ticksPassed > 2 then
						if cellNumber == 3 then
							createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)
						elseif cellNumber == 4 then
							createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)
						end
						ticksPassed = 0
					end
				end
			end
		"
	}
	text
	{
		area 974 136 370 542
		text lua "proficiencyOrGeneralHelp(17248)"
		text style "normal"
		scrollbar	'rgpscrl'
	}
	button
	{
		on escape
		area 24 686 426 76
		bam			RGPBUT1
		text "BACK_BUTTON"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		clickable lua "isChargenProficienciesBackButtonClickable()"
		action "createCharScreen:OnCancelButtonClick();"
	}
	button
	{
		on return
		area 472 686 426 76
		bam			RGPBUT1
		text "DONE_BUTTON"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick();"
	}
}
menu
{
	name 'LEVELUP_PROFICIENCIES'
	modal
	align center center
	ignoreesc
	onopen "currentChargenProficiency = nil; currentChargenThiefSkill = nil; ticksPassed = 0; ticksStarting = 0"
	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}
	label
	{
		area 18 12 700 56
		text lua "getProficienciesTitle()"
		text style "rg_trajan"
		text color '$'
	}
	label
	{
		area 18 80 426 40
		text "PROF_SLOTS_LABEL"
		text style "rg_trajan"
		text align left center
	}
	label
	{
		area 444 76 50 44
		text lua "chargen.extraProficiencySlots"
		text style "rg_trajan"
		text align center center
	}
	label
	{
		area 556 80 326 40
		text "SKILLS_LABEL"
		text style "rg_trajan"
		text align left center
	}
	label
	{
		area 884 76 50 44
		text lua "chargen.extraSkillPoints"
		text style "rg_trajan"
		text align center center
	}
	
	list
	{
		column
		{
			width 80
			label
			{	
				enabled "chargen.proficiency[currentChargenProficiency] == chargen.proficiency[rowNumber]"
				area 0 0 -1 -1
				bam rgpslct
				ScaleToClip
			}
			label
			{
				area 0 0 280 -1
				text lua "Infinity_FetchString(chargen.proficiency[rowNumber].name)"
				text style "normal"
				align right center
				
			}
			label
			{
				bam GUIPFC
				area 300 24 16 16
				align center center
				enabled "chargen.proficiency[rowNumber].value > 4"
			}
			label
			{
				bam GUIPFC
				area 320 24 16 16
				align center center
				enabled "chargen.proficiency[rowNumber].value > 3"
			}
			label
			{
				bam GUIPFC
				area 340 24 16 16
				align center center
				enabled "chargen.proficiency[rowNumber].value > 2"
			}
			label
			{
				bam GUIPFC
				area 360 24 16 16
				align center center
				enabled "chargen.proficiency[rowNumber].value > 1"
			}
			label
			{
				bam GUIPFC
				area 380 24 16 16
				align center center
				enabled "chargen.proficiency[rowNumber].value > 0"
			}
		}

		column
		{
			width 10
			label
			{
				area 0 10 45 45
				bam rgpbtpl
				frame lua "getPlusFrame(2)"
				sequence 0
				ScaleToClip
			}
		}
		column
		{
			width 10
			label
			{
				area 0 10 45 45
				bam rgpbtpl
				sequence 1
				ScaleToClip
				frame lua "getMinusFrame(3)"
			}
		}

		action "
			currentChargenThiefSkill = nil
			if ticksStarting < 10 then
				if cellNumber == 2 and plusButtonClickable(currentChargenProficiency) then
					createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, true)
				elseif cellNumber == 3 and minusButtonClickable(currentChargenProficiency) then
					createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, false)
				end
			end
			cellNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate "
			currentChargenThiefSkill = nil
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 7 then
					if cellNumber == 2 and plusButtonClickable(currentChargenProficiency) then
						createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, true)
					elseif cellNumber == 3 and minusButtonClickable(currentChargenProficiency) then
						createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, false)
					end
					ticksPassed = 0
				end
			end
		"

		rowheight 65
		area 24 136 515 542
		hideHighlight
		table "chargen.proficiency"
		var currentChargenProficiency
		scrollbar	'rgpscrl'

	}
	list
	{
		column
		{
			width 70
			label
			{	
				enabled "chargen.thief_skill[currentChargenThiefSkill] == chargen.thief_skill[rowNumber]"
				area 0 0 -1 -1
				bam rgpslct
				ScaleToClip
			}
			label
			{
				area 0 0 180 54
				text lua "Infinity_FetchString(chargen.thief_skill[rowNumber].name)"
				text style "normal"
				text align right center
				
			}
			label
			{
				area 180 0 40 54
				text lua "chargen.thief_skill[rowNumber].value"
				text style "normal"
				text align left center

			}
		}
		
		column
		{
			width 15
			label
			{
				area 0 10 45 45
				bam rgpbtpl
				ScaleToClip
				enabled "createCharScreen:IsThiefSkillPlusMinusButtonClickable()"
				frame lua "currentCellCheck(2)"
				sequence 0
			}
		}
		column
		{
			width 15
			label
			{
				area 0 10 45 45
				bam rgpbtpl
				ScaleToClip
				enabled "createCharScreen:IsThiefSkillPlusMinusButtonClickable()"
				frame lua "currentCellCheck(3)"
				sequence 1

			}
		}
		rowheight 65
		hideHighlight
		area 556 136 414 542
		table "chargen.thief_skill"
		var currentChargenThiefSkill
		scrollbar	'rgpscrl'
		action 
		"
			currentChargenProficiency = nil
			if ticksStarting < 10 then
				if createCharScreen:IsThiefSkillPlusMinusButtonClickable() then
					if cellNumber == 2 then
						createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)
					elseif cellNumber == 3 then
						createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)
					end
				end
			end
			cellNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"
			currentChargenProficiency = nil
			if createCharScreen:IsThiefSkillPlusMinusButtonClickable() then
				ticksStarting = ticksStarting + 1
				if ticksStarting > 10 then
					ticksPassed = ticksPassed + 1
					if ticksPassed > 2 then
						if cellNumber == 3 then
							createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)
						elseif cellNumber == 4 then
							createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)
						end
						ticksPassed = 0
					end
				end
			end
		"
	}
	text
	{
		area 974 136 370 542
		text lua "proficiencyOrGeneralHelp()"
		text style "normal"
		scrollbar	'rgpscrl'
	}
	button
	{
		enabled "chargen.levelingUp"
		area 974 44 370 76
		bam			RGPBUT1
		text "INFORMATION_BUTTON"
		text style	"rg_trajan"
		align center center
		pad 40 0 40 0
		ScaleToClip
		toggle "levelUpInfoToggle"
		action
		"
			currentChargenProficiency = nil
			currentChargenThiefSkill = nil
		"
	}
	button
	{
		enabled "chargen.levelingUp"
		area 918 686 426 76
		bam			RGPBUT1
		text "HIGH_LEVEL_ABILITIES_BUTTON"
		text style	"rg_trajan"
		align center center
		pad 40 0 40 0
		ScaleToClip
		toggle "levelUpInfoToggle"
		clickable lua "createCharScreen:IsHighLevelAbilitiesButtonClickable()"
		action
		"
			createCharScreen:OnHighLevelAbilitiesButtonClick()
		"
	}
	button
	{
		on escape
		area 24 686 426 76
		bam			RGPBUT1
		text "BACK_BUTTON"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		clickable lua "isChargenProficienciesBackButtonClickable()"
		action "createCharScreen:OnCancelButtonClick();"
	}
	button
	{
		on return
		area 472 686 426 76
		bam			RGPBUT1
		text "DONE_BUTTON"
		text style	"rg_trajan"
		align center center
		ScaleToClip
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action 
		"
			Infinity_PopMenu()
			createCharScreen:OnDoneButtonClick()
		"
	}
	

}
`	
	createPartyOffset = 0
	prerollCharacters = {}

	function scrollPregens()
		if scrollDirection > 0 then
			scrollPregenUp()
		elseif scrollDirection < 0 then
			scrollPregenDown()
		end
	end

	function scrollPregenUp()
		if createPartyOffset > 0 then
			createPartyOffset = createPartyOffset - 1
		end
	end

	function scrollPregenDown()
		if createPartyOffset < (#prerollCharacters - 3) then
			createPartyOffset = createPartyOffset + 1
		end
	end

	function getPregenCharacterName(slotNumber)
		local ret = ""

		if slotNumber + createPartyOffset < #prerollCharacters+1 then
			ret = prerollCharacters[slotNumber+createPartyOffset]["name"]
		end

		return ret
	end

	function getPregenCharacterBiography(slotNumber)
		local ret = ""

		if slotNumber + createPartyOffset < #prerollCharacters+1 then
			ret = prerollCharacters[slotNumber+createPartyOffset]["description"]
		end

		return ret
	end

	function getPregenCharacterPortrait(slotNumber)
		local ret = "noportsm"

		if slotNumber + createPartyOffset < #prerollCharacters+1 then
			ret = prerollCharacters[slotNumber+createPartyOffset]["image"]
		end

		return ret
	end

	function getPregenCharacterFileName(slotNumber)
		local ret = ""

		if slotNumber + createPartyOffset < #prerollCharacters+1 then
			ret = prerollCharacters[slotNumber+createPartyOffset]["file"]
		end

		return ret
	end

	function playAsPreroll(slotNumber)
		local fileName = getPregenCharacterFileName(slotNumber)
		if fileName ~= "" then

		end
	end
	
	function rgGetImportInfo(text)
		local list = {}
		for i in string.gmatch(text, "[^\r\n]+") do
			table.insert(list, i);
		end
		
		return list[1]
	end
`
menu
{
	name 'CHARGEN_SELECTPREGEN'
	align center center
	onOpen
	"
		createPartyOffset = 0
		createCharScreen:GetImportableCharacters()
	"

	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}

	button
	{
		area 0 0 1024 768
		actionScroll
		"
			scrollPregens()
		"
	}

	label
	{
		area 18 12 700 56
		text "CHARGEN_TITLE"
		text style "rg_trajan"
		text color '$'
		actionScroll
		"
			scrollPregens()
		"
	}
	
	--button 
	--{
	--	bitmap "noportsm"
	--	area 48 128 62 90
	--	align center center
	--	actionScroll
	--	"
	--		scrollPregens()
	--	"
	--}
	--label
	--{
	--	area 134 106 534 30
	--	text style "label"
	--	align left top
	--	text lua "Infinity_FetchString(10264)"
	--	actionScroll
	--	"
	--		scrollPregens()
	--	"
	--}
	--label
	--{
	--	area 152 148 502 82
	--	text style "label"
	--	align left top
	--	text lua "Infinity_FetchString(34752)"
	--}
	button 
	{
		bam RGPBUT1
		area 362 70 640 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "CREATE_BUTTON"
		action 
		"
			Infinity_PopMenu()
			Infinity_PushMenu('CHARGEN')
		"
	}

	label
	{
		area 36 202 94 138
		bam rgpporl
		ScaleToClip
	}
	button 
	{
		bitmap lua 'getPregenCharacterPortrait(1)'
		area 42 206 82 130
		align center center
		actionScroll
		"
			scrollPregens()
		"
	}
	label
	{
		area 152 216 600 104
		text style "normal"
		align left top
		text lua "getPregenCharacterName(1) .. '\n' .. rgGetImportInfo(getPregenCharacterBiography(1))"
		actionScroll
		"
			scrollPregens()
		"
	}
	button 
	{
		bam RGPBUT1
		area 788 236 538 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "PLAY_IMPORT_BUTTON"
		action 
		"
			Infinity_PopMenu()
			createCharScreen:OnPrerollCharacterPick(0 + createPartyOffset)
		"
	}

	label
	{
		area 36 346 94 138
		bam rgpporl
		ScaleToClip
	}
	button 
	{
		bitmap lua 'getPregenCharacterPortrait(2)'
		area 42 350 82 130
		align center center
		actionScroll
		"
			scrollPregens()
		"
	}
	label
	{
		area 152 360 600 104
		text style "normal"
		align left top
		text lua "getPregenCharacterName(2) .. '\n' .. rgGetImportInfo(getPregenCharacterBiography(2))"
		actionScroll
		"
			scrollPregens()
		"
	}
	button 
	{
		bam RGPBUT1
		area 784 380 542 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "PLAY_IMPORT_BUTTON"
		action 
		"
			Infinity_PopMenu()
			createCharScreen:OnPrerollCharacterPick(1 + createPartyOffset)
		"
	}

	label
	{
		area 36 490 94 138
		bam rgpporl
		ScaleToClip
	}
	button 
	{
		bitmap lua 'getPregenCharacterPortrait(3)'
		area 42 494 82 130
		align center center
		actionScroll
		"
			scrollPregens()
		"
	}
	label
	{
		area 152 504 600 104
		text style "normal"
		align left top
		text lua "getPregenCharacterName(3) .. '\n' .. rgGetImportInfo(getPregenCharacterBiography(3))"
		actionScroll
		"
			scrollPregens()
		"
	}
	button 
	{
		bam RGPBUT1
		area 784 524 542 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "PLAY_IMPORT_BUTTON"
		action 
		"
			Infinity_PopMenu()
			createCharScreen:OnPrerollCharacterPick(2 + createPartyOffset)
		"
	}


	button 
	{
		--bam 'GUISV10'
		--sequence 0
		--area 28 80 116 116
		area		36 74 94 124
		bam		RGPJBUT
		sequence	3
		scaleToClip
		action 
		"
			scrollPregenUp()
		"
		actionScroll
		"
			scrollPregens()
		"
	}
	button 
	{
		--bam 'GUISV10'
		--sequence 1
		--area 28 636 116 116
		area		36 636 94 124
		bam		RGPJBUT
		sequence	4
		scaleToClip
		action 
		"
			scrollPregenDown()
		"
		actionScroll
		"
			scrollPregens()
		"
	}
	button 
	{
		on escape
		bam RGPBUT1
		area 362 678 640 82
		text style "rg_trajan"
		pad 30 5 30 5
		align center center
		ScaleToClip
		text "BACK_BUTTON"
		action 
		"
			Infinity_PopMenu()
			createCharScreen:OnMainCancelButtonClick()
		"
	}
}
`
	contingencySpellType = 0
	contingencySpellLevel = 1
	contingencySwapTable = {}
	function getContingencyTitle()
		return t(mageBookStrings[contingencyResRef].title)
	end
	function getContingencySpellType()
		local ret = ""
		
		if contingencySpellType == 0 then
			ret = t("MAGE_SPELLS_TITLE")
		else
			ret = t("ASSIGN_KEYS_PRIESTSPELLS")
		end

		return ret
	end
	function getContingencySpellLevel()
		local ret = ""
		
		ret = t("LEVEL_LABEL").." "..contingencySpellLevel

		return ret
	end
	function getContingencyTypeButtonText()
		local ret

		if contingencySpellType == 0 then
			ret = Infinity_FetchString(7204)
		else
			ret = Infinity_FetchString(7203)
		end

		return ret
	end



	function filterContingencyMageSpellsIwd()
		local out = {}
		if contingencySpellType == 0 then
			if characters[id].mageSpells ~= nil and characters[id].mageSpells[contingencySpellLevel] ~= nil then
				for k,v in pairs(characters[id].mageSpells[contingencySpellLevel]) do
					if v.castableCount > 0 and mageScreen:SpellAllowedForContingency(v.level, v.resref) then
						tableInsert(out, v)
					end
				end
			end
		else
			if characters[id].priestSpells ~= nil and characters[id].priestSpells[contingencySpellLevel] ~= nil then
				for k,v in pairs(characters[id].priestSpells[contingencySpellLevel]) do
					if v.castableCount > 0 and mageScreen:SpellAllowedForContingency(v.level, v.resref) then
						tableInsert(out, v)
					end
				end
			end
		end
		return out
	end
	function getContingencySpellIcon(slotNumber)
		local ret = ""

		if slotNumber <= #bookSpells then
			ret = bookSpells[slotNumber].icon
		end

		return ret
	end
	function getContingencySpellCastableCount(slotNumber)
		local ret = ""

		if slotNumber <= #bookSpells and bookSpells[slotNumber].castableCount > 1 then
			ret = bookSpells[slotNumber].castableCount
		end

		return ret
	end
	function contingencyDisplaySpellDescription(slotNumber)
		if slotNumber <= #bookSpells then
			contingencyDescription = bookSpells[slotNumber].description
		end
	end
	function contingencyDisplaySetSpellDescription(slotNumber)
		if slotNumber <= #sequencerSpells then
			contingencyDescription = sequencerSpells[slotNumber].description
		end
	end
	function changeContingencySpellLevel(changeAmount)
		local newLevel = contingencySpellLevel + changeAmount
		if newLevel >= 1 and newLevel <= maxMagePage then
			contingencySpellLevel = newLevel
			bookSpells = filterContingencyMageSpellsIwd()
		end
	end
	function swapContingencySpellType()
		contingencySpellType = 1 - contingencySpellType
		if contingencySpellType == 0 and contingencySpellLevel > maxMagePage then
			contingencySpellLevel = maxMagePage
		elseif contingencySpellType == 1 and contingencySpellLevel > math.min(maxMagePage, 7) then
			contingencySpellLevel = math.min(maxMagePage, 7)
		end
	end
	function getContingencySetSpellIcon(slotNumber)
		local ret = ""

		if sequencerSpells ~= nil and #sequencerSpells >= slotNumber then
			ret = sequencerSpells[slotNumber].icon
		end

		return ret
	end
	function contingencyCompleteIwd()
		local ret = false

		if showContingency and #sequencerSpells == contingencyMaxSpells and (currentContingencyCondition or 0) > 0 and (currentContingencyTarget or 0) > 0 then
			ret = true
		elseif not showContingency and #sequencerSpells == contingencyMaxSpells then
			ret = true
		end

		return ret
	end
`
menu
{
	name 'CONTINGENCY'
	align center center
	modal

	onOpen
	"
		currentContingencyCondition = 0
		currentContingencyTarget = 0
		contingencySpellType = 0
		contingencySpellLevel = 1
		bookSpells = filterContingencyMageSpellsIwd()
		contingencyDescription = mageBookStrings[contingencyResRef].tip
	"

	label
	{
		area 0 0 1365 768
		bam "RGBACKG"
		ScaleToClip
	}
	label
	{
		area 24 16 1074 44
		text lua "getContingencyTitle()"
		text style "rg_trajan"
		text color "$"
	}

	label
	{
		area 628 75 356 37
		text "CONDITION_LABEL"
		enabled 	"showContingency"
		text style "normal"
		text align left center
	}
	list
	{
		column 
		{ 
			width 100
			label
			{	
				enabled "rowNumber == currentContingencyCondition"
				area 0 0 -1 -1
				bam rgpslct
				ScaleToClip
			}
			label
			{
				area		10 0 -1 -1
				text lua "Infinity_FetchString( contingencyConditions[rowNumber].strref)"
				text style "normal"
				text align left center
			}
		}

		area 628 120 358 246
		hidehighlight
		rowheight	40
		enabled 	"showContingency"
		table		"contingencyConditions"
		var		currentContingencyCondition
		scrollbar	'rgpscrl'
		action
		"
			contingencyDescription = contingencyConditions[currentContingencyCondition].desc
		"

	}

	label
	{
		area 994 75 358 37
		text "TARGET_LABEL"
		text style "normal"
		text align left center
		enabled 	"showContingency"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{	
				enabled "rowNumber == currentContingencyTarget"
				area 0 0 -1 -1
				bam rgpslct
				ScaleToClip
			}
			label
			{
				area		10 0 -1 -1
				text lua "Infinity_FetchString( contingencyTargets[rowNumber].strref)"
				text style "normal"
				text align left center
			}
		}

		area 994 120 358 246
		hideHighlight
		enabled 	"showContingency"
		rowheight	40
		table		"contingencyTargets"
		var		currentContingencyTarget
		scrollbar	'rgpscrl'
		action
		"
			contingencyDescription = contingencyTargets[currentContingencyTarget].desc
		"
	}

	--label
	--{
	--	area 128 516 250 49
	--	text lua "getContingencySpellType()"
	--	text style "normal"
	--	text align left center
	--}

	label
	{
		area 412 372 200 49
		text lua "getContingencySpellLevel()"
		text style "normal"
		text align center center
	}
	button
	{
		area 412 422 100 100
		bam rgpbtpl
		scaleToClip
		action
		"	
			changeContingencySpellLevel(1)
		"
	}
	button
	{
		area 512 422 100 100
		bam rgpbtpl
		scaleToClip
		sequence 1
		action
		"	
			changeContingencySpellLevel(-1)
		"
	}
	button
	{
		area 20 68 558 78
		bam		RGPBUT1
		ScaleToClip
		text lua "getContingencySpellType()" --getContingencyTypeButtonText()
		text style "rg_trajan"
		align center center
		sequenceonce "getRandomButtonSequence('GUIBUTNS')"
		action
		"
			swapContingencySpellType()
			bookSpells = filterContingencyMageSpellsIwd()
		"
	}

	button
	{
		area 20 158 100 100
		bam rgpspbck
		scaleToClip
		icon lua "getContingencySpellIcon(1)"
		count lua "getContingencySpellCastableCount(1)"
		action
		"
			contingencyDisplaySpellDescription(1)
			if #sequencerSpells < contingencyMaxSpells then
				mageScreen:SequenceSpell( bookSpells[1].resref, bookSpells[1].masterResref )
			end
		"
		actionAlt
		"
			contingencyDisplaySpellDescription(1)
		"
	}
	button
	{
		area 120 158 100 100
		bam rgpspbck
		scaleToClip
		icon lua "getContingencySpellIcon(2)"
		count lua "getContingencySpellCastableCount(2)"
		action
		"
			contingencyDisplaySpellDescription(2)
			if #sequencerSpells < contingencyMaxSpells then
				mageScreen:SequenceSpell( bookSpells[2].resref, bookSpells[2].masterResref )
			end
		"
		actionAlt
		"
			contingencyDisplaySpellDescription(2)
		"
	}
	button
	{
		area 220 158 100 100
		bam rgpspbck
		scaleToClip
		icon lua "getContingencySpellIcon(3)"
		count lua "getContingencySpellCastableCount(3)"
		action
		"
			contingencyDisplaySpellDescription(3)
			if #sequencerSpells < contingencyMaxSpells then
				mageScreen:SequenceSpell( bookSpells[3].resref, bookSpells[3].masterResref )
			end
		"
		actionAlt
		"
			contingencyDisplaySpellDescription(3)
		"
	}
	button
	{
		area 320 158 100 100
		bam rgpspbck
		scaleToClip
		icon lua "getContingencySpellIcon(4)"
		count lua "getContingencySpellCastableCount(4)"
		action
		"
			contingencyDisplaySpellDescription(4)
			if #sequencerSpells < contingencyMaxSpells then
				mageScreen:SequenceSpell( bookSpells[4].resref, bookSpells[4].masterResref )
			end
		"
		actionAlt
		"
			contingencyDisplaySpellDescription(4)
		"
	}
	button
	{
		area 420 158 100 100
		bam rgpspbck
		scaleToClip
		icon lua "getContingencySpellIcon(5)"
		count lua "getContingencySpellCastableCount(5)"
		action
		"
			contingencyDisplaySpellDescription(5)
			if #sequencerSpells < contingencyMaxSpells then
				mageScreen:SequenceSpell( bookSpells[5].resref, bookSpells[5].masterResref )
			end
		"
		actionAlt
		"
			contingencyDisplaySpellDescription(5)
		"
	}
	button
	{
		area 520 158 100 100
		bam rgpspbck
		scaleToClip
		icon lua "getContingencySpellIcon(6)"
		count lua "getContingencySpellCastableCount(6)"
		action
		"
			contingencyDisplaySpellDescription(6)
			if #sequencerSpells < contingencyMaxSpells then
				mageScreen:SequenceSpell( bookSpells[6].resref, bookSpells[6].masterResref )
			end
		"
		actionAlt
		"
			contingencyDisplaySpellDescription(6)
		"
	}
	button
	{
		area 20 258 100 100
		bam rgpspbck
		scaleToClip
		icon lua "getContingencySpellIcon(7)"
		count lua "getContingencySpellCastableCount(7)"
		action
		"
			contingencyDisplaySpellDescription(7)
			if #sequencerSpells < contingencyMaxSpells then
				mageScreen:SequenceSpell( bookSpells[7].resref, bookSpells[7].masterResref )
			end
		"
		actionAlt
		"
			contingencyDisplaySpellDescription(7)
		"
	}
	button
	{
		area 120 258 100 100
		bam rgpspbck
		scaleToClip
		icon lua "getContingencySpellIcon(8)"
		count lua "getContingencySpellCastableCount(8)"
		action
		"
			contingencyDisplaySpellDescription(8)
			if #sequencerSpells < contingencyMaxSpells then
				mageScreen:SequenceSpell( bookSpells[8].resref, bookSpells[8].masterResref )
			end
		"
		actionAlt
		"
			contingencyDisplaySpellDescription(8)
		"
	}
	button
	{
		area 220 258 100 100
		bam rgpspbck
		scaleToClip
		icon lua "getContingencySpellIcon(9)"
		count lua "getContingencySpellCastableCount(9)"
		action
		"
			contingencyDisplaySpellDescription(9)
			if #sequencerSpells < contingencyMaxSpells then
				mageScreen:SequenceSpell( bookSpells[9].resref, bookSpells[9].masterResref )
			end
		"
		actionAlt
		"
			contingencyDisplaySpellDescription(9)
		"
	}
	button
	{
		area 320 258 100 100
		bam rgpspbck
		scaleToClip
		icon lua "getContingencySpellIcon(10)"
		count lua "getContingencySpellCastableCount(10)"
		action
		"
			contingencyDisplaySpellDescription(10)
			if #sequencerSpells < contingencyMaxSpells then
				mageScreen:SequenceSpell( bookSpells[10].resref, bookSpells[10].masterResref )
			end
		"
		actionAlt
		"
			contingencyDisplaySpellDescription(10)
		"
	}
	button
	{
		area 420 258 100 100
		bam rgpspbck
		scaleToClip
		icon lua "getContingencySpellIcon(11)"
		count lua "getContingencySpellCastableCount(11)"
		action
		"
			contingencyDisplaySpellDescription(11)
			if #sequencerSpells < contingencyMaxSpells then
				mageScreen:SequenceSpell( bookSpells[11].resref, bookSpells[11].masterResref )
			end
		"
		actionAlt
		"
			contingencyDisplaySpellDescription(11)
		"
	}
	button
	{
		area 520 258 100 100
		bam rgpspbck
		scaleToClip
		icon lua "getContingencySpellIcon(12)"
		count lua "getContingencySpellCastableCount(12)"
		action
		"
			contingencyDisplaySpellDescription(12)
			if #sequencerSpells < contingencyMaxSpells then
				mageScreen:SequenceSpell( bookSpells[12].resref, bookSpells[12].masterResref )
			end
		"
		actionAlt
		"
			contingencyDisplaySpellDescription(12)
		"
	}

	button
	{
		area 20 411 125 125
		enabled "contingencyMaxSpells >= 1"
		bam rgpspbck
		scaleToClip
		icon lua "getContingencySetSpellIcon(1)"
		sequenceonce "getRandomButtonSequence('GUIBTBUT')"
		action
		"
			contingencyDisplaySetSpellDescription(1)
			mageScreen:UnSequenceSpell( sequencerSpells[1].resref, sequencerSpells[1].masterResref )
			table.remove(sequencerSpells, 1)
		"
		actionAlt
		"
			contingencyDisplaySetSpellDescription(1)
		"
	}
	button
	{
		area 145 411 125 125
		enabled "contingencyMaxSpells >= 2"
		bam rgpspbck
		scaleToClip
		icon lua "getContingencySetSpellIcon(2)"
		sequenceonce "getRandomButtonSequence('GUIBTBUT')"
		action
		"
			contingencyDisplaySetSpellDescription(2)
			mageScreen:UnSequenceSpell( sequencerSpells[2].resref, sequencerSpells[2].masterResref )
			table.remove(sequencerSpells, 2)
		"
		actionAlt
		"
			contingencyDisplaySetSpellDescription(2)
		"
	}
	button
	{
		area 270 411 125 125
		enabled "contingencyMaxSpells >= 3"
		bam rgpspbck
		scaleToClip
		icon lua "getContingencySetSpellIcon(3)"
		sequenceonce "getRandomButtonSequence('GUIBTBUT')"
		action
		"
			contingencyDisplaySetSpellDescription(3)
			mageScreen:UnSequenceSpell( sequencerSpells[3].resref, sequencerSpells[3].masterResref )
			table.remove(sequencerSpells, 3)
		"
		actionAlt
		"
			contingencyDisplaySetSpellDescription(3)
		"
	}

	text
	{
		area 628 372 724 382
		text lua "Infinity_FetchString(contingencyDescription)"
		text style "normal"
		scrollbar	'rgpscrl'
	}
	--text
	--{
	--	area 40 474 770 123
	--	text lua "Infinity_FetchString(contingencyDescription)"
	--	text style "normal"
	--	text align left top
	--	scrollbar "rgdscrl1"
	--}

	button
	{
		on escape
		area 20 564 562 86
		bam		RGPBUT1
		ScaleToClip
		text "CANCEL_BUTTON"
		text style "rg_trajan"
		align center center
		action 
		"
			mageScreen:CancelSequencingSpells()
			e:SelectEngine(worldScreen)
		"
	}
	button
	{
		on return
		area 20 658 562 86
		bam		RGPBUT1
		ScaleToClip
		text "DONE_BUTTON"
		text style "rg_trajan"
		align center center
		clickable lua "contingencyCompleteIwd()"
		action 
		"
			mageScreen:DoneSequencingSpells()
			e:SelectEngine(worldScreen)
		"
	}
}